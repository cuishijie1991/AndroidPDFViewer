/*!  2017-03-23 */

"use strict";
document.webL10n = function(a, b, c) {
    function d() {
        return b.querySelectorAll('link[type="application/l10n"]')
    }
    function e() {
        var a = b.querySelector('script[type="application/l10n"]');
        return a ? JSON.parse(a.innerHTML) : null
    }
    function f(a) {
        return a ? a.querySelectorAll("*[data-l10n-id]") : []
    }
    function g(a) {
        if (!a) return {};
        var b = a.getAttribute("data-l10n-id"),
        c = a.getAttribute("data-l10n-args"),
        d = {};
        if (c) try {
            d = JSON.parse(c)
        } catch(e) {
            console.warn("could not parse arguments for #" + b)
        }
        return {
            id: b,
            args: d
        }
    }
    function h(a) {
        var c = b.createEvent("Event");
        c.initEvent("localized", !0, !1),
        c.language = a,
        b.dispatchEvent(c)
    }
    function i(a, b, c) {
        b = b ||
        function(a) {},
        c = c ||
        function() {};
        var d = new XMLHttpRequest;
        d.open("GET", a, z),
        d.overrideMimeType && d.overrideMimeType("text/plain; charset=utf-8"),
        d.onreadystatechange = function() {
            4 == d.readyState && (200 == d.status || 0 === d.status ? b(d.responseText) : c())
        },
        d.onerror = c,
        d.ontimeout = c;
        try {
            d.send(null)
        } catch(e) {
            c()
        }
    }
    function j(a, b, c, d) {
        function e(a) {
            return a.lastIndexOf("\\") < 0 ? a: a.replace(/\\\\/g, "\\").replace(/\\n/g, "\n").replace(/\\r/g, "\r").replace(/\\t/g, "\t").replace(/\\b/g, "\b").replace(/\\f/g, "\f").replace(/\\{/g, "{").replace(/\\}/g, "}").replace(/\\"/g, '"').replace(/\\'/g, "'")
        }
        function f(a, c) {
            function d(a, c, d) {
                function i() {
                    for (;;) {
                        if (!o.length) return void d();
                        var a = o.shift();
                        if (!k.test(a)) {
                            if (c) {
                                if (s = l.exec(a)) {
                                    p = s[1].toLowerCase(),
                                    r = "*" !== p && p !== b && p !== q;
                                    continue
                                }
                                if (r) continue;
                                if (s = m.exec(a)) return void f(g + s[1], i)
                            }
                            var j = a.match(n);
                            j && 3 == j.length && (h[j[1]] = e(j[2]))
                        }
                    }
                }
                var o = a.replace(j, "").split(/[\r\n]+/),
                p = "*",
                q = b.split("-", 1)[0],
                r = !1,
                s = "";
                i()
            }
            function f(a, b) {
                i(a,
                function(a) {
                    d(a, !1, b)
                },
                function() {
                    console.warn(a + " not found."),
                    b()
                })
            }
            var h = {},
            j = /^\s*|\s*$/,
            k = /^\s*#|^\s*$/,
            l = /^\s*\[(.*)\]\s*$/,
            m = /^\s*@import\s+url\((.*)\)\s*$/i,
            n = /^([^=\s]*)\s*=\s*(.+)$/;
            d(a, !0,
            function() {
                c(h)
            })
        }
        var g = a.replace(/[^\/]*$/, "") || "./";
        i(a,
        function(a) {
            u += a,
            f(a,
            function(a) {
                for (var b in a) {
                    var d, e, f = b.lastIndexOf(".");
                    f > 0 ? (d = b.substring(0, f), e = b.substr(f + 1)) : (d = b, e = v),
                    t[d] || (t[d] = {}),
                    t[d][e] = a[b]
                }
                c && c()
            })
        },
        d)
    }
    function k(a, b) {
        function c(a) {
            var b = a.href;
            this.load = function(a, c) {
                j(b, a, c,
                function() {
                    console.warn(b + " not found."),
                    console.warn('"' + a + '" resource not found'),
                    w = "",
                    c()
                })
            }
        }
        a && (a = a.toLowerCase()),
        b = b ||
        function() {},
        l(),
        w = a;
        var f = d(),
        g = f.length;
        if (0 === g) {
            var i = e();
            if (i && i.locales && i.default_locale) {
                if (console.log("using the embedded JSON directory, early way out"), t = i.locales[a], !t) {
                    var k = i.default_locale.toLowerCase();
                    for (var m in i.locales) {
                        if (m = m.toLowerCase(), m === a) {
                            t = i.locales[a];
                            break
                        }
                        m === k && (t = i.locales[k])
                    }
                }
                b()
            } else console.log("no resource to load, early way out");
            return h(a),
            void(y = "complete")
        }
        var n = null,
        o = 0;
        n = function() {
            o++,
            o >= g && (b(), h(a), y = "complete")
        };
        for (var p = 0; p < g; p++) {
            var q = new c(f[p]);
            q.load(a, n)
        }
    }
    function l() {
        t = {},
        u = "",
        w = ""
    }
    function m(a) {
        function b(a, b) {
            return b.indexOf(a) !== -1
        }
        function c(a, b, c) {
            return b <= a && a <= c
        }
        var d = {
            af: 3,
            ak: 4,
            am: 4,
            ar: 1,
            asa: 3,
            az: 0,
            be: 11,
            bem: 3,
            bez: 3,
            bg: 3,
            bh: 4,
            bm: 0,
            bn: 3,
            bo: 0,
            br: 20,
            brx: 3,
            bs: 11,
            ca: 3,
            cgg: 3,
            chr: 3,
            cs: 12,
            cy: 17,
            da: 3,
            de: 3,
            dv: 3,
            dz: 0,
            ee: 3,
            el: 3,
            en: 3,
            eo: 3,
            es: 3,
            et: 3,
            eu: 3,
            fa: 0,
            ff: 5,
            fi: 3,
            fil: 4,
            fo: 3,
            fr: 5,
            fur: 3,
            fy: 3,
            ga: 8,
            gd: 24,
            gl: 3,
            gsw: 3,
            gu: 3,
            guw: 4,
            gv: 23,
            ha: 3,
            haw: 3,
            he: 2,
            hi: 4,
            hr: 11,
            hu: 0,
            id: 0,
            ig: 0,
            ii: 0,
            is: 3,
            it: 3,
            iu: 7,
            ja: 0,
            jmc: 3,
            jv: 0,
            ka: 0,
            kab: 5,
            kaj: 3,
            kcg: 3,
            kde: 0,
            kea: 0,
            kk: 3,
            kl: 3,
            km: 0,
            kn: 0,
            ko: 0,
            ksb: 3,
            ksh: 21,
            ku: 3,
            kw: 7,
            lag: 18,
            lb: 3,
            lg: 3,
            ln: 4,
            lo: 0,
            lt: 10,
            lv: 6,
            mas: 3,
            mg: 4,
            mk: 16,
            ml: 3,
            mn: 3,
            mo: 9,
            mr: 3,
            ms: 0,
            mt: 15,
            my: 0,
            nah: 3,
            naq: 7,
            nb: 3,
            nd: 3,
            ne: 3,
            nl: 3,
            nn: 3,
            no: 3,
            nr: 3,
            nso: 4,
            ny: 3,
            nyn: 3,
            om: 3,
            or: 3,
            pa: 3,
            pap: 3,
            pl: 13,
            ps: 3,
            pt: 3,
            rm: 3,
            ro: 9,
            rof: 3,
            ru: 11,
            rwk: 3,
            sah: 0,
            saq: 3,
            se: 7,
            seh: 3,
            ses: 0,
            sg: 0,
            sh: 11,
            shi: 19,
            sk: 12,
            sl: 14,
            sma: 7,
            smi: 7,
            smj: 7,
            smn: 7,
            sms: 7,
            sn: 3,
            so: 3,
            sq: 3,
            sr: 11,
            ss: 3,
            ssy: 3,
            st: 3,
            sv: 3,
            sw: 3,
            syr: 3,
            ta: 3,
            te: 3,
            teo: 3,
            th: 0,
            ti: 4,
            tig: 3,
            tk: 3,
            tl: 4,
            tn: 3,
            to: 0,
            tr: 0,
            ts: 3,
            tzm: 22,
            uk: 11,
            ur: 3,
            ve: 3,
            vi: 0,
            vun: 3,
            wa: 4,
            wae: 3,
            wo: 0,
            xh: 3,
            xog: 3,
            yo: 0,
            zh: 0,
            zu: 3
        },
        e = {
            0 : function(a) {
                return "other"
            },
            1 : function(a) {
                return c(a % 100, 3, 10) ? "few": 0 === a ? "zero": c(a % 100, 11, 99) ? "many": 2 == a ? "two": 1 == a ? "one": "other"
            },
            2 : function(a) {
                return 0 !== a && a % 10 === 0 ? "many": 2 == a ? "two": 1 == a ? "one": "other"
            },
            3 : function(a) {
                return 1 == a ? "one": "other"
            },
            4 : function(a) {
                return c(a, 0, 1) ? "one": "other"
            },
            5 : function(a) {
                return c(a, 0, 2) && 2 != a ? "one": "other"
            },
            6 : function(a) {
                return 0 === a ? "zero": a % 10 == 1 && a % 100 != 11 ? "one": "other"
            },
            7 : function(a) {
                return 2 == a ? "two": 1 == a ? "one": "other"
            },
            8 : function(a) {
                return c(a, 3, 6) ? "few": c(a, 7, 10) ? "many": 2 == a ? "two": 1 == a ? "one": "other"
            },
            9 : function(a) {
                return 0 === a || 1 != a && c(a % 100, 1, 19) ? "few": 1 == a ? "one": "other"
            },
            10 : function(a) {
                return c(a % 10, 2, 9) && !c(a % 100, 11, 19) ? "few": a % 10 != 1 || c(a % 100, 11, 19) ? "other": "one"
            },
            11 : function(a) {
                return c(a % 10, 2, 4) && !c(a % 100, 12, 14) ? "few": a % 10 === 0 || c(a % 10, 5, 9) || c(a % 100, 11, 14) ? "many": a % 10 == 1 && a % 100 != 11 ? "one": "other"
            },
            12 : function(a) {
                return c(a, 2, 4) ? "few": 1 == a ? "one": "other"
            },
            13 : function(a) {
                return c(a % 10, 2, 4) && !c(a % 100, 12, 14) ? "few": 1 != a && c(a % 10, 0, 1) || c(a % 10, 5, 9) || c(a % 100, 12, 14) ? "many": 1 == a ? "one": "other"
            },
            14 : function(a) {
                return c(a % 100, 3, 4) ? "few": a % 100 == 2 ? "two": a % 100 == 1 ? "one": "other"
            },
            15 : function(a) {
                return 0 === a || c(a % 100, 2, 10) ? "few": c(a % 100, 11, 19) ? "many": 1 == a ? "one": "other"
            },
            16 : function(a) {
                return a % 10 == 1 && 11 != a ? "one": "other"
            },
            17 : function(a) {
                return 3 == a ? "few": 0 === a ? "zero": 6 == a ? "many": 2 == a ? "two": 1 == a ? "one": "other"
            },
            18 : function(a) {
                return 0 === a ? "zero": c(a, 0, 2) && 0 !== a && 2 != a ? "one": "other"
            },
            19 : function(a) {
                return c(a, 2, 10) ? "few": c(a, 0, 1) ? "one": "other"
            },
            20 : function(a) {
                return ! c(a % 10, 3, 4) && a % 10 != 9 || c(a % 100, 10, 19) || c(a % 100, 70, 79) || c(a % 100, 90, 99) ? a % 1e6 === 0 && 0 !== a ? "many": a % 10 != 2 || b(a % 100, [12, 72, 92]) ? a % 10 != 1 || b(a % 100, [11, 71, 91]) ? "other": "one": "two": "few"
            },
            21 : function(a) {
                return 0 === a ? "zero": 1 == a ? "one": "other"
            },
            22 : function(a) {
                return c(a, 0, 1) || c(a, 11, 99) ? "one": "other"
            },
            23 : function(a) {
                return c(a % 10, 1, 2) || a % 20 === 0 ? "one": "other"
            },
            24 : function(a) {
                return c(a, 3, 10) || c(a, 13, 19) ? "few": b(a, [2, 12]) ? "two": b(a, [1, 11]) ? "one": "other"
            }
        },
        f = d[a.replace(/-.*$/, "")];
        return f in e ? e[f] : (console.warn("plural form unknown for [" + a + "]"),
        function() {
            return "other"
        })
    }
    function n(a, b, c) {
        var d = t[a];
        if (!d) {
            if (console.warn("#" + a + " is undefined."), !c) return null;
            d = c
        }
        var e = {};
        for (var f in d) {
            var g = d[f];
            g = o(g, b, a, f),
            g = p(g, b, a),
            e[f] = g
        }
        return e
    }
    function o(a, b, c, d) {
        var e = /\{\[\s*([a-zA-Z]+)\(([a-zA-Z]+)\)\s*\]\}/,
        f = e.exec(a);
        if (!f || !f.length) return a;
        var g, h = f[1],
        i = f[2];
        if (b && i in b ? g = b[i] : i in t && (g = t[i]), h in x) {
            var j = x[h];
            a = j(a, g, c, d)
        }
        return a
    }
    function p(a, b, c) {
        var d = /\{\{\s*(.+?)\s*\}\}/g;
        return a.replace(d,
        function(a, d) {
            return b && d in b ? b[d] : d in t ? t[d] : (console.log("argument {{" + d + "}} for #" + c + " is undefined."), a)
        })
    }
    function q(a) {
        var c = g(a);
        if (c.id) {
            var d = n(c.id, c.args);
            if (!d) return void console.warn("#" + c.id + " is undefined.");
            if (d[v]) {
                if (0 === r(a)) a[v] = d[v];
                else {
                    for (var e = a.childNodes,
                    f = !1,
                    h = 0,
                    i = e.length; h < i; h++) 3 === e[h].nodeType && /\S/.test(e[h].nodeValue) && (f ? e[h].nodeValue = "": (e[h].nodeValue = d[v], f = !0));
                    if (!f) {
                        var j = b.createTextNode(d[v]);
                        a.insertBefore(j, a.firstChild)
                    }
                }
                delete d[v]
            }
            for (var k in d) a[k] = d[k]
        }
    }
    function r(a) {
        if (a.children) return a.children.length;
        if ("undefined" != typeof a.childElementCount) return a.childElementCount;
        for (var b = 0,
        c = 0; c < a.childNodes.length; c++) b += 1 === a.nodeType ? 1 : 0;
        return b
    }
    function s(a) {
        a = a || b.documentElement;
        for (var c = f(a), d = c.length, e = 0; e < d; e++) q(c[e]);
        q(a)
    }
    var t = {},
    u = "",
    v = "textContent",
    w = "",
    x = {},
    y = "loading",
    z = !0;
    return x.plural = function(a, b, c, d) {
        var e = parseFloat(b);
        if (isNaN(e)) return a;
        if (d != v) return a;
        x._pluralRules || (x._pluralRules = m(w));
        var f = "[" + x._pluralRules(e) + "]";
        return 0 === e && c + "[zero]" in t ? a = t[c + "[zero]"][d] : 1 == e && c + "[one]" in t ? a = t[c + "[one]"][d] : 2 == e && c + "[two]" in t ? a = t[c + "[two]"][d] : c + f in t ? a = t[c + f][d] : c + "[other]" in t && (a = t[c + "[other]"][d]),
        a
    },
    {
        get: function(a, b, c) {
            var d = a.lastIndexOf("."),
            e = v;
            d > 0 && (e = a.substr(d + 1), a = a.substring(0, d));
            var f;
            c && (f = {},
            f[e] = c);
            var g = n(a, b, f);
            return g && e in g ? g[e] : "{{" + a + "}}"
        },
        getData: function() {
            return t
        },
        getText: function() {
            return u
        },
        getLanguage: function() {
            return w
        },
        setLanguage: function(a, b) {
            k(a,
            function() {
                b && b(),
                s()
            })
        },
        getDirection: function() {
            var a = ["ar", "he", "fa", "ps", "ur"],
            b = w.split("-", 1)[0];
            return a.indexOf(b) >= 0 ? "rtl": "ltr"
        },
        translate: s,
        getReadyState: function() {
            return y
        },
        ready: function(c) {
            c && ("complete" == y || "interactive" == y ? a.setTimeout(function() {
                c()
            }) : b.addEventListener && b.addEventListener("localized",
            function a() {
                b.removeEventListener("localized", a),
                c()
            }))
        }
    }
} (window, document),
function(a, b) {
    "object" == typeof exports && "object" == typeof module ? module.exports = b() : "function" == typeof define && define.amd ? define("pdfjs-dist/build/pdf", [], b) : "object" == typeof exports ? exports["pdfjs-dist/build/pdf"] = b() : a["pdfjs-dist/build/pdf"] = a.pdfjsDistBuildPdf = b()
} (this,
function() {
    return function(a) {
        function b(d) {
            if (c[d]) return c[d].exports;
            var e = c[d] = {
                i: d,
                l: !1,
                exports: {}
            };
            return a[d].call(e.exports, e, e.exports, b),
            e.l = !0,
            e.exports
        }
        var c = {};
        return b.m = a,
        b.c = c,
        b.i = function(a) {
            return a
        },
        b.d = function(a, c, d) {
            b.o(a, c) || Object.defineProperty(a, c, {
                configurable: !1,
                enumerable: !0,
                get: d
            })
        },
        b.n = function(a) {
            var c = a && a.__esModule ?
            function() {
                return a.
            default
            }:
            function() {
                return a
            };
            return b.d(c, "a", c),
            c
        },
        b.o = function(a, b) {
            return Object.prototype.hasOwnProperty.call(a, b)
        },
        b.p = "",
        b(b.s = 13)
    } ([function(a, b, c) { (function(a) {
            function d(a) {
                ca = a
            }
            function e() {
                return ca
            }
            function f(a) {
                ca >= _.infos && console.log("Info: " + a)
            }
            function g(a) {
                ca >= _.warnings && console.log("Warning: " + a)
            }
            function h(a) {
                console.log("Deprecated API usage: " + a)
            }
            function i(a) {
                throw ca >= _.errors && (console.log("Error: " + a), console.log(j())),
                new Error(a)
            }
            function j() {
                try {
                    throw new Error
                } catch(a) {
                    return a.stack ? a.stack.split("\n").slice(2).join("\n") : ""
                }
            }
            function k(a, b) {
                a || i(b)
            }
            function l(a, b) {
                try {
                    var c = new URL(a);
                    if (!c.origin || "null" === c.origin) return ! 1
                } catch(d) {
                    return ! 1
                }
                var e = new URL(b, c);
                return c.origin === e.origin
            }
            function m(a) {
                if (!a) return ! 1;
                switch (a.protocol) {
                case "http:":
                case "https:":
                case "ftp:":
                case "mailto:":
                case "tel:":
                    return ! 0;
                default:
                    return ! 1
                }
            }
            function n(a, b) {
                if (!a) return null;
                try {
                    var c = b ? new URL(a, b) : new URL(a);
                    if (m(c)) return c
                } catch(d) {}
                return null
            }
            function o(a, b, c) {
                return Object.defineProperty(a, b, {
                    value: c,
                    enumerable: !0,
                    configurable: !0,
                    writable: !1
                }),
                c
            }
            function p(a) {
                var b;
                return function() {
                    return a && (b = Object.create(null), a(b), a = null),
                    b
                }
            }
            function q(a) {
                return "string" != typeof a ? (g("The argument for removeNullCharacters must be a string."), a) : a.replace(na, "")
            }
            function r(a) {
                k(null !== a && "object" == typeof a && void 0 !== a.length, "Invalid argument for bytesToString");
                var b = a.length,
                c = 8192;
                if (b < c) return String.fromCharCode.apply(null, a);
                for (var d = [], e = 0; e < b; e += c) {
                    var f = Math.min(e + c, b),
                    g = a.subarray(e, f);
                    d.push(String.fromCharCode.apply(null, g))
                }
                return d.join("")
            }
            function s(a) {
                k("string" == typeof a, "Invalid argument for stringToBytes");
                for (var b = a.length,
                c = new Uint8Array(b), d = 0; d < b; ++d) c[d] = 255 & a.charCodeAt(d);
                return c
            }
            function t(a) {
                return void 0 !== a.length ? a.length: (k(void 0 !== a.byteLength), a.byteLength)
            }
            function u(a) {
                if (1 === a.length && a[0] instanceof Uint8Array) return a[0];
                var b, c, d, e = 0,
                f = a.length;
                for (b = 0; b < f; b++) c = a[b],
                d = t(c),
                e += d;
                var g = 0,
                h = new Uint8Array(e);
                for (b = 0; b < f; b++) c = a[b],
                c instanceof Uint8Array || (c = "string" == typeof c ? s(c) : new Uint8Array(c)),
                d = c.byteLength,
                h.set(c, g),
                g += d;
                return h
            }
            function v(a) {
                return String.fromCharCode(a >> 24 & 255, a >> 16 & 255, a >> 8 & 255, 255 & a)
            }
            function w(a) {
                for (var b = 1,
                c = 0; a > b;) b <<= 1,
                c++;
                return c
            }
            function x(a, b) {
                return a[b] << 24 >> 24
            }
            function y(a, b) {
                return a[b] << 8 | a[b + 1]
            }
            function z(a, b) {
                return (a[b] << 24 | a[b + 1] << 16 | a[b + 2] << 8 | a[b + 3]) >>> 0
            }
            function A() {
                var a = new Uint8Array(2);
                a[0] = 1;
                var b = new Uint16Array(a.buffer);
                return 1 === b[0]
            }
            function B() {
                try {
                    return new Function(""),
                    !0
                } catch(a) {
                    return ! 1
                }
            }
            function C(a) {
                var b, c = a.length,
                d = [];
                if ("þ" === a[0] && "ÿ" === a[1]) for (b = 2; b < c; b += 2) d.push(String.fromCharCode(a.charCodeAt(b) << 8 | a.charCodeAt(b + 1)));
                else for (b = 0; b < c; ++b) {
                    var e = sa[a.charCodeAt(b)];
                    d.push(e ? String.fromCharCode(e) : a.charAt(b))
                }
                return d.join("")
            }
            function D(a) {
                return decodeURIComponent(escape(a))
            }
            function E(a) {
                return unescape(encodeURIComponent(a))
            }
            function F(a) {
                for (var b in a) return ! 1;
                return ! 0
            }
            function G(a) {
                return "boolean" == typeof a
            }
            function H(a) {
                return "number" == typeof a && (0 | a) === a
            }
            function I(a) {
                return "number" == typeof a
            }
            function J(a) {
                return "string" == typeof a
            }
            function K(a) {
                return a instanceof Array
            }
            function L(a) {
                return "object" == typeof a && null !== a && void 0 !== a.byteLength
            }
            function M(a) {
                return 32 === a || 9 === a || 13 === a || 10 === a
            }
            function N() {
                return "undefined" == typeof __pdfjsdev_webpack__ && ("object" == typeof process && process + "" == "[object process]")
            }
            function O() {
                var a = {};
                return a.promise = new Promise(function(b, c) {
                    a.resolve = b,
                    a.reject = c
                }),
                a
            }
            function P(a, b, c) {
                this.sourceName = a,
                this.targetName = b,
                this.comObj = c,
                this.callbackIndex = 1,
                this.postMessageTransfers = !0;
                var d = this.callbacksCapabilities = Object.create(null),
                e = this.actionHandler = Object.create(null);
                this._onComObjOnMessage = function(a) {
                    var b = a.data;
                    if (b.targetName === this.sourceName) if (b.isReply) {
                        var f = b.callbackId;
                        if (b.callbackId in d) {
                            var g = d[f];
                            delete d[f],
                            "error" in b ? g.reject(b.error) : g.resolve(b.data)
                        } else i("Cannot resolve callback " + f)
                    } else if (b.action in e) {
                        var h = e[b.action];
                        if (b.callbackId) {
                            var j = this.sourceName,
                            k = b.sourceName;
                            Promise.resolve().then(function() {
                                return h[0].call(h[1], b.data)
                            }).then(function(a) {
                                c.postMessage({
                                    sourceName: j,
                                    targetName: k,
                                    isReply: !0,
                                    callbackId: b.callbackId,
                                    data: a
                                })
                            },
                            function(a) {
                                a instanceof Error && (a += ""),
                                c.postMessage({
                                    sourceName: j,
                                    targetName: k,
                                    isReply: !0,
                                    callbackId: b.callbackId,
                                    error: a
                                })
                            })
                        } else h[0].call(h[1], b.data)
                    } else i("Unknown action from worker: " + b.action)
                }.bind(this),
                c.addEventListener("message", this._onComObjOnMessage)
            }
            function Q(a, b, c) {
                var d = new Image;
                d.onload = function() {
                    c.resolve(a, d)
                },
                d.onerror = function() {
                    c.resolve(a, null),
                    g("Error during JPEG image loading")
                },
                d.src = b
            }
            var R = (c(14), "undefined" != typeof window ? window: "undefined" != typeof a ? a: "undefined" != typeof self ? self: this),
            S = [.001, 0, 0, .001, 0, 0],
            T = {
                FILL: 0,
                STROKE: 1,
                FILL_STROKE: 2,
                INVISIBLE: 3,
                FILL_ADD_TO_PATH: 4,
                STROKE_ADD_TO_PATH: 5,
                FILL_STROKE_ADD_TO_PATH: 6,
                ADD_TO_PATH: 7,
                FILL_STROKE_MASK: 3,
                ADD_TO_PATH_FLAG: 4
            },
            U = {
                GRAYSCALE_1BPP: 1,
                RGB_24BPP: 2,
                RGBA_32BPP: 3
            },
            V = {
                TEXT: 1,
                LINK: 2,
                FREETEXT: 3,
                LINE: 4,
                SQUARE: 5,
                CIRCLE: 6,
                POLYGON: 7,
                POLYLINE: 8,
                HIGHLIGHT: 9,
                UNDERLINE: 10,
                SQUIGGLY: 11,
                STRIKEOUT: 12,
                STAMP: 13,
                CARET: 14,
                INK: 15,
                POPUP: 16,
                FILEATTACHMENT: 17,
                SOUND: 18,
                MOVIE: 19,
                WIDGET: 20,
                SCREEN: 21,
                PRINTERMARK: 22,
                TRAPNET: 23,
                WATERMARK: 24,
                THREED: 25,
                REDACT: 26
            },
            W = {
                INVISIBLE: 1,
                HIDDEN: 2,
                PRINT: 4,
                NOZOOM: 8,
                NOROTATE: 16,
                NOVIEW: 32,
                READONLY: 64,
                LOCKED: 128,
                TOGGLENOVIEW: 256,
                LOCKEDCONTENTS: 512
            },
            X = {
                READONLY: 1,
                REQUIRED: 2,
                NOEXPORT: 4,
                MULTILINE: 4096,
                PASSWORD: 8192,
                NOTOGGLETOOFF: 16384,
                RADIO: 32768,
                PUSHBUTTON: 65536,
                COMBO: 131072,
                EDIT: 262144,
                SORT: 524288,
                FILESELECT: 1048576,
                MULTISELECT: 2097152,
                DONOTSPELLCHECK: 4194304,
                DONOTSCROLL: 8388608,
                COMB: 16777216,
                RICHTEXT: 33554432,
                RADIOSINUNISON: 33554432,
                COMMITONSELCHANGE: 67108864
            },
            Y = {
                SOLID: 1,
                DASHED: 2,
                BEVELED: 3,
                INSET: 4,
                UNDERLINE: 5
            },
            Z = {
                UNKNOWN: 0,
                FLATE: 1,
                LZW: 2,
                DCT: 3,
                JPX: 4,
                JBIG: 5,
                A85: 6,
                AHX: 7,
                CCF: 8,
                RL: 9
            },
            $ = {
                UNKNOWN: 0,
                TYPE1: 1,
                TYPE1C: 2,
                CIDFONTTYPE0: 3,
                CIDFONTTYPE0C: 4,
                TRUETYPE: 5,
                CIDFONTTYPE2: 6,
                TYPE3: 7,
                OPENTYPE: 8,
                TYPE0: 9,
                MMTYPE1: 10
            },
            _ = {
                errors: 0,
                warnings: 1,
                infos: 5
            },
            aa = {
                NONE: 0,
                BINARY: 1,
                STREAM: 2
            },
            ba = {
                dependency: 1,
                setLineWidth: 2,
                setLineCap: 3,
                setLineJoin: 4,
                setMiterLimit: 5,
                setDash: 6,
                setRenderingIntent: 7,
                setFlatness: 8,
                setGState: 9,
                save: 10,
                restore: 11,
                transform: 12,
                moveTo: 13,
                lineTo: 14,
                curveTo: 15,
                curveTo2: 16,
                curveTo3: 17,
                closePath: 18,
                rectangle: 19,
                stroke: 20,
                closeStroke: 21,
                fill: 22,
                eoFill: 23,
                fillStroke: 24,
                eoFillStroke: 25,
                closeFillStroke: 26,
                closeEOFillStroke: 27,
                endPath: 28,
                clip: 29,
                eoClip: 30,
                beginText: 31,
                endText: 32,
                setCharSpacing: 33,
                setWordSpacing: 34,
                setHScale: 35,
                setLeading: 36,
                setFont: 37,
                setTextRenderingMode: 38,
                setTextRise: 39,
                moveText: 40,
                setLeadingMoveText: 41,
                setTextMatrix: 42,
                nextLine: 43,
                showText: 44,
                showSpacedText: 45,
                nextLineShowText: 46,
                nextLineSetSpacingShowText: 47,
                setCharWidth: 48,
                setCharWidthAndBounds: 49,
                setStrokeColorSpace: 50,
                setFillColorSpace: 51,
                setStrokeColor: 52,
                setStrokeColorN: 53,
                setFillColor: 54,
                setFillColorN: 55,
                setStrokeGray: 56,
                setFillGray: 57,
                setStrokeRGBColor: 58,
                setFillRGBColor: 59,
                setStrokeCMYKColor: 60,
                setFillCMYKColor: 61,
                shadingFill: 62,
                beginInlineImage: 63,
                beginImageData: 64,
                endInlineImage: 65,
                paintXObject: 66,
                markPoint: 67,
                markPointProps: 68,
                beginMarkedContent: 69,
                beginMarkedContentProps: 70,
                endMarkedContent: 71,
                beginCompat: 72,
                endCompat: 73,
                paintFormXObjectBegin: 74,
                paintFormXObjectEnd: 75,
                beginGroup: 76,
                endGroup: 77,
                beginAnnotations: 78,
                endAnnotations: 79,
                beginAnnotation: 80,
                endAnnotation: 81,
                paintJpegXObject: 82,
                paintImageMaskXObject: 83,
                paintImageMaskXObjectGroup: 84,
                paintImageXObject: 85,
                paintInlineImageXObject: 86,
                paintInlineImageXObjectGroup: 87,
                paintImageXObjectRepeat: 88,
                paintImageMaskXObjectRepeat: 89,
                paintSolidColorImageMask: 90,
                constructPath: 91
            },
            ca = _.warnings,
            da = {
                unknown: "unknown",
                forms: "forms",
                javaScript: "javaScript",
                smask: "smask",
                shadingPattern: "shadingPattern",
                font: "font"
            },
            ea = {
                NEED_PASSWORD: 1,
                INCORRECT_PASSWORD: 2
            },
            fa = function() {
                function a(a, b) {
                    this.name = "PasswordException",
                    this.message = a,
                    this.code = b
                }
                return a.prototype = new Error,
                a.constructor = a,
                a
            } (),
            ga = function() {
                function a(a, b) {
                    this.name = "UnknownErrorException",
                    this.message = a,
                    this.details = b
                }
                return a.prototype = new Error,
                a.constructor = a,
                a
            } (),
            ha = function() {
                function a(a) {
                    this.name = "InvalidPDFException",
                    this.message = a
                }
                return a.prototype = new Error,
                a.constructor = a,
                a
            } (),
            ia = function() {
                function a(a) {
                    this.name = "MissingPDFException",
                    this.message = a
                }
                return a.prototype = new Error,
                a.constructor = a,
                a
            } (),
            ja = function() {
                function a(a, b) {
                    this.name = "UnexpectedResponseException",
                    this.message = a,
                    this.status = b
                }
                return a.prototype = new Error,
                a.constructor = a,
                a
            } (),
            ka = function() {
                function a(a) {
                    this.message = a
                }
                return a.prototype = new Error,
                a.prototype.name = "NotImplementedException",
                a.constructor = a,
                a
            } (),
            la = function() {
                function a(a, b) {
                    this.begin = a,
                    this.end = b,
                    this.message = "Missing data [" + a + ", " + b + ")"
                }
                return a.prototype = new Error,
                a.prototype.name = "MissingDataException",
                a.constructor = a,
                a
            } (),
            ma = function() {
                function a(a) {
                    this.message = a
                }
                return a.prototype = new Error,
                a.prototype.name = "XRefParseException",
                a.constructor = a,
                a
            } (),
            na = /\x00/g,
            oa = function() {
                function a(a, b) {
                    this.buffer = a,
                    this.byteLength = a.length,
                    this.length = void 0 === b ? this.byteLength >> 2 : b,
                    c(this.length)
                }
                function b(a) {
                    return {
                        get: function() {
                            var b = this.buffer,
                            c = a << 2;
                            return (b[c] | b[c + 1] << 8 | b[c + 2] << 16 | b[c + 3] << 24) >>> 0
                        },
                        set: function(b) {
                            var c = this.buffer,
                            d = a << 2;
                            c[d] = 255 & b,
                            c[d + 1] = b >> 8 & 255,
                            c[d + 2] = b >> 16 & 255,
                            c[d + 3] = b >>> 24 & 255
                        }
                    }
                }
                function c(c) {
                    for (; d < c;) Object.defineProperty(a.prototype, d, b(d)),
                    d++
                }
                a.prototype = Object.create(null);
                var d = 0;
                return a
            } ();
            b.Uint32ArrayView = oa;
            var pa = [1, 0, 0, 1, 0, 0],
            qa = function() {
                function a() {}
                var b = ["rgb(", 0, ",", 0, ",", 0, ")"];
                a.makeCssRgb = function(a, c, d) {
                    return b[1] = a,
                    b[3] = c,
                    b[5] = d,
                    b.join("")
                },
                a.transform = function(a, b) {
                    return [a[0] * b[0] + a[2] * b[1], a[1] * b[0] + a[3] * b[1], a[0] * b[2] + a[2] * b[3], a[1] * b[2] + a[3] * b[3], a[0] * b[4] + a[2] * b[5] + a[4], a[1] * b[4] + a[3] * b[5] + a[5]]
                },
                a.applyTransform = function(a, b) {
                    var c = a[0] * b[0] + a[1] * b[2] + b[4],
                    d = a[0] * b[1] + a[1] * b[3] + b[5];
                    return [c, d]
                },
                a.applyInverseTransform = function(a, b) {
                    var c = b[0] * b[3] - b[1] * b[2],
                    d = (a[0] * b[3] - a[1] * b[2] + b[2] * b[5] - b[4] * b[3]) / c,
                    e = ( - a[0] * b[1] + a[1] * b[0] + b[4] * b[1] - b[5] * b[0]) / c;
                    return [d, e]
                },
                a.getAxialAlignedBoundingBox = function(b, c) {
                    var d = a.applyTransform(b, c),
                    e = a.applyTransform(b.slice(2, 4), c),
                    f = a.applyTransform([b[0], b[3]], c),
                    g = a.applyTransform([b[2], b[1]], c);
                    return [Math.min(d[0], e[0], f[0], g[0]), Math.min(d[1], e[1], f[1], g[1]), Math.max(d[0], e[0], f[0], g[0]), Math.max(d[1], e[1], f[1], g[1])]
                },
                a.inverseTransform = function(a) {
                    var b = a[0] * a[3] - a[1] * a[2];
                    return [a[3] / b, -a[1] / b, -a[2] / b, a[0] / b, (a[2] * a[5] - a[4] * a[3]) / b, (a[4] * a[1] - a[5] * a[0]) / b]
                },
                a.apply3dTransform = function(a, b) {
                    return [a[0] * b[0] + a[1] * b[1] + a[2] * b[2], a[3] * b[0] + a[4] * b[1] + a[5] * b[2], a[6] * b[0] + a[7] * b[1] + a[8] * b[2]]
                },
                a.singularValueDecompose2dScale = function(a) {
                    var b = [a[0], a[2], a[1], a[3]],
                    c = a[0] * b[0] + a[1] * b[2],
                    d = a[0] * b[1] + a[1] * b[3],
                    e = a[2] * b[0] + a[3] * b[2],
                    f = a[2] * b[1] + a[3] * b[3],
                    g = (c + f) / 2,
                    h = Math.sqrt((c + f) * (c + f) - 4 * (c * f - e * d)) / 2,
                    i = g + h || 1,
                    j = g - h || 1;
                    return [Math.sqrt(i), Math.sqrt(j)]
                },
                a.normalizeRect = function(a) {
                    var b = a.slice(0);
                    return a[0] > a[2] && (b[0] = a[2], b[2] = a[0]),
                    a[1] > a[3] && (b[1] = a[3], b[3] = a[1]),
                    b
                },
                a.intersect = function(b, c) {
                    function d(a, b) {
                        return a - b
                    }
                    var e = [b[0], b[2], c[0], c[2]].sort(d),
                    f = [b[1], b[3], c[1], c[3]].sort(d),
                    g = [];
                    return b = a.normalizeRect(b),
                    c = a.normalizeRect(c),
                    (e[0] === b[0] && e[1] === c[0] || e[0] === c[0] && e[1] === b[0]) && (g[0] = e[1], g[2] = e[2], (f[0] === b[1] && f[1] === c[1] || f[0] === c[1] && f[1] === b[1]) && (g[1] = f[1], g[3] = f[2], g))
                },
                a.sign = function(a) {
                    return a < 0 ? -1 : 1
                };
                var c = ["", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM", "", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC", "", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"];
                return a.toRoman = function(a, b) {
                    k(H(a) && a > 0, "The number should be a positive integer.");
                    for (var d, e = []; a >= 1e3;) a -= 1e3,
                    e.push("M");
                    d = a / 100 | 0,
                    a %= 100,
                    e.push(c[d]),
                    d = a / 10 | 0,
                    a %= 10,
                    e.push(c[10 + d]),
                    e.push(c[20 + a]);
                    var f = e.join("");
                    return b ? f.toLowerCase() : f
                },
                a.appendToArray = function(a, b) {
                    Array.prototype.push.apply(a, b)
                },
                a.prependToArray = function(a, b) {
                    Array.prototype.unshift.apply(a, b)
                },
                a.extendObj = function(a, b) {
                    for (var c in b) a[c] = b[c]
                },
                a.getInheritableProperty = function(a, b, c) {
                    for (; a && !a.has(b);) a = a.get("Parent");
                    return a ? c ? a.getArray(b) : a.get(b) : null
                },
                a.inherit = function(a, b, c) {
                    a.prototype = Object.create(b.prototype),
                    a.prototype.constructor = a;
                    for (var d in c) a.prototype[d] = c[d]
                },
                a.loadScript = function(a, b) {
                    var c = document.createElement("script"),
                    d = !1;
                    c.setAttribute("src", a),
                    b && (c.onload = function() {
                        d || b(),
                        d = !0
                    }),
                    document.getElementsByTagName("head")[0].appendChild(c)
                },
                a
            } (),
            ra = function() {
                function a(a, b, c, d, e, f) {
                    this.viewBox = a,
                    this.scale = b,
                    this.rotation = c,
                    this.offsetX = d,
                    this.offsetY = e;
                    var g, h, i, j, k = (a[2] + a[0]) / 2,
                    l = (a[3] + a[1]) / 2;
                    switch (c %= 360, c = c < 0 ? c + 360 : c) {
                    case 180:
                        g = -1,
                        h = 0,
                        i = 0,
                        j = 1;
                        break;
                    case 90:
                        g = 0,
                        h = 1,
                        i = 1,
                        j = 0;
                        break;
                    case 270:
                        g = 0,
                        h = -1,
                        i = -1,
                        j = 0;
                        break;
                    default:
                        g = 1,
                        h = 0,
                        i = 0,
                        j = -1
                    }
                    f && (i = -i, j = -j);
                    var m, n, o, p;
                    0 === g ? (m = Math.abs(l - a[1]) * b + d, n = Math.abs(k - a[0]) * b + e, o = Math.abs(a[3] - a[1]) * b, p = Math.abs(a[2] - a[0]) * b) : (m = Math.abs(k - a[0]) * b + d, n = Math.abs(l - a[1]) * b + e, o = Math.abs(a[2] - a[0]) * b, p = Math.abs(a[3] - a[1]) * b),
                    this.transform = [g * b, h * b, i * b, j * b, m - g * b * k - i * b * l, n - h * b * k - j * b * l],
                    this.width = o,
                    this.height = p,
                    this.fontScale = b
                }
                return a.prototype = {
                    clone: function(b) {
                        b = b || {};
                        var c = "scale" in b ? b.scale: this.scale,
                        d = "rotation" in b ? b.rotation: this.rotation;
                        return new a(this.viewBox.slice(), c, d, this.offsetX, this.offsetY, b.dontFlip)
                    },
                    convertToViewportPoint: function(a, b) {
                        return qa.applyTransform([a, b], this.transform)
                    },
                    convertToViewportRectangle: function(a) {
                        var b = qa.applyTransform([a[0], a[1]], this.transform),
                        c = qa.applyTransform([a[2], a[3]], this.transform);
                        return [b[0], b[1], c[0], c[1]]
                    },
                    convertToPdfPoint: function(a, b) {
                        return qa.applyInverseTransform([a, b], this.transform)
                    }
                },
                a
            } (),
            sa = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 728, 711, 710, 729, 733, 731, 730, 732, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8226, 8224, 8225, 8230, 8212, 8211, 402, 8260, 8249, 8250, 8722, 8240, 8222, 8220, 8221, 8216, 8217, 8218, 8482, 64257, 64258, 321, 338, 352, 376, 381, 305, 322, 339, 353, 382, 0, 8364],
            ta = function() {
                function a(a, b, c) {
                    for (; a.length < c;) a += b;
                    return a
                }
                function b() {
                    this.started = Object.create(null),
                    this.times = [],
                    this.enabled = !0
                }
                return b.prototype = {
                    time: function(a) {
                        this.enabled && (a in this.started && g("Timer is already running for " + a), this.started[a] = Date.now())
                    },
                    timeEnd: function(a) {
                        this.enabled && (a in this.started || g("Timer has not been started for " + a), this.times.push({
                            name: a,
                            start: this.started[a],
                            end: Date.now()
                        }), delete this.started[a])
                    },
                    toString: function() {
                        var b, c, d = this.times,
                        e = "",
                        f = 0;
                        for (b = 0, c = d.length; b < c; ++b) {
                            var g = d[b].name;
                            g.length > f && (f = g.length)
                        }
                        for (b = 0, c = d.length; b < c; ++b) {
                            var h = d[b],
                            i = h.end - h.start;
                            e += a(h.name, " ", f) + " " + i + "ms\n"
                        }
                        return e
                    }
                },
                b
            } (),
            ua = function(a, b) {
                return "undefined" != typeof Blob ? new Blob([a], {
                    type: b
                }) : void g('The "Blob" constructor is not supported.')
            },
            va = function() {
                var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
                return function(b, c, d) {
                    if (!d && "undefined" != typeof URL && URL.createObjectURL) {
                        var e = ua(b, c);
                        return URL.createObjectURL(e)
                    }
                    for (var f = "data:" + c + ";base64,",
                    g = 0,
                    h = b.length; g < h; g += 3) {
                        var i = 255 & b[g],
                        j = 255 & b[g + 1],
                        k = 255 & b[g + 2],
                        l = i >> 2,
                        m = (3 & i) << 4 | j >> 4,
                        n = g + 1 < h ? (15 & j) << 2 | k >> 6 : 64,
                        o = g + 2 < h ? 63 & k: 64;
                        f += a[l] + a[m] + a[n] + a[o]
                    }
                    return f
                }
            } ();
            P.prototype = {
                on: function(a, b, c) {
                    var d = this.actionHandler;
                    d[a] && i('There is already an actionName called "' + a + '"'),
                    d[a] = [b, c]
                },
                send: function(a, b, c) {
                    var d = {
                        sourceName: this.sourceName,
                        targetName: this.targetName,
                        action: a,
                        data: b
                    };
                    this.postMessage(d, c)
                },
                sendWithPromise: function(a, b, c) {
                    var d = this.callbackIndex++,
                    e = {
                        sourceName: this.sourceName,
                        targetName: this.targetName,
                        action: a,
                        data: b,
                        callbackId: d
                    },
                    f = O();
                    this.callbacksCapabilities[d] = f;
                    try {
                        this.postMessage(e, c)
                    } catch(g) {
                        f.reject(g)
                    }
                    return f.promise
                },
                postMessage: function(a, b) {
                    b && this.postMessageTransfers ? this.comObj.postMessage(a, b) : this.comObj.postMessage(a)
                },
                destroy: function() {
                    this.comObj.removeEventListener("message", this._onComObjOnMessage)
                }
            },
            b.FONT_IDENTITY_MATRIX = S,
            b.IDENTITY_MATRIX = pa,
            b.OPS = ba,
            b.VERBOSITY_LEVELS = _,
            b.UNSUPPORTED_FEATURES = da,
            b.AnnotationBorderStyleType = Y,
            b.AnnotationFieldFlag = X,
            b.AnnotationFlag = W,
            b.AnnotationType = V,
            b.FontType = $,
            b.ImageKind = U,
            b.CMapCompressionType = aa,
            b.InvalidPDFException = ha,
            b.MessageHandler = P,
            b.MissingDataException = la,
            b.MissingPDFException = ia,
            b.NotImplementedException = ka,
            b.PageViewport = ra,
            b.PasswordException = fa,
            b.PasswordResponses = ea,
            b.StatTimer = ta,
            b.StreamType = Z,
            b.TextRenderingMode = T,
            b.UnexpectedResponseException = ja,
            b.UnknownErrorException = ga,
            b.Util = qa,
            b.XRefParseException = ma,
            b.arrayByteLength = t,
            b.arraysToBytes = u,
            b.assert = k,
            b.bytesToString = r,
            b.createBlob = ua,
            b.createPromiseCapability = O,
            b.createObjectURL = va,
            b.deprecated = h,
            b.error = i,
            b.getLookupTableFactory = p,
            b.getVerbosityLevel = e,
            b.globalScope = R,
            b.info = f,
            b.isArray = K,
            b.isArrayBuffer = L,
            b.isBool = G,
            b.isEmptyObj = F,
            b.isInt = H,
            b.isNum = I,
            b.isString = J,
            b.isSpace = M,
            b.isNodeJS = N,
            b.isSameOrigin = l,
            b.createValidAbsoluteUrl = n,
            b.isLittleEndian = A,
            b.isEvalSupported = B,
            b.loadJpegStream = Q,
            b.log2 = w,
            b.readInt8 = x,
            b.readUint16 = y,
            b.readUint32 = z,
            b.removeNullCharacters = q,
            b.setVerbosityLevel = d,
            b.shadow = o,
            b.string32 = v,
            b.stringToBytes = s,
            b.stringToPDFString = C,
            b.stringToUTF8String = D,
            b.utf8StringToString = E,
            b.warn = g
        }).call(b, c(6))
    },
    function(a, b, c) {
        function d() {}
        function e(a, b) {
            var c = b && b.url;
            if (a.href = a.title = c ? l(c) : "", c) {
                var d = b.target;
                "undefined" == typeof d && (d = g("externalLinkTarget")),
                a.target = w[d];
                var e = b.rel;
                "undefined" == typeof e && (e = g("externalLinkRel")),
                a.rel = e
            }
        }
        function f(a) {
            var b = a.indexOf("#"),
            c = a.indexOf("?"),
            d = Math.min(b > 0 ? b: a.length, c > 0 ? c: a.length);
            return a.substring(a.lastIndexOf("/", d) + 1, d)
        }
        function g(a) {
            var b = j.globalScope.PDFJS;
            switch (a) {
            case "pdfBug":
                return !! b && b.pdfBug;
            case "disableAutoFetch":
                return !! b && b.disableAutoFetch;
            case "disableStream":
                return !! b && b.disableStream;
            case "disableRange":
                return !! b && b.disableRange;
            case "disableFontFace":
                return !! b && b.disableFontFace;
            case "disableCreateObjectURL":
                return !! b && b.disableCreateObjectURL;
            case "disableWebGL":
                return ! b || b.disableWebGL;
            case "cMapUrl":
                return b ? b.cMapUrl: null;
            case "cMapPacked":
                return !! b && b.cMapPacked;
            case "postMessageTransfers":
                return ! b || b.postMessageTransfers;
            case "workerPort":
                return b ? b.workerPort: null;
            case "workerSrc":
                return b ? b.workerSrc: null;
            case "disableWorker":
                return !! b && b.disableWorker;
            case "maxImageSize":
                return b ? b.maxImageSize: -1;
            case "imageResourcesPath":
                return b ? b.imageResourcesPath: "";
            case "isEvalSupported":
                return ! b || b.isEvalSupported;
            case "externalLinkTarget":
                if (!b) return v.NONE;
                switch (b.externalLinkTarget) {
                case v.NONE:
                case v.SELF:
                case v.BLANK:
                case v.PARENT:
                case v.TOP:
                    return b.externalLinkTarget
                }
                return m("PDFJS.externalLinkTarget is invalid: " + b.externalLinkTarget),
                b.externalLinkTarget = v.NONE,
                v.NONE;
            case "externalLinkRel":
                return b ? b.externalLinkRel: r;
            case "enableStats":
                return ! (!b || !b.enableStats);
            default:
                throw new Error("Unknown default setting: " + a)
            }
        }
        function h() {
            var a = g("externalLinkTarget");
            switch (a) {
            case v.NONE:
                return ! 1;
            case v.SELF:
            case v.BLANK:
            case v.PARENT:
            case v.TOP:
                return ! 0
            }
        }
        function i(a, b) {
            n("isValidUrl(), please use createValidAbsoluteUrl() instead.");
            var c = b ? "http://example.com": null;
            return null !== o(a, c)
        }
        var j = c(0),
        k = j.assert,
        l = j.removeNullCharacters,
        m = j.warn,
        n = j.deprecated,
        o = j.createValidAbsoluteUrl,
        p = j.stringToBytes,
        q = j.CMapCompressionType,
        r = "noopener noreferrer nofollow";
        d.prototype = {
            create: function(a, b) {
                k(a > 0 && b > 0, "invalid canvas size");
                var c = document.createElement("canvas"),
                d = c.getContext("2d");
                return c.width = a,
                c.height = b,
                {
                    canvas: c,
                    context: d
                }
            },
            reset: function(a, b, c) {
                k(a.canvas, "canvas is not specified"),
                k(b > 0 && c > 0, "invalid canvas size"),
                a.canvas.width = b,
                a.canvas.height = c
            },
            destroy: function(a) {
                k(a.canvas, "canvas is not specified"),
                a.canvas.width = 0,
                a.canvas.height = 0,
                a.canvas = null,
                a.context = null
            }
        };
        var s, t = function() {
            function a(a) {
                this.baseUrl = a.baseUrl || null,
                this.isCompressed = a.isCompressed || !1
            }
            return a.prototype = {
                fetch: function(a) {
                    return a.name ? new Promise(function(b, c) {
                        var d = this.baseUrl + a.name,
                        e = new XMLHttpRequest;
                        this.isCompressed && (d += ".bcmap", e.responseType = "arraybuffer"),
                        e.onreadystatechange = function() {
                            if (e.readyState === XMLHttpRequest.DONE && (200 === e.status || 0 === e.status)) {
                                var a;
                                if (this.isCompressed && e.response ? a = new Uint8Array(e.response) : !this.isCompressed && e.responseText && (a = p(e.responseText)), a) return void b({
                                    cMapData: a,
                                    compressionType: this.isCompressed ? q.BINARY: q.NONE
                                });
                                c(new Error("Unable to load " + (this.isCompressed ? "binary": "") + " CMap at: " + d))
                            }
                        }.bind(this),
                        e.open("GET", d, !0),
                        e.send(null)
                    }.bind(this)) : Promise.reject(new Error("CMap name must be specified."))
                }
            },
            a
        } (),
        u = function() {
            function a() {}
            var b = ["ms", "Moz", "Webkit", "O"],
            c = Object.create(null);
            return a.getProp = function(a, d) {
                if (1 === arguments.length && "string" == typeof c[a]) return c[a];
                d = d || document.documentElement;
                var e, f, g = d.style;
                if ("string" == typeof g[a]) return c[a] = a;
                f = a.charAt(0).toUpperCase() + a.slice(1);
                for (var h = 0,
                i = b.length; h < i; h++) if (e = b[h] + f, "string" == typeof g[e]) return c[a] = e;
                return c[a] = "undefined"
            },
            a.setProp = function(a, b, c) {
                var d = this.getProp(a);
                "undefined" !== d && (b.style[d] = c)
            },
            a
        } ();
        s = function() {
            var a = document.createElement("canvas");
            a.width = a.height = 1;
            var b = a.getContext("2d"),
            c = b.createImageData(1, 1);
            return "undefined" != typeof c.data.buffer
        };
        var v = {
            NONE: 0,
            SELF: 1,
            BLANK: 2,
            PARENT: 3,
            TOP: 4
        },
        w = ["", "_self", "_blank", "_parent", "_top"];
        b.CustomStyle = u,
        b.addLinkAttributes = e,
        b.isExternalLinkTargetSet = h,
        b.isValidUrl = i,
        b.getFilenameFromUrl = f,
        b.LinkTarget = v,
        b.hasCanvasTypedArrays = s,
        b.getDefaultSetting = g,
        b.DEFAULT_LINK_REL = r,
        b.DOMCanvasFactory = d,
        b.DOMCMapReaderFactory = t
    },
    function(a, b, c) {
        function d() {}
        var e = c(0),
        f = c(1),
        g = e.AnnotationBorderStyleType,
        h = e.AnnotationType,
        i = e.stringToPDFString,
        j = e.Util,
        k = f.addLinkAttributes,
        l = f.LinkTarget,
        m = f.getFilenameFromUrl,
        n = e.warn,
        o = f.CustomStyle,
        p = f.getDefaultSetting;
        d.prototype = {
            create: function(a) {
                var b = a.data.annotationType;
                switch (b) {
                case h.LINK:
                    return new r(a);
                case h.TEXT:
                    return new s(a);
                case h.WIDGET:
                    var c = a.data.fieldType;
                    switch (c) {
                    case "Tx":
                        return new u(a);
                    case "Btn":
                        if (a.data.radioButton) return new w(a);
                        if (a.data.checkBox) return new v(a);
                        n("Unimplemented button widget annotation: pushbutton");
                        break;
                    case "Ch":
                        return new x(a)
                    }
                    return new t(a);
                case h.POPUP:
                    return new y(a);
                case h.HIGHLIGHT:
                    return new A(a);
                case h.UNDERLINE:
                    return new B(a);
                case h.SQUIGGLY:
                    return new C(a);
                case h.STRIKEOUT:
                    return new D(a);
                case h.FILEATTACHMENT:
                    return new E(a);
                default:
                    return new q(a)
                }
            }
        };
        var q = function() {
            function a(a, b) {
                this.isRenderable = b || !1,
                this.data = a.data,
                this.layer = a.layer,
                this.page = a.page,
                this.viewport = a.viewport,
                this.linkService = a.linkService,
                this.downloadManager = a.downloadManager,
                this.imageResourcesPath = a.imageResourcesPath,
                this.renderInteractiveForms = a.renderInteractiveForms,
                b && (this.container = this._createContainer())
            }
            return a.prototype = {
                _createContainer: function() {
                    var a = this.data,
                    b = this.page,
                    c = this.viewport,
                    d = document.createElement("section"),
                    e = a.rect[2] - a.rect[0],
                    f = a.rect[3] - a.rect[1];
                    d.setAttribute("data-annotation-id", a.id);
                    var h = j.normalizeRect([a.rect[0], b.view[3] - a.rect[1] + b.view[1], a.rect[2], b.view[3] - a.rect[3] + b.view[1]]);
                    if (o.setProp("transform", d, "matrix(" + c.transform.join(",") + ")"), o.setProp("transformOrigin", d, -h[0] + "px " + -h[1] + "px"), a.borderStyle.width > 0) {
                        d.style.borderWidth = a.borderStyle.width + "px",
                        a.borderStyle.style !== g.UNDERLINE && (e -= 2 * a.borderStyle.width, f -= 2 * a.borderStyle.width);
                        var i = a.borderStyle.horizontalCornerRadius,
                        k = a.borderStyle.verticalCornerRadius;
                        if (i > 0 || k > 0) {
                            var l = i + "px / " + k + "px";
                            o.setProp("borderRadius", d, l)
                        }
                        switch (a.borderStyle.style) {
                        case g.SOLID:
                            d.style.borderStyle = "solid";
                            break;
                        case g.DASHED:
                            d.style.borderStyle = "dashed";
                            break;
                        case g.BEVELED:
                            n("Unimplemented border style: beveled");
                            break;
                        case g.INSET:
                            n("Unimplemented border style: inset");
                            break;
                        case g.UNDERLINE:
                            d.style.borderBottomStyle = "solid"
                        }
                        a.color ? d.style.borderColor = j.makeCssRgb(0 | a.color[0], 0 | a.color[1], 0 | a.color[2]) : d.style.borderWidth = 0
                    }
                    return d.style.left = h[0] + "px",
                    d.style.top = h[1] + "px",
                    d.style.width = e + "px",
                    d.style.height = f + "px",
                    d
                },
                _createPopup: function(a, b, c) {
                    b || (b = document.createElement("div"), b.style.height = a.style.height, b.style.width = a.style.width, a.appendChild(b));
                    var d = new z({
                        container: a,
                        trigger: b,
                        color: c.color,
                        title: c.title,
                        contents: c.contents,
                        hideWrapper: !0
                    }),
                    e = d.render();
                    e.style.left = a.style.width,
                    a.appendChild(e)
                },
                render: function() {
                    throw new Error("Abstract method AnnotationElement.render called")
                }
            },
            a
        } (),
        r = function() {
            function a(a) {
                q.call(this, a, !0)
            }
            return j.inherit(a, q, {
                render: function() {
                    this.container.className = "linkAnnotation";
                    var a = document.createElement("a");
                    return k(a, {
                        url: this.data.url,
                        target: this.data.newWindow ? l.BLANK: void 0
                    }),
                    this.data.url || (this.data.action ? this._bindNamedAction(a, this.data.action) : this._bindLink(a, this.data.dest)),
                    this.container.appendChild(a),
                    this.container
                },
                _bindLink: function(a, b) {
                    var c = this;
                    a.href = this.linkService.getDestinationHash(b),
                    a.onclick = function() {
                        return b && c.linkService.navigateTo(b),
                        !1
                    },
                    b && (a.className = "internalLink")
                },
                _bindNamedAction: function(a, b) {
                    var c = this;
                    a.href = this.linkService.getAnchorUrl(""),
                    a.onclick = function() {
                        return c.linkService.executeNamedAction(b),
                        !1
                    },
                    a.className = "internalLink"
                }
            }),
            a
        } (),
        s = function() {
            function a(a) {
                var b = !!(a.data.hasPopup || a.data.title || a.data.contents);
                q.call(this, a, b)
            }
            return j.inherit(a, q, {
                render: function() {
                    this.container.className = "textAnnotation";
                    var a = document.createElement("img");
                    return a.style.height = this.container.style.height,
                    a.style.width = this.container.style.width,
                    a.src = this.imageResourcesPath + "annotation-" + this.data.name.toLowerCase() + ".svg",
                    a.alt = "[{{type}} Annotation]",
                    a.dataset.l10nId = "text_annotation_type",
                    a.dataset.l10nArgs = JSON.stringify({
                        type: this.data.name
                    }),
                    this.data.hasPopup || this._createPopup(this.container, a, this.data),
                    this.container.appendChild(a),
                    this.container
                }
            }),
            a
        } (),
        t = function() {
            function a(a, b) {
                q.call(this, a, b)
            }
            return j.inherit(a, q, {
                render: function() {
                    return this.container
                }
            }),
            a
        } (),
        u = function() {
            function a(a) {
                var b = a.renderInteractiveForms || !a.data.hasAppearance && !!a.data.fieldValue;
                t.call(this, a, b)
            }
            var b = ["left", "center", "right"];
            return j.inherit(a, t, {
                render: function() {
                    this.container.className = "textWidgetAnnotation";
                    var a = null;
                    if (this.renderInteractiveForms) {
                        if (this.data.multiLine ? (a = document.createElement("textarea"), a.textContent = this.data.fieldValue) : (a = document.createElement("input"), a.type = "text", a.setAttribute("value", this.data.fieldValue)), a.disabled = this.data.readOnly, null !== this.data.maxLen && (a.maxLength = this.data.maxLen), this.data.comb) {
                            var c = this.data.rect[2] - this.data.rect[0],
                            d = c / this.data.maxLen;
                            a.classList.add("comb"),
                            a.style.letterSpacing = "calc(" + d + "px - 1ch)"
                        }
                    } else {
                        a = document.createElement("div"),
                        a.textContent = this.data.fieldValue,
                        a.style.verticalAlign = "middle",
                        a.style.display = "table-cell";
                        var e = null;
                        this.data.fontRefName && (e = this.page.commonObjs.getData(this.data.fontRefName)),
                        this._setTextStyle(a, e)
                    }
                    return null !== this.data.textAlignment && (a.style.textAlign = b[this.data.textAlignment]),
                    this.container.appendChild(a),
                    this.container
                },
                _setTextStyle: function(a, b) {
                    var c = a.style;
                    if (c.fontSize = this.data.fontSize + "px", c.direction = this.data.fontDirection < 0 ? "rtl": "ltr", b) {
                        c.fontWeight = b.black ? b.bold ? "900": "bold": b.bold ? "bold": "normal",
                        c.fontStyle = b.italic ? "italic": "normal";
                        var d = b.loadedName ? '"' + b.loadedName + '", ': "",
                        e = b.fallbackName || "Helvetica, sans-serif";
                        c.fontFamily = d + e
                    }
                }
            }),
            a
        } (),
        v = function() {
            function a(a) {
                t.call(this, a, a.renderInteractiveForms)
            }
            return j.inherit(a, t, {
                render: function() {
                    this.container.className = "buttonWidgetAnnotation checkBox";
                    var a = document.createElement("input");
                    return a.disabled = this.data.readOnly,
                    a.type = "checkbox",
                    this.data.fieldValue && "Off" !== this.data.fieldValue && a.setAttribute("checked", !0),
                    this.container.appendChild(a),
                    this.container
                }
            }),
            a
        } (),
        w = function() {
            function a(a) {
                t.call(this, a, a.renderInteractiveForms)
            }
            return j.inherit(a, t, {
                render: function() {
                    this.container.className = "buttonWidgetAnnotation radioButton";
                    var a = document.createElement("input");
                    return a.disabled = this.data.readOnly,
                    a.type = "radio",
                    a.name = this.data.fieldName,
                    this.data.fieldValue === this.data.buttonValue && a.setAttribute("checked", !0),
                    this.container.appendChild(a),
                    this.container
                }
            }),
            a
        } (),
        x = function() {
            function a(a) {
                t.call(this, a, a.renderInteractiveForms)
            }
            return j.inherit(a, t, {
                render: function() {
                    this.container.className = "choiceWidgetAnnotation";
                    var a = document.createElement("select");
                    a.disabled = this.data.readOnly,
                    this.data.combo || (a.size = this.data.options.length, this.data.multiSelect && (a.multiple = !0));
                    for (var b = 0,
                    c = this.data.options.length; b < c; b++) {
                        var d = this.data.options[b],
                        e = document.createElement("option");
                        e.textContent = d.displayValue,
                        e.value = d.exportValue,
                        this.data.fieldValue.indexOf(d.displayValue) >= 0 && e.setAttribute("selected", !0),
                        a.appendChild(e)
                    }
                    return this.container.appendChild(a),
                    this.container
                }
            }),
            a
        } (),
        y = function() {
            function a(a) {
                var b = !(!a.data.title && !a.data.contents);
                q.call(this, a, b)
            }
            return j.inherit(a, q, {
                render: function() {
                    this.container.className = "popupAnnotation";
                    var a = '[data-annotation-id="' + this.data.parentId + '"]',
                    b = this.layer.querySelector(a);
                    if (!b) return this.container;
                    var c = new z({
                        container: this.container,
                        trigger: b,
                        color: this.data.color,
                        title: this.data.title,
                        contents: this.data.contents
                    }),
                    d = parseFloat(b.style.left),
                    e = parseFloat(b.style.width);
                    return o.setProp("transformOrigin", this.container, -(d + e) + "px -" + b.style.top),
                    this.container.style.left = d + e + "px",
                    this.container.appendChild(c.render()),
                    this.container
                }
            }),
            a
        } (),
        z = function() {
            function a(a) {
                this.container = a.container,
                this.trigger = a.trigger,
                this.color = a.color,
                this.title = a.title,
                this.contents = a.contents,
                this.hideWrapper = a.hideWrapper || !1,
                this.pinned = !1
            }
            var b = .7;
            return a.prototype = {
                render: function() {
                    var a = document.createElement("div");
                    a.className = "popupWrapper",
                    this.hideElement = this.hideWrapper ? a: this.container,
                    this.hideElement.setAttribute("hidden", !0);
                    var c = document.createElement("div");
                    c.className = "popup";
                    var d = this.color;
                    if (d) {
                        var e = b * (255 - d[0]) + d[0],
                        f = b * (255 - d[1]) + d[1],
                        g = b * (255 - d[2]) + d[2];
                        c.style.backgroundColor = j.makeCssRgb(0 | e, 0 | f, 0 | g)
                    }
                    var h = this._formatContents(this.contents),
                    i = document.createElement("h1");
                    return i.textContent = this.title,
                    this.trigger.addEventListener("click", this._toggle.bind(this)),
                    this.trigger.addEventListener("mouseover", this._show.bind(this, !1)),
                    this.trigger.addEventListener("mouseout", this._hide.bind(this, !1)),
                    c.addEventListener("click", this._hide.bind(this, !0)),
                    c.appendChild(i),
                    c.appendChild(h),
                    a.appendChild(c),
                    a
                },
                _formatContents: function(a) {
                    for (var b = document.createElement("p"), c = a.split(/(?:\r\n?|\n)/), d = 0, e = c.length; d < e; ++d) {
                        var f = c[d];
                        b.appendChild(document.createTextNode(f)),
                        d < e - 1 && b.appendChild(document.createElement("br"))
                    }
                    return b
                },
                _toggle: function() {
                    this.pinned ? this._hide(!0) : this._show(!0)
                },
                _show: function(a) {
                    a && (this.pinned = !0),
                    this.hideElement.hasAttribute("hidden") && (this.hideElement.removeAttribute("hidden"), this.container.style.zIndex += 1)
                },
                _hide: function(a) {
                    a && (this.pinned = !1),
                    this.hideElement.hasAttribute("hidden") || this.pinned || (this.hideElement.setAttribute("hidden", !0), this.container.style.zIndex -= 1)
                }
            },
            a
        } (),
        A = function() {
            function a(a) {
                var b = !!(a.data.hasPopup || a.data.title || a.data.contents);
                q.call(this, a, b)
            }
            return j.inherit(a, q, {
                render: function() {
                    return this.container.className = "highlightAnnotation",
                    this.data.hasPopup || this._createPopup(this.container, null, this.data),
                    this.container
                }
            }),
            a
        } (),
        B = function() {
            function a(a) {
                var b = !!(a.data.hasPopup || a.data.title || a.data.contents);
                q.call(this, a, b)
            }
            return j.inherit(a, q, {
                render: function() {
                    return this.container.className = "underlineAnnotation",
                    this.data.hasPopup || this._createPopup(this.container, null, this.data),
                    this.container
                }
            }),
            a
        } (),
        C = function() {
            function a(a) {
                var b = !!(a.data.hasPopup || a.data.title || a.data.contents);
                q.call(this, a, b)
            }
            return j.inherit(a, q, {
                render: function() {
                    return this.container.className = "squigglyAnnotation",
                    this.data.hasPopup || this._createPopup(this.container, null, this.data),
                    this.container
                }
            }),
            a
        } (),
        D = function() {
            function a(a) {
                var b = !!(a.data.hasPopup || a.data.title || a.data.contents);
                q.call(this, a, b)
            }
            return j.inherit(a, q, {
                render: function() {
                    return this.container.className = "strikeoutAnnotation",
                    this.data.hasPopup || this._createPopup(this.container, null, this.data),
                    this.container
                }
            }),
            a
        } (),
        E = function() {
            function a(a) {
                q.call(this, a, !0);
                var b = this.data.file;
                this.filename = m(b.filename),
                this.content = b.content,
                this.linkService.onFileAttachmentAnnotation({
                    id: i(b.filename),
                    filename: b.filename,
                    content: b.content
                })
            }
            return j.inherit(a, q, {
                render: function() {
                    this.container.className = "fileAttachmentAnnotation";
                    var a = document.createElement("div");
                    return a.style.height = this.container.style.height,
                    a.style.width = this.container.style.width,
                    a.addEventListener("dblclick", this._download.bind(this)),
                    this.data.hasPopup || !this.data.title && !this.data.contents || this._createPopup(this.container, a, this.data),
                    this.container.appendChild(a),
                    this.container
                },
                _download: function() {
                    return this.downloadManager ? void this.downloadManager.downloadData(this.content, this.filename, "") : void n("Download cannot be started due to unavailable download manager")
                }
            }),
            a
        } (),
        F = function() {
            return {
                render: function(a) {
                    for (var b = new d,
                    c = 0,
                    e = a.annotations.length; c < e; c++) {
                        var f = a.annotations[c];
                        if (f) {
                            var g = b.create({
                                data: f,
                                layer: a.div,
                                page: a.page,
                                viewport: a.viewport,
                                linkService: a.linkService,
                                downloadManager: a.downloadManager,
                                imageResourcesPath: a.imageResourcesPath || p("imageResourcesPath"),
                                renderInteractiveForms: a.renderInteractiveForms || !1
                            });
                            g.isRenderable && a.div.appendChild(g.render())
                        }
                    }
                },
                update: function(a) {
                    for (var b = 0,
                    c = a.annotations.length; b < c; b++) {
                        var d = a.annotations[b],
                        e = a.div.querySelector('[data-annotation-id="' + d.id + '"]');
                        e && o.setProp("transform", e, "matrix(" + a.viewport.transform.join(",") + ")")
                    }
                    a.div.removeAttribute("hidden")
                }
            }
        } ();
        b.AnnotationLayer = F
    },
    function(a, b, c) {
        function d(a, b, c, d) {
            var f = new V;
            arguments.length > 1 && w("getDocument is called with pdfDataRangeTransport, passwordCallback or progressCallback argument"),
            b && (b instanceof W || (b = Object.create(b), b.length = a.length, b.initialData = a.initialData, b.abort || (b.abort = function() {})), a = Object.create(a), a.range = b),
            f.onPassword = c || null,
            f.onProgress = d || null;
            var g;
            "string" == typeof a ? g = {
                url: a
            }: B(a) ? g = {
                data: a
            }: a instanceof W ? g = {
                range: a
            }: ("object" != typeof a && v("Invalid parameter in getDocument, need either Uint8Array, string or a parameter object"), a.url || a.data || a.range || v("Invalid parameter object: need either .data, .range or .url"), g = a);
            var h = {},
            i = null,
            j = null;
            for (var k in g) if ("url" !== k || "undefined" == typeof window) if ("range" !== k) if ("worker" !== k) if ("data" !== k || g[k] instanceof Uint8Array) h[k] = g[k];
            else {
                var l = g[k];
                "string" == typeof l ? h[k] = E(l) : "object" != typeof l || null === l || isNaN(l.length) ? B(l) ? h[k] = new Uint8Array(l) : v("Invalid PDF binary data: either typed array, string or array-like object is expected in the data property.") : h[k] = new Uint8Array(l)
            } else j = g[k];
            else i = g[k];
            else h[k] = new URL(g[k], window.location).href;
            h.rangeChunkSize = h.rangeChunkSize || O,
            h.disableNativeImageDecoder = h.disableNativeImageDecoder === !0;
            var n = h.CMapReaderFactory || N;
            if (!j) {
                var o = L("workerPort");
                j = o ? new Z(null, o) : new Z,
                f._worker = j
            }
            var p = f.docId;
            return j.promise.then(function() {
                if (f.destroyed) throw new Error("Loading aborted");
                return e(j, h, i, p).then(function(a) {
                    if (f.destroyed) throw new Error("Loading aborted");
                    var b = new m(p, a, j.port),
                    c = new $(b, f, i, n);
                    f._transport = c,
                    b.send("Ready", null)
                })
            }).
            catch(f._capability.reject),
            f
        }
        function e(a, b, c, d) {
            return a.destroyed ? Promise.reject(new Error("Worker was destroyed")) : (b.disableAutoFetch = L("disableAutoFetch"), b.disableStream = L("disableStream"), b.chunkedViewerLoading = !!c, c && (b.length = c.length, b.initialData = c.initialData), a.messageHandler.sendWithPromise("GetDocRequest", {
                docId: d,
                source: b,
                disableRange: L("disableRange"),
                maxImageSize: L("maxImageSize"),
                disableFontFace: L("disableFontFace"),
                disableCreateObjectURL: L("disableCreateObjectURL"),
                postMessageTransfers: L("postMessageTransfers") && !Q,
                docBaseUrl: b.docBaseUrl,
                disableNativeImageDecoder: b.disableNativeImageDecoder
            }).then(function(b) {
                if (a.destroyed) throw new Error("Worker was destroyed");
                return b
            }))
        }
        var f, g = c(0),
        h = c(11),
        i = c(10),
        j = c(7),
        k = c(1),
        l = g.InvalidPDFException,
        m = g.MessageHandler,
        n = g.MissingPDFException,
        o = g.PageViewport,
        p = g.PasswordException,
        q = g.StatTimer,
        r = g.UnexpectedResponseException,
        s = g.UnknownErrorException,
        t = g.Util,
        u = g.createPromiseCapability,
        v = g.error,
        w = g.deprecated,
        x = g.getVerbosityLevel,
        y = g.info,
        z = g.isInt,
        A = g.isArray,
        B = g.isArrayBuffer,
        C = g.isSameOrigin,
        D = g.loadJpegStream,
        E = g.stringToBytes,
        F = g.globalScope,
        G = g.warn,
        H = h.FontFaceObject,
        I = h.FontLoader,
        J = i.CanvasGraphics,
        K = j.Metadata,
        L = k.getDefaultSetting,
        M = k.DOMCanvasFactory,
        N = k.DOMCMapReaderFactory,
        O = 65536,
        P = !1,
        Q = !1,
        R = "undefined" != typeof document && document.currentScript ? document.currentScript.src: null,
        S = null,
        T = !1;
        if ("undefined" == typeof __pdfjsdev_webpack__) {
            "undefined" == typeof window ? (P = !0, "undefined" == typeof require.ensure && (require.ensure = require("node-ensure")), T = !0) : "undefined" != typeof require && "function" == typeof require.ensure && (T = !0),
            "undefined" != typeof requirejs && requirejs.toUrl && (f = requirejs.toUrl("pdfjs-dist/build/pdf.worker.js"));
            var U = "undefined" != typeof requirejs && requirejs.load;
            S = T ?
            function(a) {
                require.ensure([],
                function() {
                    var b = require("/resources/app/scripts/plugins/pdf/pdf.worker.js");
                    a(b.WorkerMessageHandler)
                })
            }: U ?
            function(a) {
                requirejs(["pdfjs-dist/build/pdf.worker"],
                function(b) {
                    a(b.WorkerMessageHandler)
                })
            }: null
        }
        var V = function() {
            function a() {
                this._capability = u(),
                this._transport = null,
                this._worker = null,
                this.docId = "d" + b++,
                this.destroyed = !1,
                this.onPassword = null,
                this.onProgress = null,
                this.onUnsupportedFeature = null
            }
            var b = 0;
            return a.prototype = {
                get promise() {
                    return this._capability.promise
                },
                destroy: function() {
                    this.destroyed = !0;
                    var a = this._transport ? this._transport.destroy() : Promise.resolve();
                    return a.then(function() {
                        this._transport = null,
                        this._worker && (this._worker.destroy(), this._worker = null)
                    }.bind(this))
                },
                then: function(a, b) {
                    return this.promise.then.apply(this.promise, arguments)
                }
            },
            a
        } (),
        W = function() {
            function a(a, b) {
                this.length = a,
                this.initialData = b,
                this._rangeListeners = [],
                this._progressListeners = [],
                this._progressiveReadListeners = [],
                this._readyCapability = u()
            }
            return a.prototype = {
                addRangeListener: function(a) {
                    this._rangeListeners.push(a)
                },
                addProgressListener: function(a) {
                    this._progressListeners.push(a)
                },
                addProgressiveReadListener: function(a) {
                    this._progressiveReadListeners.push(a)
                },
                onDataRange: function(a, b) {
                    for (var c = this._rangeListeners,
                    d = 0,
                    e = c.length; d < e; ++d) c[d](a, b)
                },
                onDataProgress: function(a) {
                    this._readyCapability.promise.then(function() {
                        for (var b = this._progressListeners,
                        c = 0,
                        d = b.length; c < d; ++c) b[c](a)
                    }.bind(this))
                },
                onDataProgressiveRead: function(a) {
                    this._readyCapability.promise.then(function() {
                        for (var b = this._progressiveReadListeners,
                        c = 0,
                        d = b.length; c < d; ++c) b[c](a)
                    }.bind(this))
                },
                transportReady: function() {
                    this._readyCapability.resolve()
                },
                requestDataRange: function(a, b) {
                    throw new Error("Abstract method PDFDataRangeTransport.requestDataRange")
                },
                abort: function() {}
            },
            a
        } (),
        X = function() {
            function a(a, b, c) {
                this.pdfInfo = a,
                this.transport = b,
                this.loadingTask = c
            }
            return a.prototype = {
                get numPages() {
                    return this.pdfInfo.numPages
                },
                get fingerprint() {
                    return this.pdfInfo.fingerprint
                },
                getPage: function(a) {
                    return this.transport.getPage(a)
                },
                getPageIndex: function(a) {
                    return this.transport.getPageIndex(a)
                },
                getDestinations: function() {
                    return this.transport.getDestinations()
                },
                getDestination: function(a) {
                    return this.transport.getDestination(a)
                },
                getPageLabels: function() {
                    return this.transport.getPageLabels()
                },
                getAttachments: function() {
                    return this.transport.getAttachments()
                },
                getJavaScript: function() {
                    return this.transport.getJavaScript()
                },
                getOutline: function() {
                    return this.transport.getOutline()
                },
                getMetadata: function() {
                    return this.transport.getMetadata()
                },
                getData: function() {
                    return this.transport.getData()
                },
                getDownloadInfo: function() {
                    return this.transport.downloadInfoCapability.promise
                },
                getStats: function() {
                    return this.transport.getStats()
                },
                cleanup: function() {
                    this.transport.startCleanup()
                },
                destroy: function() {
                    return this.loadingTask.destroy()
                }
            },
            a
        } (),
        Y = function() {
            function a(a, b, c) {
                this.pageIndex = a,
                this.pageInfo = b,
                this.transport = c,
                this.stats = new q,
                this.stats.enabled = L("enableStats"),
                this.commonObjs = c.commonObjs,
                this.objs = new _,
                this.cleanupAfterRender = !1,
                this.pendingCleanup = !1,
                this.intentStates = Object.create(null),
                this.destroyed = !1
            }
            return a.prototype = {
                get pageNumber() {
                    return this.pageIndex + 1
                },
                get rotate() {
                    return this.pageInfo.rotate
                },
                get ref() {
                    return this.pageInfo.ref
                },
                get userUnit() {
                    return this.pageInfo.userUnit
                },
                get view() {
                    return this.pageInfo.view
                },
                getViewport: function(a, b) {
                    return arguments.length < 2 && (b = this.rotate),
                    new o(this.view, a, b, 0, 0)
                },
                getAnnotations: function(a) {
                    var b = a && a.intent || null;
                    return this.annotationsPromise && this.annotationsIntent === b || (this.annotationsPromise = this.transport.getAnnotations(this.pageIndex, b), this.annotationsIntent = b),
                    this.annotationsPromise
                },
                render: function(a) {
                    function b(a) {
                        var b = g.renderTasks.indexOf(h);
                        b >= 0 && g.renderTasks.splice(b, 1),
                        j.cleanupAfterRender && (j.pendingCleanup = !0),
                        j._tryCleanup(),
                        a ? h.capability.reject(a) : h.capability.resolve(),
                        c.timeEnd("Rendering"),
                        c.timeEnd("Overall")
                    }
                    var c = this.stats;
                    c.time("Overall"),
                    this.pendingCleanup = !1;
                    var d = "print" === a.intent ? "print": "display",
                    e = a.renderInteractiveForms === !0,
                    f = a.canvasFactory || new M;
                    this.intentStates[d] || (this.intentStates[d] = Object.create(null));
                    var g = this.intentStates[d];
                    g.displayReadyCapability || (g.receivingOperatorList = !0, g.displayReadyCapability = u(), g.operatorList = {
                        fnArray: [],
                        argsArray: [],
                        lastChunk: !1
                    },
                    this.stats.time("Page Request"), this.transport.messageHandler.send("RenderPageRequest", {
                        pageIndex: this.pageNumber - 1,
                        intent: d,
                        renderInteractiveForms: e
                    }));
                    var h = new ba(b, a, this.objs, this.commonObjs, g.operatorList, this.pageNumber, f);
                    h.useRequestAnimationFrame = "print" !== d,
                    g.renderTasks || (g.renderTasks = []),
                    g.renderTasks.push(h);
                    var i = h.task;
                    a.continueCallback && (w("render is used with continueCallback parameter"), i.onContinue = a.continueCallback);
                    var j = this;
                    return g.displayReadyCapability.promise.then(function(a) {
                        return j.pendingCleanup ? void b() : (c.time("Rendering"), h.initializeGraphics(a), void h.operatorListChanged())
                    },
                    function(a) {
                        b(a)
                    }),
                    i
                },
                getOperatorList: function() {
                    function a() {
                        if (d.operatorList.lastChunk) {
                            d.opListReadCapability.resolve(d.operatorList);
                            var a = d.renderTasks.indexOf(c);
                            a >= 0 && d.renderTasks.splice(a, 1)
                        }
                    }
                    var b = "oplist";
                    this.intentStates[b] || (this.intentStates[b] = Object.create(null));
                    var c, d = this.intentStates[b];
                    return d.opListReadCapability || (c = {},
                    c.operatorListChanged = a, d.receivingOperatorList = !0, d.opListReadCapability = u(), d.renderTasks = [], d.renderTasks.push(c), d.operatorList = {
                        fnArray: [],
                        argsArray: [],
                        lastChunk: !1
                    },
                    this.transport.messageHandler.send("RenderPageRequest", {
                        pageIndex: this.pageIndex,
                        intent: b
                    })),
                    d.opListReadCapability.promise
                },
                getTextContent: function(a) {
                    return this.transport.messageHandler.sendWithPromise("GetTextContent", {
                        pageIndex: this.pageNumber - 1,
                        normalizeWhitespace: !(!a || a.normalizeWhitespace !== !0),
                        combineTextItems: !a || a.disableCombineTextItems !== !0
                    })
                },
                _destroy: function() {
                    this.destroyed = !0,
                    this.transport.pageCache[this.pageIndex] = null;
                    var a = [];
                    return Object.keys(this.intentStates).forEach(function(b) {
                        if ("oplist" !== b) {
                            var c = this.intentStates[b];
                            c.renderTasks.forEach(function(b) {
                                var c = b.capability.promise.
                                catch(function() {});
                                a.push(c),
                                b.cancel()
                            })
                        }
                    },
                    this),
                    this.objs.clear(),
                    this.annotationsPromise = null,
                    this.pendingCleanup = !1,
                    Promise.all(a)
                },
                destroy: function() {
                    w("page destroy method, use cleanup() instead"),
                    this.cleanup()
                },
                cleanup: function() {
                    this.pendingCleanup = !0,
                    this._tryCleanup()
                },
                _tryCleanup: function() {
                    this.pendingCleanup && !Object.keys(this.intentStates).some(function(a) {
                        var b = this.intentStates[a];
                        return 0 !== b.renderTasks.length || b.receivingOperatorList
                    },
                    this) && (Object.keys(this.intentStates).forEach(function(a) {
                        delete this.intentStates[a]
                    },
                    this), this.objs.clear(), this.annotationsPromise = null, this.pendingCleanup = !1)
                },
                _startRenderPage: function(a, b) {
                    var c = this.intentStates[b];
                    c.displayReadyCapability && c.displayReadyCapability.resolve(a)
                },
                _renderPageChunk: function(a, b) {
                    var c, d, e = this.intentStates[b];
                    for (c = 0, d = a.length; c < d; c++) e.operatorList.fnArray.push(a.fnArray[c]),
                    e.operatorList.argsArray.push(a.argsArray[c]);
                    for (e.operatorList.lastChunk = a.lastChunk, c = 0; c < e.renderTasks.length; c++) e.renderTasks[c].operatorListChanged();
                    a.lastChunk && (e.receivingOperatorList = !1, this._tryCleanup())
                }
            },
            a
        } (),
        Z = function() {
            function a() {
                return "undefined" != typeof f ? f: L("workerSrc") ? L("workerSrc") : R ? R.replace(/\.js$/i, ".worker.js") : void v("No PDFJS.workerSrc specified")
            }
            function b() {
                if (g) return g.promise;
                g = u();
                var b = S ||
                function(b) {
                    t.loadScript(a(),
                    function() {
                        b(window.pdfjsDistBuildPdfWorker.WorkerMessageHandler)
                    })
                };
                return b(g.resolve),
                g.promise
            }
            function c(a) {
                this._listeners = [],
                this._defer = a,
                this._deferred = Promise.resolve(void 0)
            }
            function d(a) {
                var b = "importScripts('" + a + "');";
                return URL.createObjectURL(new Blob([b]))
            }
            function e(a, b) {
                return this.name = a,
                this.destroyed = !1,
                this._readyCapability = u(),
                this._port = null,
                this._webWorker = null,
                this._messageHandler = null,
                b ? void this._initializeFromPort(b) : void this._initialize()
            }
            var g, h = 0;
            return c.prototype = {
                postMessage: function(a, b) {
                    function c(a) {
                        if ("object" != typeof a || null === a) return a;
                        if (d.has(a)) return d.get(a);
                        var e, f;
                        if ((f = a.buffer) && B(f)) {
                            var g = b && b.indexOf(f) >= 0;
                            return e = a === f ? a: g ? new a.constructor(f, a.byteOffset, a.byteLength) : new a.constructor(a),
                            d.set(a, e),
                            e
                        }
                        e = A(a) ? [] : {},
                        d.set(a, e);
                        for (var h in a) {
                            for (var i, j = a; ! (i = Object.getOwnPropertyDescriptor(j, h));) j = Object.getPrototypeOf(j);
                            "undefined" != typeof i.value && "function" != typeof i.value && (e[h] = c(i.value))
                        }
                        return e
                    }
                    if (!this._defer) return void this._listeners.forEach(function(b) {
                        b.call(this, {
                            data: a
                        })
                    },
                    this);
                    var d = new WeakMap,
                    e = {
                        data: c(a)
                    };
                    this._deferred.then(function() {
                        this._listeners.forEach(function(a) {
                            a.call(this, e)
                        },
                        this)
                    }.bind(this))
                },
                addEventListener: function(a, b) {
                    this._listeners.push(b)
                },
                removeEventListener: function(a, b) {
                    var c = this._listeners.indexOf(b);
                    this._listeners.splice(c, 1)
                },
                terminate: function() {
                    this._listeners = []
                }
            },
            e.prototype = {
                get promise() {
                    return this._readyCapability.promise
                },
                get port() {
                    return this._port
                },
                get messageHandler() {
                    return this._messageHandler
                },
                _initializeFromPort: function(a) {
                    this._port = a,
                    this._messageHandler = new m("main", "worker", a),
                    this._messageHandler.on("ready",
                    function() {}),
                    this._readyCapability.resolve()
                },
                _initialize: function() {
                    if (!P && !L("disableWorker") && "undefined" != typeof Worker) {
                        var b = a();
                        try {
                            C(window.location.href, b) || (b = d(new URL(b, window.location).href));
                            var c = new Worker(b),
                            e = new m("main", "worker", c),
                            f = function() {
                                c.removeEventListener("error", g),
                                e.destroy(),
                                c.terminate(),
                                this.destroyed ? this._readyCapability.reject(new Error("Worker was destroyed")) : this._setupFakeWorker()
                            }.bind(this),
                            g = function(a) {
                                this._webWorker || f()
                            }.bind(this);
                            c.addEventListener("error", g),
                            e.on("test",
                            function(a) {
                                if (c.removeEventListener("error", g), this.destroyed) return void f();
                                var b = a && a.supportTypedArray;
                                b ? (this._messageHandler = e, this._port = c, this._webWorker = c, a.supportTransfers || (Q = !0), this._readyCapability.resolve(), e.send("configure", {
                                    verbosity: x()
                                })) : (this._setupFakeWorker(), e.destroy(), c.terminate())
                            }.bind(this)),
                            e.on("console_log",
                            function(a) {
                                console.log.apply(console, a)
                            }),
                            e.on("console_error",
                            function(a) {
                                console.error.apply(console, a)
                            }),
                            e.on("ready",
                            function(a) {
                                if (c.removeEventListener("error", g), this.destroyed) return void f();
                                try {
                                    h()
                                } catch(b) {
                                    this._setupFakeWorker()
                                }
                            }.bind(this));
                            var h = function() {
                                var a = L("postMessageTransfers") && !Q,
                                b = new Uint8Array([a ? 255 : 0]);
                                try {
                                    e.send("test", b, [b.buffer])
                                } catch(c) {
                                    y("Cannot use postMessage transfers"),
                                    b[0] = 0,
                                    e.send("test", b)
                                }
                            };
                            return void h()
                        } catch(i) {
                            y("The worker has been disabled.")
                        }
                    }
                    this._setupFakeWorker()
                },
                _setupFakeWorker: function() {
                    P || L("disableWorker") || (G("Setting up fake worker."), P = !0),
                    b().then(function(a) {
                        if (this.destroyed) return void this._readyCapability.reject(new Error("Worker was destroyed"));
                        var b = Uint8Array !== Float32Array,
                        d = new c(b);
                        this._port = d;
                        var e = "fake" + h++,
                        f = new m(e + "_worker", e, d);
                        a.setup(f, d);
                        var g = new m(e, e + "_worker", d);
                        this._messageHandler = g,
                        this._readyCapability.resolve()
                    }.bind(this))
                },
                destroy: function() {
                    this.destroyed = !0,
                    this._webWorker && (this._webWorker.terminate(), this._webWorker = null),
                    this._port = null,
                    this._messageHandler && (this._messageHandler.destroy(), this._messageHandler = null)
                }
            },
            e
        } (),
        $ = function() {
            function a(a, b, c, d) {
                this.messageHandler = a,
                this.loadingTask = b,
                this.pdfDataRangeTransport = c,
                this.commonObjs = new _,
                this.fontLoader = new I(b.docId),
                this.CMapReaderFactory = new d({
                    baseUrl: L("cMapUrl"),
                    isCompressed: L("cMapPacked")
                }),
                this.destroyed = !1,
                this.destroyCapability = null,
                this._passwordCapability = null,
                this.pageCache = [],
                this.pagePromises = [],
                this.downloadInfoCapability = u(),
                this.setupMessageHandler()
            }
            return a.prototype = {
                destroy: function() {
                    if (this.destroyCapability) return this.destroyCapability.promise;
                    this.destroyed = !0,
                    this.destroyCapability = u(),
                    this._passwordCapability && this._passwordCapability.reject(new Error("Worker was destroyed during onPassword callback"));
                    var a = [];
                    this.pageCache.forEach(function(b) {
                        b && a.push(b._destroy())
                    }),
                    this.pageCache = [],
                    this.pagePromises = [];
                    var b = this,
                    c = this.messageHandler.sendWithPromise("Terminate", null);
                    return a.push(c),
                    Promise.all(a).then(function() {
                        b.fontLoader.clear(),
                        b.pdfDataRangeTransport && (b.pdfDataRangeTransport.abort(), b.pdfDataRangeTransport = null),
                        b.messageHandler && (b.messageHandler.destroy(), b.messageHandler = null),
                        b.destroyCapability.resolve()
                    },
                    this.destroyCapability.reject),
                    this.destroyCapability.promise
                },
                setupMessageHandler: function() {
                    var a = this.messageHandler,
                    b = this.loadingTask,
                    c = this.pdfDataRangeTransport;
                    c && (c.addRangeListener(function(b, c) {
                        a.send("OnDataRange", {
                            begin: b,
                            chunk: c
                        })
                    }), c.addProgressListener(function(b) {
                        a.send("OnDataProgress", {
                            loaded: b
                        })
                    }), c.addProgressiveReadListener(function(b) {
                        a.send("OnDataRange", {
                            chunk: b
                        })
                    }), a.on("RequestDataRange",
                    function(a) {
                        c.requestDataRange(a.begin, a.end)
                    },
                    this)),
                    a.on("GetDoc",
                    function(a) {
                        var b = a.pdfInfo;
                        this.numPages = a.pdfInfo.numPages;
                        var c = this.loadingTask,
                        d = new X(b, this, c);
                        this.pdfDocument = d,
                        c._capability.resolve(d)
                    },
                    this),
                    a.on("PasswordRequest",
                    function(a) {
                        if (this._passwordCapability = u(), b.onPassword) {
                            var c = function(a) {
                                this._passwordCapability.resolve({
                                    password: a
                                })
                            }.bind(this);
                            b.onPassword(c, a.code)
                        } else this._passwordCapability.reject(new p(a.message, a.code));
                        return this._passwordCapability.promise
                    },
                    this),
                    a.on("PasswordException",
                    function(a) {
                        b._capability.reject(new p(a.message, a.code))
                    },
                    this),
                    a.on("InvalidPDF",
                    function(a) {
                        this.loadingTask._capability.reject(new l(a.message))
                    },
                    this),
                    a.on("MissingPDF",
                    function(a) {
                        this.loadingTask._capability.reject(new n(a.message))
                    },
                    this),
                    a.on("UnexpectedResponse",
                    function(a) {
                        this.loadingTask._capability.reject(new r(a.message, a.status))
                    },
                    this),
                    a.on("UnknownError",
                    function(a) {
                        this.loadingTask._capability.reject(new s(a.message, a.details))
                    },
                    this),
                    a.on("DataLoaded",
                    function(a) {
                        this.downloadInfoCapability.resolve(a)
                    },
                    this),
                    a.on("PDFManagerReady",
                    function(a) {
                        this.pdfDataRangeTransport && this.pdfDataRangeTransport.transportReady()
                    },
                    this),
                    a.on("StartRenderPage",
                    function(a) {
                        if (!this.destroyed) {
                            var b = this.pageCache[a.pageIndex];
                            b.stats.timeEnd("Page Request"),
                            b._startRenderPage(a.transparency, a.intent)
                        }
                    },
                    this),
                    a.on("RenderPageChunk",
                    function(a) {
                        if (!this.destroyed) {
                            var b = this.pageCache[a.pageIndex];
                            b._renderPageChunk(a.operatorList, a.intent)
                        }
                    },
                    this),
                    a.on("commonobj",
                    function(a) {
                        if (!this.destroyed) {
                            var b = a[0],
                            c = a[1];
                            if (!this.commonObjs.hasData(b)) switch (c) {
                            case "Font":
                                var d = a[2];
                                if ("error" in d) {
                                    var e = d.error;
                                    G("Error during font loading: " + e),
                                    this.commonObjs.resolve(b, e);
                                    break
                                }
                                var f = null;
                                L("pdfBug") && F.FontInspector && F.FontInspector.enabled && (f = {
                                    registerFont: function(a, b) {
                                        F.FontInspector.fontAdded(a, b)
                                    }
                                });
                                var g = new H(d, {
                                    isEvalSuported: L("isEvalSupported"),
                                    disableFontFace: L("disableFontFace"),
                                    fontRegistry: f
                                });
                                this.fontLoader.bind([g],
                                function(a) {
                                    this.commonObjs.resolve(b, g)
                                }.bind(this));
                                break;
                            case "FontPath":
                                this.commonObjs.resolve(b, a[2]);
                                break;
                            default:
                                v("Got unknown common object type " + c)
                            }
                        }
                    },
                    this),
                    a.on("obj",
                    function(a) {
                        if (!this.destroyed) {
                            var b, c = a[0],
                            d = a[1],
                            e = a[2],
                            f = this.pageCache[d];
                            if (!f.objs.hasData(c)) switch (e) {
                            case "JpegStream":
                                b = a[3],
                                D(c, b, f.objs);
                                break;
                            case "Image":
                                b = a[3],
                                f.objs.resolve(c, b);
                                var g = 8e6;
                                b && "data" in b && b.data.length > g && (f.cleanupAfterRender = !0);
                                break;
                            default:
                                v("Got unknown object type " + e)
                            }
                        }
                    },
                    this),
                    a.on("DocProgress",
                    function(a) {
                        if (!this.destroyed) {
                            var b = this.loadingTask;
                            b.onProgress && b.onProgress({
                                loaded: a.loaded,
                                total: a.total
                            })
                        }
                    },
                    this),
                    a.on("PageError",
                    function(a) {
                        if (!this.destroyed) {
                            var b = this.pageCache[a.pageNum - 1],
                            c = b.intentStates[a.intent];
                            if (c.displayReadyCapability ? c.displayReadyCapability.reject(a.error) : v(a.error), c.operatorList) {
                                c.operatorList.lastChunk = !0;
                                for (var d = 0; d < c.renderTasks.length; d++) c.renderTasks[d].operatorListChanged()
                            }
                        }
                    },
                    this),
                    a.on("UnsupportedFeature",
                    function(a) {
                        if (!this.destroyed) {
                            var b = a.featureId,
                            c = this.loadingTask;
                            c.onUnsupportedFeature && c.onUnsupportedFeature(b),
                            ca.notify(b)
                        }
                    },
                    this),
                    a.on("JpegDecode",
                    function(a) {
                        if (this.destroyed) return Promise.reject(new Error("Worker was destroyed"));
                        if ("undefined" == typeof document) return Promise.reject(new Error('"document" is not defined.'));
                        var b = a[0],
                        c = a[1];
                        return 3 !== c && 1 !== c ? Promise.reject(new Error("Only 3 components or 1 component can be returned")) : new Promise(function(a, d) {
                            var e = new Image;
                            e.onload = function() {
                                var b = e.width,
                                d = e.height,
                                f = b * d,
                                g = 4 * f,
                                h = new Uint8Array(f * c),
                                i = document.createElement("canvas");
                                i.width = b,
                                i.height = d;
                                var j = i.getContext("2d");
                                j.drawImage(e, 0, 0);
                                var k, l, m = j.getImageData(0, 0, b, d).data;
                                if (3 === c) for (k = 0, l = 0; k < g; k += 4, l += 3) h[l] = m[k],
                                h[l + 1] = m[k + 1],
                                h[l + 2] = m[k + 2];
                                else if (1 === c) for (k = 0, l = 0; k < g; k += 4, l++) h[l] = m[k];
                                a({
                                    data: h,
                                    width: b,
                                    height: d
                                })
                            },
                            e.onerror = function() {
                                d(new Error("JpegDecode failed to load image"))
                            },
                            e.src = b
                        })
                    },
                    this),
                    a.on("FetchBuiltInCMap",
                    function(a) {
                        return this.destroyed ? Promise.reject(new Error("Worker was destroyed")) : this.CMapReaderFactory.fetch({
                            name: a.name
                        })
                    },
                    this)
                },
                getData: function() {
                    return this.messageHandler.sendWithPromise("GetData", null)
                },
                getPage: function(a, b) {
                    if (!z(a) || a <= 0 || a > this.numPages) return Promise.reject(new Error("Invalid page request"));
                    var c = a - 1;
                    if (c in this.pagePromises) return this.pagePromises[c];
                    var d = this.messageHandler.sendWithPromise("GetPage", {
                        pageIndex: c
                    }).then(function(a) {
                        if (this.destroyed) throw new Error("Transport destroyed");
                        var b = new Y(c, a, this);
                        return this.pageCache[c] = b,
                        b
                    }.bind(this));
                    return this.pagePromises[c] = d,
                    d
                },
                getPageIndex: function(a) {
                    return this.messageHandler.sendWithPromise("GetPageIndex", {
                        ref: a
                    }).
                    catch(function(a) {
                        return Promise.reject(new Error(a))
                    })
                },
                getAnnotations: function(a, b) {
                    return this.messageHandler.sendWithPromise("GetAnnotations", {
                        pageIndex: a,
                        intent: b
                    })
                },
                getDestinations: function() {
                    return this.messageHandler.sendWithPromise("GetDestinations", null)
                },
                getDestination: function(a) {
                    return this.messageHandler.sendWithPromise("GetDestination", {
                        id: a
                    })
                },
                getPageLabels: function() {
                    return this.messageHandler.sendWithPromise("GetPageLabels", null)
                },
                getAttachments: function() {
                    return this.messageHandler.sendWithPromise("GetAttachments", null)
                },
                getJavaScript: function() {
                    return this.messageHandler.sendWithPromise("GetJavaScript", null)
                },
                getOutline: function() {
                    return this.messageHandler.sendWithPromise("GetOutline", null)
                },
                getMetadata: function() {
                    return this.messageHandler.sendWithPromise("GetMetadata", null).then(function(a) {
                        return {
                            info: a[0],
                            metadata: a[1] ? new K(a[1]) : null
                        }
                    })
                },
                getStats: function() {
                    return this.messageHandler.sendWithPromise("GetStats", null)
                },
                startCleanup: function() {
                    this.messageHandler.sendWithPromise("Cleanup", null).then(function() {
                        for (var a = 0,
                        b = this.pageCache.length; a < b; a++) {
                            var c = this.pageCache[a];
                            c && c.cleanup()
                        }
                        this.commonObjs.clear(),
                        this.fontLoader.clear()
                    }.bind(this))
                }
            },
            a
        } (),
        _ = function() {
            function a() {
                this.objs = Object.create(null)
            }
            return a.prototype = {
                ensureObj: function(a) {
                    if (this.objs[a]) return this.objs[a];
                    var b = {
                        capability: u(),
                        data: null,
                        resolved: !1
                    };
                    return this.objs[a] = b,
                    b
                },
                get: function(a, b) {
                    if (b) return this.ensureObj(a).capability.promise.then(b),
                    null;
                    var c = this.objs[a];
                    return c && c.resolved || v("Requesting object that isn't resolved yet " + a),
                    c.data
                },
                resolve: function(a, b) {
                    var c = this.ensureObj(a);
                    c.resolved = !0,
                    c.data = b,
                    c.capability.resolve(b)
                },
                isResolved: function(a) {
                    var b = this.objs;
                    return !! b[a] && b[a].resolved
                },
                hasData: function(a) {
                    return this.isResolved(a)
                },
                getData: function(a) {
                    var b = this.objs;
                    return b[a] && b[a].resolved ? b[a].data: null
                },
                clear: function() {
                    this.objs = Object.create(null)
                }
            },
            a
        } (),
        aa = function() {
            function a(a) {
                this._internalRenderTask = a,
                this.onContinue = null
            }
            return a.prototype = {
                get promise() {
                    return this._internalRenderTask.capability.promise
                },
                cancel: function() {
                    this._internalRenderTask.cancel()
                },
                then: function(a, b) {
                    return this.promise.then.apply(this.promise, arguments)
                }
            },
            a
        } (),
        ba = function() {
            function a(a, b, c, d, e, f, g) {
                this.callback = a,
                this.params = b,
                this.objs = c,
                this.commonObjs = d,
                this.operatorListIdx = null,
                this.operatorList = e,
                this.pageNumber = f,
                this.canvasFactory = g,
                this.running = !1,
                this.graphicsReadyCallback = null,
                this.graphicsReady = !1,
                this.useRequestAnimationFrame = !1,
                this.cancelled = !1,
                this.capability = u(),
                this.task = new aa(this),
                this._continueBound = this._continue.bind(this),
                this._scheduleNextBound = this._scheduleNext.bind(this),
                this._nextBound = this._next.bind(this)
            }
            return a.prototype = {
                initializeGraphics: function(a) {
                    if (!this.cancelled) {
                        L("pdfBug") && F.StepperManager && F.StepperManager.enabled && (this.stepper = F.StepperManager.create(this.pageNumber - 1), this.stepper.init(this.operatorList), this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint());
                        var b = this.params;
                        this.gfx = new J(b.canvasContext, this.commonObjs, this.objs, this.canvasFactory, b.imageLayer),
                        this.gfx.beginDrawing(b.transform, b.viewport, a),
                        this.operatorListIdx = 0,
                        this.graphicsReady = !0,
                        this.graphicsReadyCallback && this.graphicsReadyCallback()
                    }
                },
                cancel: function() {
                    this.running = !1,
                    this.cancelled = !0,
                    this.callback("cancelled")
                },
                operatorListChanged: function() {
                    return this.graphicsReady ? (this.stepper && this.stepper.updateOperatorList(this.operatorList), void(this.running || this._continue())) : void(this.graphicsReadyCallback || (this.graphicsReadyCallback = this._continueBound))
                },
                _continue: function() {
                    this.running = !0,
                    this.cancelled || (this.task.onContinue ? this.task.onContinue(this._scheduleNextBound) : this._scheduleNext())
                },
                _scheduleNext: function() {
                    this.useRequestAnimationFrame && "undefined" != typeof window ? window.requestAnimationFrame(this._nextBound) : Promise.resolve(void 0).then(this._nextBound)
                },
                _next: function() {
                    this.cancelled || (this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper), this.operatorListIdx === this.operatorList.argsArray.length && (this.running = !1, this.operatorList.lastChunk && (this.gfx.endDrawing(), this.callback())))
                }
            },
            a
        } (),
        ca = function() {
            var a = [];
            return {
                listen: function(b) {
                    w("Global UnsupportedManager.listen is used:  use PDFDocumentLoadingTask.onUnsupportedFeature instead"),
                    a.push(b)
                },
                notify: function(b) {
                    for (var c = 0,
                    d = a.length; c < d; c++) a[c](b)
                }
            }
        } ();
        b.version = "1.7.376",
        b.build = "e2e13df4",
        b.getDocument = d,
        b.PDFDataRangeTransport = W,
        b.PDFWorker = Z,
        b.PDFDocumentProxy = X,
        b.PDFPageProxy = Y,
        b._UnsupportedManager = ca
    },
    function(a, b, c) {
        var d = c(0),
        e = d.FONT_IDENTITY_MATRIX,
        f = d.IDENTITY_MATRIX,
        g = d.ImageKind,
        h = d.OPS,
        i = d.Util,
        j = d.isNum,
        k = d.isArray,
        l = d.warn,
        m = d.createObjectURL,
        n = {
            fontStyle: "normal",
            fontWeight: "normal",
            fillColor: "#000000"
        },
        o = function() {
            function a(a, b, c) {
                for (var d = -1,
                e = b; e < c; e++) {
                    var f = 255 & (d ^ a[e]),
                    g = h[f];
                    d = d >>> 8 ^ g
                }
                return d ^ -1
            }
            function b(b, c, d, e) {
                var f = e,
                g = c.length;
                d[f] = g >> 24 & 255,
                d[f + 1] = g >> 16 & 255,
                d[f + 2] = g >> 8 & 255,
                d[f + 3] = 255 & g,
                f += 4,
                d[f] = 255 & b.charCodeAt(0),
                d[f + 1] = 255 & b.charCodeAt(1),
                d[f + 2] = 255 & b.charCodeAt(2),
                d[f + 3] = 255 & b.charCodeAt(3),
                f += 4,
                d.set(c, f),
                f += c.length;
                var h = a(d, e + 4, f);
                d[f] = h >> 24 & 255,
                d[f + 1] = h >> 16 & 255,
                d[f + 2] = h >> 8 & 255,
                d[f + 3] = 255 & h
            }
            function c(a, b, c) {
                for (var d = 1,
                e = 0,
                f = b; f < c; ++f) d = (d + (255 & a[f])) % 65521,
                e = (e + d) % 65521;
                return e << 16 | d
            }
            function d(a, d, h) {
                var i, j, k, l = a.width,
                n = a.height,
                o = a.data;
                switch (d) {
                case g.GRAYSCALE_1BPP:
                    j = 0,
                    i = 1,
                    k = l + 7 >> 3;
                    break;
                case g.RGB_24BPP:
                    j = 2,
                    i = 8,
                    k = 3 * l;
                    break;
                case g.RGBA_32BPP:
                    j = 6,
                    i = 8,
                    k = 4 * l;
                    break;
                default:
                    throw new Error("invalid format")
                }
                var p, q, r = new Uint8Array((1 + k) * n),
                s = 0,
                t = 0;
                for (p = 0; p < n; ++p) r[s++] = 0,
                r.set(o.subarray(t, t + k), s),
                t += k,
                s += k;
                if (d === g.GRAYSCALE_1BPP) for (s = 0, p = 0; p < n; p++) for (s++, q = 0; q < k; q++) r[s++] ^= 255;
                var u = new Uint8Array([l >> 24 & 255, l >> 16 & 255, l >> 8 & 255, 255 & l, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, i, j, 0, 0, 0]),
                v = r.length,
                w = 65535,
                x = Math.ceil(v / w),
                y = new Uint8Array(2 + v + 5 * x + 4),
                z = 0;
                y[z++] = 120,
                y[z++] = 156;
                for (var A = 0; v > w;) y[z++] = 0,
                y[z++] = 255,
                y[z++] = 255,
                y[z++] = 0,
                y[z++] = 0,
                y.set(r.subarray(A, A + w), z),
                z += w,
                A += w,
                v -= w;
                y[z++] = 1,
                y[z++] = 255 & v,
                y[z++] = v >> 8 & 255,
                y[z++] = 65535 & ~v & 255,
                y[z++] = (65535 & ~v) >> 8 & 255,
                y.set(r.subarray(A), z),
                z += r.length - A;
                var B = c(r, 0, r.length);
                y[z++] = B >> 24 & 255,
                y[z++] = B >> 16 & 255,
                y[z++] = B >> 8 & 255,
                y[z++] = 255 & B;
                var C = e.length + 3 * f + u.length + y.length,
                D = new Uint8Array(C),
                E = 0;
                return D.set(e, E),
                E += e.length,
                b("IHDR", u, D, E),
                E += f + u.length,
                b("IDATA", y, D, E),
                E += f + y.length,
                b("IEND", new Uint8Array(0), D, E),
                m(D, "image/png", h)
            }
            for (var e = new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10]), f = 12, h = new Int32Array(256), i = 0; i < 256; i++) {
                for (var j = i,
                k = 0; k < 8; k++) j = 1 & j ? 3988292384 ^ j >> 1 & 2147483647 : j >> 1 & 2147483647;
                h[i] = j
            }
            return function(a, b) {
                var c = void 0 === a.kind ? g.GRAYSCALE_1BPP: a.kind;
                return d(a, c, b)
            }
        } (),
        p = function() {
            function a() {
                this.fontSizeScale = 1,
                this.fontWeight = n.fontWeight,
                this.fontSize = 0,
                this.textMatrix = f,
                this.fontMatrix = e,
                this.leading = 0,
                this.x = 0,
                this.y = 0,
                this.lineX = 0,
                this.lineY = 0,
                this.charSpacing = 0,
                this.wordSpacing = 0,
                this.textHScale = 1,
                this.textRise = 0,
                this.fillColor = n.fillColor,
                this.strokeColor = "#000000",
                this.fillAlpha = 1,
                this.strokeAlpha = 1,
                this.lineWidth = 1,
                this.lineJoin = "",
                this.lineCap = "",
                this.miterLimit = 0,
                this.dashArray = [],
                this.dashPhase = 0,
                this.dependencies = [],
                this.activeClipUrl = null,
                this.clipGroup = null,
                this.maskId = ""
            }
            return a.prototype = {
                clone: function() {
                    return Object.create(this)
                },
                setCurrentPoint: function(a, b) {
                    this.x = a,
                    this.y = b
                }
            },
            a
        } (),
        q = function() {
            function a(a) {
                for (var b = [], c = [], d = a.length, e = 0; e < d; e++)"save" !== a[e].fn ? "restore" === a[e].fn ? b = c.pop() : b.push(a[e]) : (b.push({
                    fnId: 92,
                    fn: "group",
                    items: []
                }), c.push(b), b = b[b.length - 1].items);
                return b
            }
            function b(a) {
                if (a === (0 | a)) return a.toString();
                var b = a.toFixed(10),
                c = b.length - 1;
                if ("0" !== b[c]) return b;
                do c--;
                while ("0" === b[c]);
                return b.substr(0, "." === b[c] ? c: c + 1)
            }
            function c(a) {
                if (0 === a[4] && 0 === a[5]) {
                    if (0 === a[1] && 0 === a[2]) return 1 === a[0] && 1 === a[3] ? "": "scale(" + b(a[0]) + " " + b(a[3]) + ")";
                    if (a[0] === a[3] && a[1] === -a[2]) {
                        var c = 180 * Math.acos(a[0]) / Math.PI;
                        return "rotate(" + b(c) + ")"
                    }
                } else if (1 === a[0] && 0 === a[1] && 0 === a[2] && 1 === a[3]) return "translate(" + b(a[4]) + " " + b(a[5]) + ")";
                return "matrix(" + b(a[0]) + " " + b(a[1]) + " " + b(a[2]) + " " + b(a[3]) + " " + b(a[4]) + " " + b(a[5]) + ")"
            }
            function d(a, b, c) {
                this.current = new p,
                this.transformMatrix = f,
                this.transformStack = [],
                this.extraStack = [],
                this.commonObjs = a,
                this.objs = b,
                this.pendingEOFill = !1,
                this.embedFonts = !1,
                this.embeddedFonts = Object.create(null),
                this.cssStyle = null,
                this.forceDataSchema = !!c
            }
            var g = "http://www.w3.org/2000/svg",
            q = "http://www.w3.org/XML/1998/namespace",
            r = "http://www.w3.org/1999/xlink",
            s = ["butt", "round", "square"],
            t = ["miter", "round", "bevel"],
            u = 0,
            v = 0;
            return d.prototype = {
                save: function() {
                    this.transformStack.push(this.transformMatrix);
                    var a = this.current;
                    this.extraStack.push(a),
                    this.current = a.clone()
                },
                restore: function() {
                    this.transformMatrix = this.transformStack.pop(),
                    this.current = this.extraStack.pop(),
                    this.tgrp = null
                },
                group: function(a) {
                    this.save(),
                    this.executeOpTree(a),
                    this.restore()
                },
                loadDependencies: function(a) {
                    for (var b = a.fnArray,
                    c = b.length,
                    d = a.argsArray,
                    e = this,
                    f = 0; f < c; f++) if (h.dependency === b[f]) for (var g = d[f], i = 0, j = g.length; i < j; i++) {
                        var k, l = g[i],
                        m = "g_" === l.substring(0, 2);
                        k = m ? new Promise(function(a) {
                            e.commonObjs.get(l, a)
                        }) : new Promise(function(a) {
                            e.objs.get(l, a)
                        }),
                        this.current.dependencies.push(k)
                    }
                    return Promise.all(this.current.dependencies)
                },
                transform: function(a, b, c, d, e, f) {
                    var g = [a, b, c, d, e, f];
                    this.transformMatrix = i.transform(this.transformMatrix, g),
                    this.tgrp = null
                },
                getSVG: function(a, b) {
                    this.viewport = b;
                    var c = this._initialize(b);
                    return this.loadDependencies(a).then(function() {
                        this.transformMatrix = f;
                        var b = this.convertOpList(a);
                        return this.executeOpTree(b),
                        c
                    }.bind(this))
                },
                convertOpList: function(b) {
                    var c = b.argsArray,
                    d = b.fnArray,
                    e = d.length,
                    f = [],
                    g = [];
                    for (var i in h) f[h[i]] = i;
                    for (var j = 0; j < e; j++) {
                        var k = d[j];
                        g.push({
                            fnId: k,
                            fn: f[k],
                            args: c[j]
                        })
                    }
                    return a(g)
                },
                executeOpTree: function(a) {
                    for (var b = a.length,
                    c = 0; c < b; c++) {
                        var d = a[c].fn,
                        e = a[c].fnId,
                        f = a[c].args;
                        switch (0 | e) {
                        case h.beginText:
                            this.beginText();
                            break;
                        case h.setLeading:
                            this.setLeading(f);
                            break;
                        case h.setLeadingMoveText:
                            this.setLeadingMoveText(f[0], f[1]);
                            break;
                        case h.setFont:
                            this.setFont(f);
                            break;
                        case h.showText:
                            this.showText(f[0]);
                            break;
                        case h.showSpacedText:
                            this.showText(f[0]);
                            break;
                        case h.endText:
                            this.endText();
                            break;
                        case h.moveText:
                            this.moveText(f[0], f[1]);
                            break;
                        case h.setCharSpacing:
                            this.setCharSpacing(f[0]);
                            break;
                        case h.setWordSpacing:
                            this.setWordSpacing(f[0]);
                            break;
                        case h.setHScale:
                            this.setHScale(f[0]);
                            break;
                        case h.setTextMatrix:
                            this.setTextMatrix(f[0], f[1], f[2], f[3], f[4], f[5]);
                            break;
                        case h.setLineWidth:
                            this.setLineWidth(f[0]);
                            break;
                        case h.setLineJoin:
                            this.setLineJoin(f[0]);
                            break;
                        case h.setLineCap:
                            this.setLineCap(f[0]);
                            break;
                        case h.setMiterLimit:
                            this.setMiterLimit(f[0]);
                            break;
                        case h.setFillRGBColor:
                            this.setFillRGBColor(f[0], f[1], f[2]);
                            break;
                        case h.setStrokeRGBColor:
                            this.setStrokeRGBColor(f[0], f[1], f[2]);
                            break;
                        case h.setDash:
                            this.setDash(f[0], f[1]);
                            break;
                        case h.setGState:
                            this.setGState(f[0]);
                            break;
                        case h.fill:
                            this.fill();
                            break;
                        case h.eoFill:
                            this.eoFill();
                            break;
                        case h.stroke:
                            this.stroke();
                            break;
                        case h.fillStroke:
                            this.fillStroke();
                            break;
                        case h.eoFillStroke:
                            this.eoFillStroke();
                            break;
                        case h.clip:
                            this.clip("nonzero");
                            break;
                        case h.eoClip:
                            this.clip("evenodd");
                            break;
                        case h.paintSolidColorImageMask:
                            this.paintSolidColorImageMask();
                            break;
                        case h.paintJpegXObject:
                            this.paintJpegXObject(f[0], f[1], f[2]);
                            break;
                        case h.paintImageXObject:
                            this.paintImageXObject(f[0]);
                            break;
                        case h.paintInlineImageXObject:
                            this.paintInlineImageXObject(f[0]);
                            break;
                        case h.paintImageMaskXObject:
                            this.paintImageMaskXObject(f[0]);
                            break;
                        case h.paintFormXObjectBegin:
                            this.paintFormXObjectBegin(f[0], f[1]);
                            break;
                        case h.paintFormXObjectEnd:
                            this.paintFormXObjectEnd();
                            break;
                        case h.closePath:
                            this.closePath();
                            break;
                        case h.closeStroke:
                            this.closeStroke();
                            break;
                        case h.closeFillStroke:
                            this.closeFillStroke();
                            break;
                        case h.nextLine:
                            this.nextLine();
                            break;
                        case h.transform:
                            this.transform(f[0], f[1], f[2], f[3], f[4], f[5]);
                            break;
                        case h.constructPath:
                            this.constructPath(f[0], f[1]);
                            break;
                        case h.endPath:
                            this.endPath();
                            break;
                        case 92:
                            this.group(a[c].items);
                            break;
                        default:
                            l("Unimplemented operator " + d)
                        }
                    }
                },
                setWordSpacing: function(a) {
                    this.current.wordSpacing = a
                },
                setCharSpacing: function(a) {
                    this.current.charSpacing = a
                },
                nextLine: function() {
                    this.moveText(0, this.current.leading)
                },
                setTextMatrix: function(a, c, d, e, f, h) {
                    var i = this.current;
                    this.current.textMatrix = this.current.lineMatrix = [a, c, d, e, f, h],
                    this.current.x = this.current.lineX = 0,
                    this.current.y = this.current.lineY = 0,
                    i.xcoords = [],
                    i.tspan = document.createElementNS(g, "svg:tspan"),
                    i.tspan.setAttributeNS(null, "font-family", i.fontFamily),
                    i.tspan.setAttributeNS(null, "font-size", b(i.fontSize) + "px"),
                    i.tspan.setAttributeNS(null, "y", b( - i.y)),
                    i.txtElement = document.createElementNS(g, "svg:text"),
                    i.txtElement.appendChild(i.tspan)
                },
                beginText: function() {
                    this.current.x = this.current.lineX = 0,
                    this.current.y = this.current.lineY = 0,
                    this.current.textMatrix = f,
                    this.current.lineMatrix = f,
                    this.current.tspan = document.createElementNS(g, "svg:tspan"),
                    this.current.txtElement = document.createElementNS(g, "svg:text"),
                    this.current.txtgrp = document.createElementNS(g, "svg:g"),
                    this.current.xcoords = []
                },
                moveText: function(a, c) {
                    var d = this.current;
                    this.current.x = this.current.lineX += a,
                    this.current.y = this.current.lineY += c,
                    d.xcoords = [],
                    d.tspan = document.createElementNS(g, "svg:tspan"),
                    d.tspan.setAttributeNS(null, "font-family", d.fontFamily),
                    d.tspan.setAttributeNS(null, "font-size", b(d.fontSize) + "px"),
                    d.tspan.setAttributeNS(null, "y", b( - d.y))
                },
                showText: function(a) {
                    var d = this.current,
                    e = d.font,
                    f = d.fontSize;
                    if (0 !== f) {
                        var g, h = d.charSpacing,
                        i = d.wordSpacing,
                        k = d.fontDirection,
                        l = d.textHScale * k,
                        m = a.length,
                        o = e.vertical,
                        p = f * d.fontMatrix[0],
                        r = 0;
                        for (g = 0; g < m; ++g) {
                            var s = a[g];
                            if (null !== s) if (j(s)) r += -s * f * .001;
                            else {
                                d.xcoords.push(d.x + r * l);
                                var t = s.width,
                                u = s.fontChar,
                                v = t * p + h * k;
                                r += v,
                                d.tspan.textContent += u
                            } else r += k * i
                        }
                        o ? d.y -= r * l: d.x += r * l,
                        d.tspan.setAttributeNS(null, "x", d.xcoords.map(b).join(" ")),
                        d.tspan.setAttributeNS(null, "y", b( - d.y)),
                        d.tspan.setAttributeNS(null, "font-family", d.fontFamily),
                        d.tspan.setAttributeNS(null, "font-size", b(d.fontSize) + "px"),
                        d.fontStyle !== n.fontStyle && d.tspan.setAttributeNS(null, "font-style", d.fontStyle),
                        d.fontWeight !== n.fontWeight && d.tspan.setAttributeNS(null, "font-weight", d.fontWeight),
                        d.fillColor !== n.fillColor && d.tspan.setAttributeNS(null, "fill", d.fillColor),
                        d.txtElement.setAttributeNS(null, "transform", c(d.textMatrix) + " scale(1, -1)"),
                        d.txtElement.setAttributeNS(q, "xml:space", "preserve"),
                        d.txtElement.appendChild(d.tspan),
                        d.txtgrp.appendChild(d.txtElement),
                        this._ensureTransformGroup().appendChild(d.txtElement)
                    }
                },
                setLeadingMoveText: function(a, b) {
                    this.setLeading( - b),
                    this.moveText(a, b)
                },
                addFontStyle: function(a) {
                    this.cssStyle || (this.cssStyle = document.createElementNS(g, "svg:style"), this.cssStyle.setAttributeNS(null, "type", "text/css"), this.defs.appendChild(this.cssStyle));
                    var b = m(a.data, a.mimetype, this.forceDataSchema);
                    this.cssStyle.textContent += '@font-face { font-family: "' + a.loadedName + '"; src: url(' + b + "); }\n"
                },
                setFont: function(a) {
                    var c = this.current,
                    d = this.commonObjs.get(a[0]),
                    f = a[1];
                    this.current.font = d,
                    this.embedFonts && d.data && !this.embeddedFonts[d.loadedName] && (this.addFontStyle(d), this.embeddedFonts[d.loadedName] = d),
                    c.fontMatrix = d.fontMatrix ? d.fontMatrix: e;
                    var h = d.black ? d.bold ? "bolder": "bold": d.bold ? "bold": "normal",
                    i = d.italic ? "italic": "normal";
                    f < 0 ? (f = -f, c.fontDirection = -1) : c.fontDirection = 1,
                    c.fontSize = f,
                    c.fontFamily = d.loadedName,
                    c.fontWeight = h,
                    c.fontStyle = i,
                    c.tspan = document.createElementNS(g, "svg:tspan"),
                    c.tspan.setAttributeNS(null, "y", b( - c.y)),
                    c.xcoords = []
                },
                endText: function() {},
                setLineWidth: function(a) {
                    this.current.lineWidth = a
                },
                setLineCap: function(a) {
                    this.current.lineCap = s[a]
                },
                setLineJoin: function(a) {
                    this.current.lineJoin = t[a]
                },
                setMiterLimit: function(a) {
                    this.current.miterLimit = a
                },
                setStrokeRGBColor: function(a, b, c) {
                    var d = i.makeCssRgb(a, b, c);
                    this.current.strokeColor = d
                },
                setFillRGBColor: function(a, b, c) {
                    var d = i.makeCssRgb(a, b, c);
                    this.current.fillColor = d,
                    this.current.tspan = document.createElementNS(g, "svg:tspan"),
                    this.current.xcoords = []
                },
                setDash: function(a, b) {
                    this.current.dashArray = a,
                    this.current.dashPhase = b
                },
                constructPath: function(a, c) {
                    var d = this.current,
                    e = d.x,
                    f = d.y;
                    d.path = document.createElementNS(g, "svg:path");
                    for (var i = [], j = a.length, k = 0, l = 0; k < j; k++) switch (0 | a[k]) {
                    case h.rectangle:
                        e = c[l++],
                        f = c[l++];
                        var m = c[l++],
                        n = c[l++],
                        o = e + m,
                        p = f + n;
                        i.push("M", b(e), b(f), "L", b(o), b(f), "L", b(o), b(p), "L", b(e), b(p), "Z");
                        break;
                    case h.moveTo:
                        e = c[l++],
                        f = c[l++],
                        i.push("M", b(e), b(f));
                        break;
                    case h.lineTo:
                        e = c[l++],
                        f = c[l++],
                        i.push("L", b(e), b(f));
                        break;
                    case h.curveTo:
                        e = c[l + 4],
                        f = c[l + 5],
                        i.push("C", b(c[l]), b(c[l + 1]), b(c[l + 2]), b(c[l + 3]), b(e), b(f)),
                        l += 6;
                        break;
                    case h.curveTo2:
                        e = c[l + 2],
                        f = c[l + 3],
                        i.push("C", b(e), b(f), b(c[l]), b(c[l + 1]), b(c[l + 2]), b(c[l + 3])),
                        l += 4;
                        break;
                    case h.curveTo3:
                        e = c[l + 2],
                        f = c[l + 3],
                        i.push("C", b(c[l]), b(c[l + 1]), b(e), b(f), b(e), b(f)),
                        l += 4;
                        break;
                    case h.closePath:
                        i.push("Z")
                    }
                    d.path.setAttributeNS(null, "d", i.join(" ")),
                    d.path.setAttributeNS(null, "stroke-miterlimit", b(d.miterLimit)),
                    d.path.setAttributeNS(null, "stroke-linecap", d.lineCap),
                    d.path.setAttributeNS(null, "stroke-linejoin", d.lineJoin),
                    d.path.setAttributeNS(null, "stroke-width", b(d.lineWidth) + "px"),
                    d.path.setAttributeNS(null, "stroke-dasharray", d.dashArray.map(b).join(" ")),
                    d.path.setAttributeNS(null, "stroke-dashoffset", b(d.dashPhase) + "px"),
                    d.path.setAttributeNS(null, "fill", "none"),
                    this._ensureTransformGroup().appendChild(d.path),
                    d.element = d.path,
                    d.setCurrentPoint(e, f)
                },
                endPath: function() {},
                clip: function(a) {
                    var b = this.current,
                    d = "clippath" + u;
                    u++;
                    var e = document.createElementNS(g, "svg:clipPath");
                    e.setAttributeNS(null, "id", d),
                    e.setAttributeNS(null, "transform", c(this.transformMatrix));
                    var f = b.element.cloneNode();
                    "evenodd" === a ? f.setAttributeNS(null, "clip-rule", "evenodd") : f.setAttributeNS(null, "clip-rule", "nonzero"),
                    e.appendChild(f),
                    this.defs.appendChild(e),
                    b.activeClipUrl && (b.clipGroup = null, this.extraStack.forEach(function(a) {
                        a.clipGroup = null
                    })),
                    b.activeClipUrl = "url(#" + d + ")",
                    this.tgrp = null
                },
                closePath: function() {
                    var a = this.current,
                    b = a.path.getAttributeNS(null, "d");
                    b += "Z",
                    a.path.setAttributeNS(null, "d", b)
                },
                setLeading: function(a) {
                    this.current.leading = -a
                },
                setTextRise: function(a) {
                    this.current.textRise = a
                },
                setHScale: function(a) {
                    this.current.textHScale = a / 100
                },
                setGState: function(a) {
                    for (var b = 0,
                    c = a.length; b < c; b++) {
                        var d = a[b],
                        e = d[0],
                        f = d[1];
                        switch (e) {
                        case "LW":
                            this.setLineWidth(f);
                            break;
                        case "LC":
                            this.setLineCap(f);
                            break;
                        case "LJ":
                            this.setLineJoin(f);
                            break;
                        case "ML":
                            this.setMiterLimit(f);
                            break;
                        case "D":
                            this.setDash(f[0], f[1]);
                            break;
                        case "Font":
                            this.setFont(f);
                            break;
                        default:
                            l("Unimplemented graphic state " + e)
                        }
                    }
                },
                fill: function() {
                    var a = this.current;
                    a.element.setAttributeNS(null, "fill", a.fillColor)
                },
                stroke: function() {
                    var a = this.current;
                    a.element.setAttributeNS(null, "stroke", a.strokeColor),
                    a.element.setAttributeNS(null, "fill", "none")
                },
                eoFill: function() {
                    var a = this.current;
                    a.element.setAttributeNS(null, "fill", a.fillColor),
                    a.element.setAttributeNS(null, "fill-rule", "evenodd")
                },
                fillStroke: function() {
                    this.stroke(),
                    this.fill()
                },
                eoFillStroke: function() {
                    this.current.element.setAttributeNS(null, "fill-rule", "evenodd"),
                    this.fillStroke()
                },
                closeStroke: function() {
                    this.closePath(),
                    this.stroke()
                },
                closeFillStroke: function() {
                    this.closePath(),
                    this.fillStroke()
                },
                paintSolidColorImageMask: function() {
                    var a = this.current,
                    b = document.createElementNS(g, "svg:rect");
                    b.setAttributeNS(null, "x", "0"),
                    b.setAttributeNS(null, "y", "0"),
                    b.setAttributeNS(null, "width", "1px"),
                    b.setAttributeNS(null, "height", "1px"),
                    b.setAttributeNS(null, "fill", a.fillColor),
                    this._ensureTransformGroup().appendChild(b)
                },
                paintJpegXObject: function(a, c, d) {
                    var e = this.objs.get(a),
                    f = document.createElementNS(g, "svg:image");
                    f.setAttributeNS(r, "xlink:href", e.src),
                    f.setAttributeNS(null, "width", e.width + "px"),
                    f.setAttributeNS(null, "height", e.height + "px"),
                    f.setAttributeNS(null, "x", "0"),
                    f.setAttributeNS(null, "y", b( - d)),
                    f.setAttributeNS(null, "transform", "scale(" + b(1 / c) + " " + b( - 1 / d) + ")"),
                    this._ensureTransformGroup().appendChild(f)
                },
                paintImageXObject: function(a) {
                    var b = this.objs.get(a);
                    return b ? void this.paintInlineImageXObject(b) : void l("Dependent image isn't ready yet")
                },
                paintInlineImageXObject: function(a, c) {
                    var d = a.width,
                    e = a.height,
                    f = o(a, this.forceDataSchema),
                    h = document.createElementNS(g, "svg:rect");
                    h.setAttributeNS(null, "x", "0"),
                    h.setAttributeNS(null, "y", "0"),
                    h.setAttributeNS(null, "width", b(d)),
                    h.setAttributeNS(null, "height", b(e)),
                    this.current.element = h,
                    this.clip("nonzero");
                    var i = document.createElementNS(g, "svg:image");
                    i.setAttributeNS(r, "xlink:href", f),
                    i.setAttributeNS(null, "x", "0"),
                    i.setAttributeNS(null, "y", b( - e)),
                    i.setAttributeNS(null, "width", b(d) + "px"),
                    i.setAttributeNS(null, "height", b(e) + "px"),
                    i.setAttributeNS(null, "transform", "scale(" + b(1 / d) + " " + b( - 1 / e) + ")"),
                    c ? c.appendChild(i) : this._ensureTransformGroup().appendChild(i)
                },
                paintImageMaskXObject: function(a) {
                    var c = this.current,
                    d = a.width,
                    e = a.height,
                    f = c.fillColor;
                    c.maskId = "mask" + v++;
                    var h = document.createElementNS(g, "svg:mask");
                    h.setAttributeNS(null, "id", c.maskId);
                    var i = document.createElementNS(g, "svg:rect");
                    i.setAttributeNS(null, "x", "0"),
                    i.setAttributeNS(null, "y", "0"),
                    i.setAttributeNS(null, "width", b(d)),
                    i.setAttributeNS(null, "height", b(e)),
                    i.setAttributeNS(null, "fill", f),
                    i.setAttributeNS(null, "mask", "url(#" + c.maskId + ")"),
                    this.defs.appendChild(h),
                    this._ensureTransformGroup().appendChild(i),
                    this.paintInlineImageXObject(a, h)
                },
                paintFormXObjectBegin: function(a, c) {
                    if (k(a) && 6 === a.length && this.transform(a[0], a[1], a[2], a[3], a[4], a[5]), k(c) && 4 === c.length) {
                        var d = c[2] - c[0],
                        e = c[3] - c[1],
                        f = document.createElementNS(g, "svg:rect");
                        f.setAttributeNS(null, "x", c[0]),
                        f.setAttributeNS(null, "y", c[1]),
                        f.setAttributeNS(null, "width", b(d)),
                        f.setAttributeNS(null, "height", b(e)),
                        this.current.element = f,
                        this.clip("nonzero"),
                        this.endPath()
                    }
                },
                paintFormXObjectEnd: function() {},
                _initialize: function(a) {
                    var b = document.createElementNS(g, "svg:svg");
                    b.setAttributeNS(null, "version", "1.1"),
                    b.setAttributeNS(null, "width", a.width + "px"),
                    b.setAttributeNS(null, "height", a.height + "px"),
                    b.setAttributeNS(null, "preserveAspectRatio", "none"),
                    b.setAttributeNS(null, "viewBox", "0 0 " + a.width + " " + a.height);
                    var d = document.createElementNS(g, "svg:defs");
                    b.appendChild(d),
                    this.defs = d;
                    var e = document.createElementNS(g, "svg:g");
                    return e.setAttributeNS(null, "transform", c(a.transform)),
                    b.appendChild(e),
                    this.svg = e,
                    b
                },
                _ensureClipGroup: function() {
                    if (!this.current.clipGroup) {
                        var a = document.createElementNS(g, "svg:g");
                        a.setAttributeNS(null, "clip-path", this.current.activeClipUrl),
                        this.svg.appendChild(a),
                        this.current.clipGroup = a
                    }
                    return this.current.clipGroup
                },
                _ensureTransformGroup: function() {
                    return this.tgrp || (this.tgrp = document.createElementNS(g, "svg:g"), this.tgrp.setAttributeNS(null, "transform", c(this.transformMatrix)), this.current.activeClipUrl ? this._ensureClipGroup().appendChild(this.tgrp) : this.svg.appendChild(this.tgrp)),
                    this.tgrp
                }
            },
            d
        } ();
        b.SVGGraphics = q
    },
    function(a, b, c) {
        var d = c(0),
        e = c(1),
        f = d.Util,
        g = d.createPromiseCapability,
        h = e.CustomStyle,
        i = e.getDefaultSetting,
        j = function() {
            function a(a) {
                return ! n.test(a)
            }
            function b(b, c, d) {
                var e = document.createElement("div"),
                g = {
                    style: null,
                    angle: 0,
                    canvasWidth: 0,
                    isWhitespace: !1,
                    originalTransform: null,
                    paddingBottom: 0,
                    paddingLeft: 0,
                    paddingRight: 0,
                    paddingTop: 0,
                    scale: 1
                };
                if (b._textDivs.push(e), a(c.str)) return g.isWhitespace = !0,
                void b._textDivProperties.set(e, g);
                var h = f.transform(b._viewport.transform, c.transform),
                j = Math.atan2(h[1], h[0]),
                k = d[c.fontName];
                k.vertical && (j += Math.PI / 2);
                var l = Math.sqrt(h[2] * h[2] + h[3] * h[3]),
                m = l;
                k.ascent ? m = k.ascent * m: k.descent && (m = (1 + k.descent) * m);
                var n, p;
                if (0 === j ? (n = h[4], p = h[5] - m) : (n = h[4] + m * Math.sin(j), p = h[5] - m * Math.cos(j)), o[1] = n, o[3] = p, o[5] = l, o[7] = k.fontFamily, g.style = o.join(""), e.setAttribute("style", g.style), e.textContent = c.str, i("pdfBug") && (e.dataset.fontName = c.fontName), 0 !== j && (g.angle = j * (180 / Math.PI)), c.str.length > 1 && (k.vertical ? g.canvasWidth = c.height * b._viewport.scale: g.canvasWidth = c.width * b._viewport.scale), b._textDivProperties.set(e, g), b._enhanceTextSelection) {
                    var q = 1,
                    r = 0;
                    0 !== j && (q = Math.cos(j), r = Math.sin(j));
                    var s, t, u = (k.vertical ? c.height: c.width) * b._viewport.scale,
                    v = l;
                    0 !== j ? (s = [q, r, -r, q, n, p], t = f.getAxialAlignedBoundingBox([0, 0, u, v], s)) : t = [n, p, n + u, p + v],
                    b._bounds.push({
                        left: t[0],
                        top: t[1],
                        right: t[2],
                        bottom: t[3],
                        div: e,
                        size: [u, v],
                        m: s
                    })
                }
            }
            function c(a) {
                if (!a._canceled) {
                    var b = a._container,
                    c = a._textDivs,
                    d = a._capability,
                    e = c.length;
                    if (e > m) return a._renderingDone = !0,
                    void d.resolve();
                    var f = document.createElement("canvas");
                    f.mozOpaque = !0;
                    for (var g, i, j = f.getContext("2d", {
                        alpha: !1
                    }), k = 0; k < e; k++) {
                        var l = c[k],
                        n = a._textDivProperties.get(l);
                        if (!n.isWhitespace) {
                            var o = l.style.fontSize,
                            p = l.style.fontFamily;
                            o === g && p === i || (j.font = o + " " + p, g = o, i = p);
                            var q = j.measureText(l.textContent).width;
                            b.appendChild(l);
                            var r = "";
                            0 !== n.canvasWidth && q > 0 && (n.scale = n.canvasWidth / q, r = "scaleX(" + n.scale + ")"),
                            0 !== n.angle && (r = "rotate(" + n.angle + "deg) " + r),
                            "" !== r && (n.originalTransform = r, h.setProp("transform", l, r)),
                            a._textDivProperties.set(l, n)
                        }
                    }
                    a._renderingDone = !0,
                    d.resolve()
                }
            }
            function d(a) {
                for (var b = a._bounds,
                c = a._viewport,
                d = e(c.width, c.height, b), g = 0; g < d.length; g++) {
                    var h = b[g].div,
                    i = a._textDivProperties.get(h);
                    if (0 !== i.angle) {
                        var j = d[g],
                        k = b[g],
                        l = k.m,
                        m = l[0],
                        n = l[1],
                        o = [[0, 0], [0, k.size[1]], [k.size[0], 0], k.size],
                        p = new Float64Array(64);
                        o.forEach(function(a, b) {
                            var c = f.applyTransform(a, l);
                            p[b + 0] = m && (j.left - c[0]) / m,
                            p[b + 4] = n && (j.top - c[1]) / n,
                            p[b + 8] = m && (j.right - c[0]) / m,
                            p[b + 12] = n && (j.bottom - c[1]) / n,
                            p[b + 16] = n && (j.left - c[0]) / -n,
                            p[b + 20] = m && (j.top - c[1]) / m,
                            p[b + 24] = n && (j.right - c[0]) / -n,
                            p[b + 28] = m && (j.bottom - c[1]) / m,
                            p[b + 32] = m && (j.left - c[0]) / -m,
                            p[b + 36] = n && (j.top - c[1]) / -n,
                            p[b + 40] = m && (j.right - c[0]) / -m,
                            p[b + 44] = n && (j.bottom - c[1]) / -n,
                            p[b + 48] = n && (j.left - c[0]) / n,
                            p[b + 52] = m && (j.top - c[1]) / -m,
                            p[b + 56] = n && (j.right - c[0]) / n,
                            p[b + 60] = m && (j.bottom - c[1]) / -m
                        });
                        var q = function(a, b, c) {
                            for (var d = 0,
                            e = 0; e < c; e++) {
                                var f = a[b++];
                                f > 0 && (d = d ? Math.min(f, d) : f)
                            }
                            return d
                        },
                        r = 1 + Math.min(Math.abs(m), Math.abs(n));
                        i.paddingLeft = q(p, 32, 16) / r,
                        i.paddingTop = q(p, 48, 16) / r,
                        i.paddingRight = q(p, 0, 16) / r,
                        i.paddingBottom = q(p, 16, 16) / r,
                        a._textDivProperties.set(h, i)
                    } else i.paddingLeft = b[g].left - d[g].left,
                    i.paddingTop = b[g].top - d[g].top,
                    i.paddingRight = d[g].right - b[g].right,
                    i.paddingBottom = d[g].bottom - b[g].bottom,
                    a._textDivProperties.set(h, i)
                }
            }
            function e(a, b, c) {
                var d = c.map(function(a, b) {
                    return {
                        x1: a.left,
                        y1: a.top,
                        x2: a.right,
                        y2: a.bottom,
                        index: b,
                        x1New: void 0,
                        x2New: void 0
                    }
                });
                j(a, d);
                var e = new Array(c.length);
                return d.forEach(function(a) {
                    var b = a.index;
                    e[b] = {
                        left: a.x1New,
                        top: 0,
                        right: a.x2New,
                        bottom: 0
                    }
                }),
                c.map(function(b, c) {
                    var f = e[c],
                    g = d[c];
                    g.x1 = b.top,
                    g.y1 = a - f.right,
                    g.x2 = b.bottom,
                    g.y2 = a - f.left,
                    g.index = c,
                    g.x1New = void 0,
                    g.x2New = void 0
                }),
                j(b, d),
                d.forEach(function(a) {
                    var b = a.index;
                    e[b].top = a.x1New,
                    e[b].bottom = a.x2New
                }),
                e
            }
            function j(a, b) {
                b.sort(function(a, b) {
                    return a.x1 - b.x1 || a.index - b.index
                });
                var c = {
                    x1: -(1 / 0),
                    y1: -(1 / 0),
                    x2: 0,
                    y2: 1 / 0,
                    index: -1,
                    x1New: 0,
                    x2New: 0
                },
                d = [{
                    start: -(1 / 0),
                    end: 1 / 0,
                    boundary: c
                }];
                b.forEach(function(a) {
                    for (var b = 0; b < d.length && d[b].end <= a.y1;) b++;
                    for (var c = d.length - 1; c >= 0 && d[c].start >= a.y2;) c--;
                    var e, f, g, h, i = -(1 / 0);
                    for (g = b; g <= c; g++) {
                        e = d[g],
                        f = e.boundary;
                        var j;
                        j = f.x2 > a.x1 ? f.index > a.index ? f.x1New: a.x1: void 0 === f.x2New ? (f.x2 + a.x1) / 2 : f.x2New,
                        j > i && (i = j)
                    }
                    for (a.x1New = i, g = b; g <= c; g++) e = d[g],
                    f = e.boundary,
                    void 0 === f.x2New ? f.x2 > a.x1 ? f.index > a.index && (f.x2New = f.x2) : f.x2New = i: f.x2New > i && (f.x2New = Math.max(i, f.x2));
                    var k = [],
                    l = null;
                    for (g = b; g <= c; g++) {
                        e = d[g],
                        f = e.boundary;
                        var m = f.x2 > a.x2 ? f: a;
                        l === m ? k[k.length - 1].end = e.end: (k.push({
                            start: e.start,
                            end: e.end,
                            boundary: m
                        }), l = m)
                    }
                    for (d[b].start < a.y1 && (k[0].start = a.y1, k.unshift({
                        start: d[b].start,
                        end: a.y1,
                        boundary: d[b].boundary
                    })), a.y2 < d[c].end && (k[k.length - 1].end = a.y2, k.push({
                        start: a.y2,
                        end: d[c].end,
                        boundary: d[c].boundary
                    })), g = b; g <= c; g++) if (e = d[g], f = e.boundary, void 0 === f.x2New) {
                        var n = !1;
                        for (h = b - 1; ! n && h >= 0 && d[h].start >= f.y1; h--) n = d[h].boundary === f;
                        for (h = c + 1; ! n && h < d.length && d[h].end <= f.y2; h++) n = d[h].boundary === f;
                        for (h = 0; ! n && h < k.length; h++) n = k[h].boundary === f;
                        n || (f.x2New = i)
                    }
                    Array.prototype.splice.apply(d, [b, c - b + 1].concat(k))
                }),
                d.forEach(function(b) {
                    var c = b.boundary;
                    void 0 === c.x2New && (c.x2New = Math.max(a, c.x2))
                })
            }
            function k(a, b, c, d, e) {
                this._textContent = a,
                this._container = b,
                this._viewport = c,
                this._textDivs = d || [],
                this._textDivProperties = new WeakMap,
                this._renderingDone = !1,
                this._canceled = !1,
                this._capability = g(),
                this._renderTimer = null,
                this._bounds = [],
                this._enhanceTextSelection = !!e
            }
            function l(a) {
                var b = new k(a.textContent, a.container, a.viewport, a.textDivs, a.enhanceTextSelection);
                return b._render(a.timeout),
                b
            }
            var m = 1e5,
            n = /\S/,
            o = ["left: ", 0, "px; top: ", 0, "px; font-size: ", 0, "px; font-family: ", "", ";"];
            return k.prototype = {
                get promise() {
                    return this._capability.promise
                },
                cancel: function() {
                    this._canceled = !0,
                    null !== this._renderTimer && (clearTimeout(this._renderTimer), this._renderTimer = null),
                    this._capability.reject("canceled")
                },
                _render: function(a) {
                    for (var d = this._textContent.items,
                    e = this._textContent.styles,
                    f = 0,
                    g = d.length; f < g; f++) b(this, d[f], e);
                    if (a) {
                        var h = this;
                        this._renderTimer = setTimeout(function() {
                            c(h),
                            h._renderTimer = null
                        },
                        a)
                    } else c(this)
                },
                expandTextDivs: function(a) {
                    if (this._enhanceTextSelection && this._renderingDone) {
                        null !== this._bounds && (d(this), this._bounds = null);
                        for (var b = 0,
                        c = this._textDivs.length; b < c; b++) {
                            var e = this._textDivs[b],
                            f = this._textDivProperties.get(e);
                            if (!f.isWhitespace) if (a) {
                                var g = "",
                                i = "";
                                1 !== f.scale && (g = "scaleX(" + f.scale + ")"),
                                0 !== f.angle && (g = "rotate(" + f.angle + "deg) " + g),
                                0 !== f.paddingLeft && (i += " padding-left: " + f.paddingLeft / f.scale + "px;", g += " translateX(" + -f.paddingLeft / f.scale + "px)"),
                                0 !== f.paddingTop && (i += " padding-top: " + f.paddingTop + "px;", g += " translateY(" + -f.paddingTop + "px)"),
                                0 !== f.paddingRight && (i += " padding-right: " + f.paddingRight / f.scale + "px;"),
                                0 !== f.paddingBottom && (i += " padding-bottom: " + f.paddingBottom + "px;"),
                                "" !== i && e.setAttribute("style", f.style + i),
                                "" !== g && h.setProp("transform", e, g)
                            } else e.style.padding = 0,
                            h.setProp("transform", e, f.originalTransform || "")
                        }
                    }
                }
            },
            l
        } ();
        b.renderTextLayer = j
    },
    function(a, b) {
        var c;
        c = function() {
            return this
        } ();
        try {
            c = c || Function("return this")() || (0, eval)("this")
        } catch(d) {
            "object" == typeof window && (c = window)
        }
        a.exports = c
    },
    function(a, b, c) {
        function d(a) {
            return a.replace(/>\\376\\377([^<]+)/g,
            function(a, b) {
                for (var c = b.replace(/\\([0-3])([0-7])([0-7])/g,
                function(a, b, c, d) {
                    return String.fromCharCode(64 * b + 8 * c + 1 * d)
                }), d = "", e = 0; e < c.length; e += 2) {
                    var f = 256 * c.charCodeAt(e) + c.charCodeAt(e + 1);
                    d += f >= 32 && f < 127 && 60 !== f && 62 !== f && 38 !== f ? String.fromCharCode(f) : "&#x" + (65536 + f).toString(16).substring(1) + ";"
                }
                return ">" + d
            })
        }
        function e(a) {
            if ("string" == typeof a) {
                a = d(a);
                var b = new DOMParser;
                a = b.parseFromString(a, "application/xml")
            } else a instanceof Document || g("Metadata: Invalid metadata object");
            this.metaDocument = a,
            this.metadata = Object.create(null),
            this.parse()
        }
        var f = c(0),
        g = f.error;
        e.prototype = {
            parse: function() {
                var a = this.metaDocument,
                b = a.documentElement;
                if ("rdf:rdf" !== b.nodeName.toLowerCase()) for (b = b.firstChild; b && "rdf:rdf" !== b.nodeName.toLowerCase();) b = b.nextSibling;
                var c = b ? b.nodeName.toLowerCase() : null;
                if (b && "rdf:rdf" === c && b.hasChildNodes()) {
                    var d, e, f, g, h, i, j, k = b.childNodes;
                    for (g = 0, i = k.length; g < i; g++) if (d = k[g], "rdf:description" === d.nodeName.toLowerCase()) for (h = 0, j = d.childNodes.length; h < j; h++)"#text" !== d.childNodes[h].nodeName.toLowerCase() && (e = d.childNodes[h], f = e.nodeName.toLowerCase(), this.metadata[f] = e.textContent.trim())
                }
            },
            get: function(a) {
                return this.metadata[a] || null
            },
            has: function(a) {
                return "undefined" != typeof this.metadata[a]
            }
        },
        b.Metadata = e
    },
    function(a, b, c) {
        var d = c(0),
        e = c(1),
        f = d.shadow,
        g = e.getDefaultSetting,
        h = function() {
            function a(a, b, c) {
                var d = a.createShader(c);
                a.shaderSource(d, b),
                a.compileShader(d);
                var e = a.getShaderParameter(d, a.COMPILE_STATUS);
                if (!e) {
                    var f = a.getShaderInfoLog(d);
                    throw new Error("Error during shader compilation: " + f)
                }
                return d
            }
            function b(b, c) {
                return a(b, c, b.VERTEX_SHADER)
            }
            function c(b, c) {
                return a(b, c, b.FRAGMENT_SHADER)
            }
            function d(a, b) {
                for (var c = a.createProgram(), d = 0, e = b.length; d < e; ++d) a.attachShader(c, b[d]);
                a.linkProgram(c);
                var f = a.getProgramParameter(c, a.LINK_STATUS);
                if (!f) {
                    var g = a.getProgramInfoLog(c);
                    throw new Error("Error during program linking: " + g)
                }
                return c
            }
            function e(a, b, c) {
                a.activeTexture(c);
                var d = a.createTexture();
                return a.bindTexture(a.TEXTURE_2D, d),
                a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE),
                a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE),
                a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.NEAREST),
                a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MAG_FILTER, a.NEAREST),
                a.texImage2D(a.TEXTURE_2D, 0, a.RGBA, a.RGBA, a.UNSIGNED_BYTE, b),
                d
            }
            function h() {
                n || (o = document.createElement("canvas"), n = o.getContext("webgl", {
                    premultipliedalpha: !1
                }))
            }
            function i() {
                var a, e;
                h(),
                a = o,
                o = null,
                e = n,
                n = null;
                var f = b(e, p),
                g = c(e, q),
                i = d(e, [f, g]);
                e.useProgram(i);
                var j = {};
                j.gl = e,
                j.canvas = a,
                j.resolutionLocation = e.getUniformLocation(i, "u_resolution"),
                j.positionLocation = e.getAttribLocation(i, "a_position"),
                j.backdropLocation = e.getUniformLocation(i, "u_backdrop"),
                j.subtypeLocation = e.getUniformLocation(i, "u_subtype");
                var k = e.getAttribLocation(i, "a_texCoord"),
                l = e.getUniformLocation(i, "u_image"),
                m = e.getUniformLocation(i, "u_mask"),
                s = e.createBuffer();
                e.bindBuffer(e.ARRAY_BUFFER, s),
                e.bufferData(e.ARRAY_BUFFER, new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]), e.STATIC_DRAW),
                e.enableVertexAttribArray(k),
                e.vertexAttribPointer(k, 2, e.FLOAT, !1, 0, 0),
                e.uniform1i(l, 0),
                e.uniform1i(m, 1),
                r = j
            }
            function j(a, b, c) {
                var d = a.width,
                f = a.height;
                r || i();
                var g = r,
                h = g.canvas,
                j = g.gl;
                h.width = d,
                h.height = f,
                j.viewport(0, 0, j.drawingBufferWidth, j.drawingBufferHeight),
                j.uniform2f(g.resolutionLocation, d, f),
                c.backdrop ? j.uniform4f(g.resolutionLocation, c.backdrop[0], c.backdrop[1], c.backdrop[2], 1) : j.uniform4f(g.resolutionLocation, 0, 0, 0, 0),
                j.uniform1i(g.subtypeLocation, "Luminosity" === c.subtype ? 1 : 0);
                var k = e(j, a, j.TEXTURE0),
                l = e(j, b, j.TEXTURE1),
                m = j.createBuffer();
                return j.bindBuffer(j.ARRAY_BUFFER, m),
                j.bufferData(j.ARRAY_BUFFER, new Float32Array([0, 0, d, 0, 0, f, 0, f, d, 0, d, f]), j.STATIC_DRAW),
                j.enableVertexAttribArray(g.positionLocation),
                j.vertexAttribPointer(g.positionLocation, 2, j.FLOAT, !1, 0, 0),
                j.clearColor(0, 0, 0, 0),
                j.enable(j.BLEND),
                j.blendFunc(j.ONE, j.ONE_MINUS_SRC_ALPHA),
                j.clear(j.COLOR_BUFFER_BIT),
                j.drawArrays(j.TRIANGLES, 0, 6),
                j.flush(),
                j.deleteTexture(k),
                j.deleteTexture(l),
                j.deleteBuffer(m),
                h
            }
            function k() {
                var a, e;
                h(),
                a = o,
                o = null,
                e = n,
                n = null;
                var f = b(e, s),
                g = c(e, t),
                i = d(e, [f, g]);
                e.useProgram(i);
                var j = {};
                j.gl = e,
                j.canvas = a,
                j.resolutionLocation = e.getUniformLocation(i, "u_resolution"),
                j.scaleLocation = e.getUniformLocation(i, "u_scale"),
                j.offsetLocation = e.getUniformLocation(i, "u_offset"),
                j.positionLocation = e.getAttribLocation(i, "a_position"),
                j.colorLocation = e.getAttribLocation(i, "a_color"),
                u = j
            }
            function l(a, b, c, d, e) {
                u || k();
                var f = u,
                g = f.canvas,
                h = f.gl;
                g.width = a,
                g.height = b,
                h.viewport(0, 0, h.drawingBufferWidth, h.drawingBufferHeight),
                h.uniform2f(f.resolutionLocation, a, b);
                var i, j, l, m = 0;
                for (i = 0, j = d.length; i < j; i++) switch (d[i].type) {
                case "lattice":
                    l = d[i].coords.length / d[i].verticesPerRow | 0,
                    m += (l - 1) * (d[i].verticesPerRow - 1) * 6;
                    break;
                case "triangles":
                    m += d[i].coords.length
                }
                var n = new Float32Array(2 * m),
                o = new Uint8Array(3 * m),
                p = e.coords,
                q = e.colors,
                r = 0,
                s = 0;
                for (i = 0, j = d.length; i < j; i++) {
                    var t = d[i],
                    v = t.coords,
                    w = t.colors;
                    switch (t.type) {
                    case "lattice":
                        var x = t.verticesPerRow;
                        l = v.length / x | 0;
                        for (var y = 1; y < l; y++) for (var z = y * x + 1,
                        A = 1; A < x; A++, z++) n[r] = p[v[z - x - 1]],
                        n[r + 1] = p[v[z - x - 1] + 1],
                        n[r + 2] = p[v[z - x]],
                        n[r + 3] = p[v[z - x] + 1],
                        n[r + 4] = p[v[z - 1]],
                        n[r + 5] = p[v[z - 1] + 1],
                        o[s] = q[w[z - x - 1]],
                        o[s + 1] = q[w[z - x - 1] + 1],
                        o[s + 2] = q[w[z - x - 1] + 2],
                        o[s + 3] = q[w[z - x]],
                        o[s + 4] = q[w[z - x] + 1],
                        o[s + 5] = q[w[z - x] + 2],
                        o[s + 6] = q[w[z - 1]],
                        o[s + 7] = q[w[z - 1] + 1],
                        o[s + 8] = q[w[z - 1] + 2],
                        n[r + 6] = n[r + 2],
                        n[r + 7] = n[r + 3],
                        n[r + 8] = n[r + 4],
                        n[r + 9] = n[r + 5],
                        n[r + 10] = p[v[z]],
                        n[r + 11] = p[v[z] + 1],
                        o[s + 9] = o[s + 3],
                        o[s + 10] = o[s + 4],
                        o[s + 11] = o[s + 5],
                        o[s + 12] = o[s + 6],
                        o[s + 13] = o[s + 7],
                        o[s + 14] = o[s + 8],
                        o[s + 15] = q[w[z]],
                        o[s + 16] = q[w[z] + 1],
                        o[s + 17] = q[w[z] + 2],
                        r += 12,
                        s += 18;
                        break;
                    case "triangles":
                        for (var B = 0,
                        C = v.length; B < C; B++) n[r] = p[v[B]],
                        n[r + 1] = p[v[B] + 1],
                        o[s] = q[w[B]],
                        o[s + 1] = q[w[B] + 1],
                        o[s + 2] = q[w[B] + 2],
                        r += 2,
                        s += 3
                    }
                }
                c ? h.clearColor(c[0] / 255, c[1] / 255, c[2] / 255, 1) : h.clearColor(0, 0, 0, 0),
                h.clear(h.COLOR_BUFFER_BIT);
                var D = h.createBuffer();
                h.bindBuffer(h.ARRAY_BUFFER, D),
                h.bufferData(h.ARRAY_BUFFER, n, h.STATIC_DRAW),
                h.enableVertexAttribArray(f.positionLocation),
                h.vertexAttribPointer(f.positionLocation, 2, h.FLOAT, !1, 0, 0);
                var E = h.createBuffer();
                return h.bindBuffer(h.ARRAY_BUFFER, E),
                h.bufferData(h.ARRAY_BUFFER, o, h.STATIC_DRAW),
                h.enableVertexAttribArray(f.colorLocation),
                h.vertexAttribPointer(f.colorLocation, 3, h.UNSIGNED_BYTE, !1, 0, 0),
                h.uniform2f(f.scaleLocation, e.scaleX, e.scaleY),
                h.uniform2f(f.offsetLocation, e.offsetX, e.offsetY),
                h.drawArrays(h.TRIANGLES, 0, m),
                h.flush(),
                h.deleteBuffer(D),
                h.deleteBuffer(E),
                g
            }
            function m() {
                r && r.canvas && (r.canvas.width = 0, r.canvas.height = 0),
                u && u.canvas && (u.canvas.width = 0, u.canvas.height = 0),
                r = null,
                u = null
            }
            var n, o, p = "  attribute vec2 a_position;                                      attribute vec2 a_texCoord;                                                                                                      uniform vec2 u_resolution;                                                                                                      varying vec2 v_texCoord;                                                                                                        void main() {                                                     vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;       gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);                                                                              v_texCoord = a_texCoord;                                      }                                                             ",
            q = "  precision mediump float;                                                                                                        uniform vec4 u_backdrop;                                        uniform int u_subtype;                                          uniform sampler2D u_image;                                      uniform sampler2D u_mask;                                                                                                       varying vec2 v_texCoord;                                                                                                        void main() {                                                     vec4 imageColor = texture2D(u_image, v_texCoord);               vec4 maskColor = texture2D(u_mask, v_texCoord);                 if (u_backdrop.a > 0.0) {                                         maskColor.rgb = maskColor.rgb * maskColor.a +                                   u_backdrop.rgb * (1.0 - maskColor.a);         }                                                               float lum;                                                      if (u_subtype == 0) {                                             lum = maskColor.a;                                            } else {                                                          lum = maskColor.r * 0.3 + maskColor.g * 0.59 +                        maskColor.b * 0.11;                                     }                                                               imageColor.a *= lum;                                            imageColor.rgb *= imageColor.a;                                 gl_FragColor = imageColor;                                    }                                                             ",
            r = null,
            s = "  attribute vec2 a_position;                                      attribute vec3 a_color;                                                                                                         uniform vec2 u_resolution;                                      uniform vec2 u_scale;                                           uniform vec2 u_offset;                                                                                                          varying vec4 v_color;                                                                                                           void main() {                                                     vec2 position = (a_position + u_offset) * u_scale;              vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;         gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);                                                                              v_color = vec4(a_color / 255.0, 1.0);                         }                                                             ",
            t = "  precision mediump float;                                                                                                        varying vec4 v_color;                                                                                                           void main() {                                                     gl_FragColor = v_color;                                       }                                                             ",
            u = null;
            return {
                get isEnabled() {
                    if (g("disableWebGL")) return ! 1;
                    var a = !1;
                    try {
                        h(),
                        a = !!n
                    } catch(b) {}
                    return f(this, "isEnabled", a)
                },
                composeSMask: j,
                drawFigures: l,
                clear: m
            }
        } ();
        b.WebGLUtils = h
    },
    function(a, b, c) {
        var d = c(0),
        e = c(1),
        f = c(3),
        g = c(2),
        h = c(5),
        i = c(7),
        j = c(4),
        k = d.globalScope,
        l = d.deprecated,
        m = d.warn,
        n = e.LinkTarget,
        o = e.DEFAULT_LINK_REL,
        p = "undefined" == typeof window;
        k.PDFJS || (k.PDFJS = {});
        var q = k.PDFJS;
        q.version = "1.7.376",
        q.build = "e2e13df4",
        q.pdfBug = !1,
        void 0 !== q.verbosity && d.setVerbosityLevel(q.verbosity),
        delete q.verbosity,
        Object.defineProperty(q, "verbosity", {
            get: function() {
                return d.getVerbosityLevel()
            },
            set: function(a) {
                d.setVerbosityLevel(a)
            },
            enumerable: !0,
            configurable: !0
        }),
        q.VERBOSITY_LEVELS = d.VERBOSITY_LEVELS,
        q.OPS = d.OPS,
        q.UNSUPPORTED_FEATURES = d.UNSUPPORTED_FEATURES,
        q.isValidUrl = e.isValidUrl,
        q.shadow = d.shadow,
        q.createBlob = d.createBlob,
        q.createObjectURL = function(a, b) {
            return d.createObjectURL(a, b, q.disableCreateObjectURL)
        },
        Object.defineProperty(q, "isLittleEndian", {
            configurable: !0,
            get: function() {
                var a = d.isLittleEndian();
                return d.shadow(q, "isLittleEndian", a)
            }
        }),
        q.removeNullCharacters = d.removeNullCharacters,
        q.PasswordResponses = d.PasswordResponses,
        q.PasswordException = d.PasswordException,
        q.UnknownErrorException = d.UnknownErrorException,
        q.InvalidPDFException = d.InvalidPDFException,
        q.MissingPDFException = d.MissingPDFException,
        q.UnexpectedResponseException = d.UnexpectedResponseException,
        q.Util = d.Util,
        q.PageViewport = d.PageViewport,
        q.createPromiseCapability = d.createPromiseCapability,
        q.maxImageSize = void 0 === q.maxImageSize ? -1 : q.maxImageSize,
        q.cMapUrl = void 0 === q.cMapUrl ? null: q.cMapUrl,
        q.cMapPacked = void 0 !== q.cMapPacked && q.cMapPacked,
        q.disableFontFace = void 0 !== q.disableFontFace && q.disableFontFace,
        q.imageResourcesPath = void 0 === q.imageResourcesPath ? "": q.imageResourcesPath,
        q.disableWorker = void 0 !== q.disableWorker && q.disableWorker,
        q.workerSrc = void 0 === q.workerSrc ? null: q.workerSrc,
        q.workerPort = void 0 === q.workerPort ? null: q.workerPort,
        q.disableRange = void 0 !== q.disableRange && q.disableRange,
        q.disableStream = void 0 !== q.disableStream && q.disableStream,
        q.disableAutoFetch = void 0 !== q.disableAutoFetch && q.disableAutoFetch,
        q.pdfBug = void 0 !== q.pdfBug && q.pdfBug,
        q.postMessageTransfers = void 0 === q.postMessageTransfers || q.postMessageTransfers,
        q.disableCreateObjectURL = void 0 !== q.disableCreateObjectURL && q.disableCreateObjectURL,
        q.disableWebGL = void 0 === q.disableWebGL || q.disableWebGL,
        q.externalLinkTarget = void 0 === q.externalLinkTarget ? n.NONE: q.externalLinkTarget,
        q.externalLinkRel = void 0 === q.externalLinkRel ? o: q.externalLinkRel,
        q.isEvalSupported = void 0 === q.isEvalSupported || q.isEvalSupported;
        var r = q.openExternalLinksInNewWindow;
        delete q.openExternalLinksInNewWindow,
        Object.defineProperty(q, "openExternalLinksInNewWindow", {
            get: function() {
                return q.externalLinkTarget === n.BLANK
            },
            set: function(a) {
                return a && l('PDFJS.openExternalLinksInNewWindow, please use "PDFJS.externalLinkTarget = PDFJS.LinkTarget.BLANK" instead.'),
                q.externalLinkTarget !== n.NONE ? void m("PDFJS.externalLinkTarget is already initialized") : void(q.externalLinkTarget = a ? n.BLANK: n.NONE)
            },
            enumerable: !0,
            configurable: !0
        }),
        r && (q.openExternalLinksInNewWindow = r),
        q.getDocument = f.getDocument,
        q.PDFDataRangeTransport = f.PDFDataRangeTransport,
        q.PDFWorker = f.PDFWorker,
        Object.defineProperty(q, "hasCanvasTypedArrays", {
            configurable: !0,
            get: function() {
                var a = e.hasCanvasTypedArrays();
                return d.shadow(q, "hasCanvasTypedArrays", a)
            }
        }),
        q.CustomStyle = e.CustomStyle,
        q.LinkTarget = n,
        q.addLinkAttributes = e.addLinkAttributes,
        q.getFilenameFromUrl = e.getFilenameFromUrl,
        q.isExternalLinkTargetSet = e.isExternalLinkTargetSet,
        q.AnnotationLayer = g.AnnotationLayer,
        q.renderTextLayer = h.renderTextLayer,
        q.Metadata = i.Metadata,
        q.SVGGraphics = j.SVGGraphics,
        q.UnsupportedManager = f._UnsupportedManager,
        b.globalScope = k,
        b.isWorker = p,
        b.PDFJS = k.PDFJS
    },
    function(a, b, c) {
        function d(a) {
            a.mozCurrentTransform || (a._originalSave = a.save, a._originalRestore = a.restore, a._originalRotate = a.rotate, a._originalScale = a.scale, a._originalTranslate = a.translate, a._originalTransform = a.transform, a._originalSetTransform = a.setTransform, a._transformMatrix = a._transformMatrix || [1, 0, 0, 1, 0, 0], a._transformStack = [], Object.defineProperty(a, "mozCurrentTransform", {
                get: function() {
                    return this._transformMatrix
                }
            }), Object.defineProperty(a, "mozCurrentTransformInverse", {
                get: function() {
                    var a = this._transformMatrix,
                    b = a[0],
                    c = a[1],
                    d = a[2],
                    e = a[3],
                    f = a[4],
                    g = a[5],
                    h = b * e - c * d,
                    i = c * d - b * e;
                    return [e / h, c / i, d / i, b / h, (e * f - d * g) / i, (c * f - b * g) / h]
                }
            }), a.save = function() {
                var a = this._transformMatrix;
                this._transformStack.push(a),
                this._transformMatrix = a.slice(0, 6),
                this._originalSave()
            },
            a.restore = function() {
                var a = this._transformStack.pop();
                a && (this._transformMatrix = a, this._originalRestore())
            },
            a.translate = function(a, b) {
                var c = this._transformMatrix;
                c[4] = c[0] * a + c[2] * b + c[4],
                c[5] = c[1] * a + c[3] * b + c[5],
                this._originalTranslate(a, b)
            },
            a.scale = function(a, b) {
                var c = this._transformMatrix;
                c[0] = c[0] * a,
                c[1] = c[1] * a,
                c[2] = c[2] * b,
                c[3] = c[3] * b,
                this._originalScale(a, b)
            },
            a.transform = function(b, c, d, e, f, g) {
                var h = this._transformMatrix;
                this._transformMatrix = [h[0] * b + h[2] * c, h[1] * b + h[3] * c, h[0] * d + h[2] * e, h[1] * d + h[3] * e, h[0] * f + h[2] * g + h[4], h[1] * f + h[3] * g + h[5]],
                a._originalTransform(b, c, d, e, f, g)
            },
            a.setTransform = function(b, c, d, e, f, g) {
                this._transformMatrix = [b, c, d, e, f, g],
                a._originalSetTransform(b, c, d, e, f, g)
            },
            a.rotate = function(a) {
                var b = Math.cos(a),
                c = Math.sin(a),
                d = this._transformMatrix;
                this._transformMatrix = [d[0] * b + d[2] * c, d[1] * b + d[3] * c, d[0] * -c + d[2] * b, d[1] * -c + d[3] * b, d[4], d[5]],
                this._originalRotate(a)
            })
        }
        function e(a) {
            var b, c, d, e, f = 1e3,
            g = a.width,
            h = a.height,
            i = g + 1,
            j = new Uint8Array(i * (h + 1)),
            k = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]),
            l = g + 7 & -8,
            m = a.data,
            n = new Uint8Array(l * h),
            o = 0;
            for (b = 0, e = m.length; b < e; b++) for (var p = 128,
            q = m[b]; p > 0;) n[o++] = q & p ? 0 : 255,
            p >>= 1;
            var r = 0;
            for (o = 0, 0 !== n[o] && (j[0] = 1, ++r), c = 1; c < g; c++) n[o] !== n[o + 1] && (j[c] = n[o] ? 2 : 1, ++r),
            o++;
            for (0 !== n[o] && (j[c] = 2, ++r), b = 1; b < h; b++) {
                o = b * l,
                d = b * i,
                n[o - l] !== n[o] && (j[d] = n[o] ? 1 : 8, ++r);
                var s = (n[o] ? 4 : 0) + (n[o - l] ? 8 : 0);
                for (c = 1; c < g; c++) s = (s >> 2) + (n[o + 1] ? 4 : 0) + (n[o - l + 1] ? 8 : 0),
                k[s] && (j[d + c] = k[s], ++r),
                o++;
                if (n[o - l] !== n[o] && (j[d + c] = n[o] ? 2 : 4, ++r), r > f) return null
            }
            for (o = l * (h - 1), d = b * i, 0 !== n[o] && (j[d] = 8, ++r), c = 1; c < g; c++) n[o] !== n[o + 1] && (j[d + c] = n[o] ? 4 : 8, ++r),
            o++;
            if (0 !== n[o] && (j[d + c] = 4, ++r), r > f) return null;
            var t = new Int32Array([0, i, -1, 0, -i, 0, 0, 0, 1]),
            u = [];
            for (b = 0; r && b <= h; b++) {
                for (var v = b * i,
                w = v + g; v < w && !j[v];) v++;
                if (v !== w) {
                    var x, y = [v % i, b],
                    z = j[v],
                    A = v;
                    do {
                        var B = t[z];
                        do v += B;
                        while (!j[v]);
                        x = j[v], 5 !== x && 10 !== x ? (z = x, j[v] = 0) : (z = x & 51 * z >> 4, j[v] &= z >> 2 | z << 2), y.push(v % i), y.push(v / i | 0), --r
                    } while ( A !== v );
                    u.push(y),
                    --b
                }
            }
            var C = function(a) {
                a.save(),
                a.scale(1 / g, -1 / h),
                a.translate(0, -h),
                a.beginPath();
                for (var b = 0,
                c = u.length; b < c; b++) {
                    var d = u[b];
                    a.moveTo(d[0], d[1]);
                    for (var e = 2,
                    f = d.length; e < f; e += 2) a.lineTo(d[e], d[e + 1])
                }
                a.fill(),
                a.beginPath(),
                a.restore()
            };
            return C
        }
        var f = c(0),
        g = c(1),
        h = c(12),
        i = c(8),
        j = f.FONT_IDENTITY_MATRIX,
        k = f.IDENTITY_MATRIX,
        l = f.ImageKind,
        m = f.OPS,
        n = f.TextRenderingMode,
        o = f.Uint32ArrayView,
        p = f.Util,
        q = f.assert,
        r = f.info,
        s = f.isNum,
        t = f.isArray,
        u = f.isLittleEndian,
        v = f.error,
        w = f.shadow,
        x = f.warn,
        y = h.TilingPattern,
        z = h.getShadingPatternFromIR,
        A = i.WebGLUtils,
        B = g.hasCanvasTypedArrays,
        C = 16,
        D = 100,
        E = 4096,
        F = .65,
        G = !0,
        H = 1e3,
        I = 16,
        J = {
            get value() {
                return w(J, "value", B())
            }
        },
        K = {
            get value() {
                return w(K, "value", u())
            }
        },
        L = function() {
            function a(a) {
                this.canvasFactory = a,
                this.cache = Object.create(null)
            }
            return a.prototype = {
                getCanvas: function(a, b, c, e) {
                    var f;
                    return void 0 !== this.cache[a] ? (f = this.cache[a], this.canvasFactory.reset(f, b, c), f.context.setTransform(1, 0, 0, 1, 0, 0)) : (f = this.canvasFactory.create(b, c), this.cache[a] = f),
                    e && d(f.context),
                    f
                },
                clear: function() {
                    for (var a in this.cache) {
                        var b = this.cache[a];
                        this.canvasFactory.destroy(b),
                        delete this.cache[a]
                    }
                }
            },
            a
        } (),
        M = function() {
            function a(a) {
                this.alphaIsShape = !1,
                this.fontSize = 0,
                this.fontSizeScale = 1,
                this.textMatrix = k,
                this.textMatrixScale = 1,
                this.fontMatrix = j,
                this.leading = 0,
                this.x = 0,
                this.y = 0,
                this.lineX = 0,
                this.lineY = 0,
                this.charSpacing = 0,
                this.wordSpacing = 0,
                this.textHScale = 1,
                this.textRenderingMode = n.FILL,
                this.textRise = 0,
                this.fillColor = "#000000",
                this.strokeColor = "#000000",
                this.patternFill = !1,
                this.fillAlpha = 1,
                this.strokeAlpha = 1,
                this.lineWidth = 1,
                this.activeSMask = null,
                this.resumeSMaskCtx = null,
                this.old = a
            }
            return a.prototype = {
                clone: function() {
                    return Object.create(this)
                },
                setCurrentPoint: function(a, b) {
                    this.x = a,
                    this.y = b
                }
            },
            a
        } (),
        N = function() {
            function a(a, b, c, e, f) {
                this.ctx = a,
                this.current = new M,
                this.stateStack = [],
                this.pendingClip = null,
                this.pendingEOFill = !1,
                this.res = null,
                this.xobjs = null,
                this.commonObjs = b,
                this.objs = c,
                this.canvasFactory = e,
                this.imageLayer = f,
                this.groupStack = [],
                this.processingType3 = null,
                this.baseTransform = null,
                this.baseTransformStack = [],
                this.groupLevel = 0,
                this.smaskStack = [],
                this.smaskCounter = 0,
                this.tempSMask = null,
                this.cachedCanvases = new L(this.canvasFactory),
                a && d(a),
                this.cachedGetSinglePixelWidth = null
            }
            function b(a, b) {
                if ("undefined" != typeof ImageData && b instanceof ImageData) return void a.putImageData(b, 0, 0);
                var c, d, e, f, g, h = b.height,
                i = b.width,
                j = h % I,
                k = (h - j) / I,
                m = 0 === j ? k: k + 1,
                n = a.createImageData(i, I),
                p = 0,
                q = b.data,
                r = n.data;
                if (b.kind === l.GRAYSCALE_1BPP) {
                    var s = q.byteLength,
                    t = J.value ? new Uint32Array(r.buffer) : new o(r),
                    u = t.length,
                    w = i + 7 >> 3,
                    x = 4294967295,
                    y = K.value || !J.value ? 4278190080 : 255;
                    for (d = 0; d < m; d++) {
                        for (f = d < k ? I: j, c = 0, e = 0; e < f; e++) {
                            for (var z = s - p,
                            A = 0,
                            B = z > w ? i: 8 * z - 7, C = B & -8, D = 0, E = 0; A < C; A += 8) E = q[p++],
                            t[c++] = 128 & E ? x: y,
                            t[c++] = 64 & E ? x: y,
                            t[c++] = 32 & E ? x: y,
                            t[c++] = 16 & E ? x: y,
                            t[c++] = 8 & E ? x: y,
                            t[c++] = 4 & E ? x: y,
                            t[c++] = 2 & E ? x: y,
                            t[c++] = 1 & E ? x: y;
                            for (; A < B; A++) 0 === D && (E = q[p++], D = 128),
                            t[c++] = E & D ? x: y,
                            D >>= 1
                        }
                        for (; c < u;) t[c++] = 0;
                        a.putImageData(n, 0, d * I)
                    }
                } else if (b.kind === l.RGBA_32BPP) {
                    for (e = 0, g = i * I * 4, d = 0; d < k; d++) r.set(q.subarray(p, p + g)),
                    p += g,
                    a.putImageData(n, 0, e),
                    e += I;
                    d < m && (g = i * j * 4, r.set(q.subarray(p, p + g)), a.putImageData(n, 0, e))
                } else if (b.kind === l.RGB_24BPP) for (f = I, g = i * f, d = 0; d < m; d++) {
                    for (d >= k && (f = j, g = i * f), c = 0, e = g; e--;) r[c++] = q[p++],
                    r[c++] = q[p++],
                    r[c++] = q[p++],
                    r[c++] = 255;
                    a.putImageData(n, 0, d * I)
                } else v("bad image kind: " + b.kind)
            }
            function c(a, b) {
                for (var c = b.height,
                d = b.width,
                e = c % I,
                f = (c - e) / I, g = 0 === e ? f: f + 1, h = a.createImageData(d, I), i = 0, j = b.data, k = h.data, l = 0; l < g; l++) {
                    for (var m = l < f ? I: e, n = 3, o = 0; o < m; o++) for (var p = 0,
                    q = 0; q < d; q++) {
                        if (!p) {
                            var r = j[i++];
                            p = 128
                        }
                        k[n] = r & p ? 0 : 255,
                        n += 4,
                        p >>= 1
                    }
                    a.putImageData(h, 0, l * I)
                }
            }
            function f(a, b) {
                for (var c = ["strokeStyle", "fillStyle", "fillRule", "globalAlpha", "lineWidth", "lineCap", "lineJoin", "miterLimit", "globalCompositeOperation", "font"], d = 0, e = c.length; d < e; d++) {
                    var f = c[d];
                    void 0 !== a[f] && (b[f] = a[f])
                }
                void 0 !== a.setLineDash && (b.setLineDash(a.getLineDash()), b.lineDashOffset = a.lineDashOffset)
            }
            function g(a, b, c, d) {
                for (var e = a.length,
                f = 3; f < e; f += 4) {
                    var g = a[f];
                    if (0 === g) a[f - 3] = b,
                    a[f - 2] = c,
                    a[f - 1] = d;
                    else if (g < 255) {
                        var h = 255 - g;
                        a[f - 3] = a[f - 3] * g + b * h >> 8,
                        a[f - 2] = a[f - 2] * g + c * h >> 8,
                        a[f - 1] = a[f - 1] * g + d * h >> 8
                    }
                }
            }
            function h(a, b, c) {
                for (var d = a.length,
                e = 1 / 255,
                f = 3; f < d; f += 4) {
                    var g = c ? c[a[f]] : a[f];
                    b[f] = b[f] * g * e | 0
                }
            }
            function i(a, b, c) {
                for (var d = a.length,
                e = 3; e < d; e += 4) {
                    var f = 77 * a[e - 3] + 152 * a[e - 2] + 28 * a[e - 1];
                    b[e] = c ? b[e] * c[f >> 8] >> 8 : b[e] * f >> 16
                }
            }
            function u(a, b, c, d, e, f, j) {
                var k, l = !!f,
                m = l ? f[0] : 0,
                n = l ? f[1] : 0,
                o = l ? f[2] : 0;
                k = "Luminosity" === e ? i: h;
                for (var p = 1048576,
                q = Math.min(d, Math.ceil(p / c)), r = 0; r < d; r += q) {
                    var s = Math.min(q, d - r),
                    t = a.getImageData(0, r, c, s),
                    u = b.getImageData(0, r, c, s);
                    l && g(t.data, m, n, o),
                    k(t.data, u.data, j),
                    a.putImageData(u, 0, r)
                }
            }
            function B(a, b, c) {
                var d = b.canvas,
                e = b.context;
                a.setTransform(b.scaleX, 0, 0, b.scaleY, b.offsetX, b.offsetY);
                var f = b.backdrop || null;
                if (!b.transferMap && A.isEnabled) {
                    var g = A.composeSMask(c.canvas, d, {
                        subtype: b.subtype,
                        backdrop: f
                    });
                    return a.setTransform(1, 0, 0, 1, 0, 0),
                    void a.drawImage(g, b.offsetX, b.offsetY)
                }
                u(e, c, d.width, d.height, b.subtype, f, b.transferMap),
                a.drawImage(d, 0, 0)
            }
            var N = 15,
            O = 10,
            P = ["butt", "round", "square"],
            Q = ["miter", "round", "bevel"],
            R = {},
            S = {};
            a.prototype = {
                beginDrawing: function(a, b, c) {
                    var d = this.ctx.canvas.width,
                    e = this.ctx.canvas.height;
                    if (this.ctx.save(), this.ctx.fillStyle = "rgb(255, 255, 255)", this.ctx.fillRect(0, 0, d, e), this.ctx.restore(), c) {
                        var f = this.cachedCanvases.getCanvas("transparent", d, e, !0);
                        this.compositeCtx = this.ctx,
                        this.transparentCanvas = f.canvas,
                        this.ctx = f.context,
                        this.ctx.save(),
                        this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform)
                    }
                    this.ctx.save(),
                    a && this.ctx.transform.apply(this.ctx, a),
                    this.ctx.transform.apply(this.ctx, b.transform),
                    this.baseTransform = this.ctx.mozCurrentTransform.slice(),
                    this.imageLayer && this.imageLayer.beginLayout()
                },
                executeOperatorList: function(a, b, c, d) {
                    var e = a.argsArray,
                    f = a.fnArray,
                    g = b || 0,
                    h = e.length;
                    if (h === g) return g;
                    for (var i, j = h - g > O && "function" == typeof c,
                    k = j ? Date.now() + N: 0, l = 0, n = this.commonObjs, o = this.objs;;) {
                        if (void 0 !== d && g === d.nextBreakPoint) return d.breakIt(g, c),
                        g;
                        if (i = f[g], i !== m.dependency) this[i].apply(this, e[g]);
                        else for (var p = e[g], q = 0, r = p.length; q < r; q++) {
                            var s = p[q],
                            t = "g" === s[0] && "_" === s[1],
                            u = t ? n: o;
                            if (!u.isResolved(s)) return u.get(s, c),
                            g
                        }
                        if (g++, g === h) return g;
                        if (j && ++l > O) {
                            if (Date.now() > k) return c(),
                            g;
                            l = 0
                        }
                    }
                },
                endDrawing: function() {
                    null !== this.current.activeSMask && this.endSMaskGroup(),
                    this.ctx.restore(),
                    this.transparentCanvas && (this.ctx = this.compositeCtx, this.ctx.save(), this.ctx.setTransform(1, 0, 0, 1, 0, 0), this.ctx.drawImage(this.transparentCanvas, 0, 0), this.ctx.restore(), this.transparentCanvas = null),
                    this.cachedCanvases.clear(),
                    A.clear(),
                    this.imageLayer && this.imageLayer.endLayout()
                },
                setLineWidth: function(a) {
                    this.current.lineWidth = a,
                    this.ctx.lineWidth = a
                },
                setLineCap: function(a) {
                    this.ctx.lineCap = P[a]
                },
                setLineJoin: function(a) {
                    this.ctx.lineJoin = Q[a]
                },
                setMiterLimit: function(a) {
                    this.ctx.miterLimit = a
                },
                setDash: function(a, b) {
                    var c = this.ctx;
                    void 0 !== c.setLineDash && (c.setLineDash(a), c.lineDashOffset = b)
                },
                setRenderingIntent: function(a) {},
                setFlatness: function(a) {},
                setGState: function(a) {
                    for (var b = 0,
                    c = a.length; b < c; b++) {
                        var d = a[b],
                        e = d[0],
                        f = d[1];
                        switch (e) {
                        case "LW":
                            this.setLineWidth(f);
                            break;
                        case "LC":
                            this.setLineCap(f);
                            break;
                        case "LJ":
                            this.setLineJoin(f);
                            break;
                        case "ML":
                            this.setMiterLimit(f);
                            break;
                        case "D":
                            this.setDash(f[0], f[1]);
                            break;
                        case "RI":
                            this.setRenderingIntent(f);
                            break;
                        case "FL":
                            this.setFlatness(f);
                            break;
                        case "Font":
                            this.setFont(f[0], f[1]);
                            break;
                        case "CA":
                            this.current.strokeAlpha = d[1];
                            break;
                        case "ca":
                            this.current.fillAlpha = d[1],
                            this.ctx.globalAlpha = d[1];
                            break;
                        case "BM":
                            if (f && f.name && "Normal" !== f.name) {
                                var g = f.name.replace(/([A-Z])/g,
                                function(a) {
                                    return "-" + a.toLowerCase()
                                }).substring(1);
                                this.ctx.globalCompositeOperation = g,
                                this.ctx.globalCompositeOperation !== g && x('globalCompositeOperation "' + g + '" is not supported')
                            } else this.ctx.globalCompositeOperation = "source-over";
                            break;
                        case "SMask":
                            this.current.activeSMask && (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask ? this.suspendSMaskGroup() : this.endSMaskGroup()),
                            this.current.activeSMask = f ? this.tempSMask: null,
                            this.current.activeSMask && this.beginSMaskGroup(),
                            this.tempSMask = null
                        }
                    }
                },
                beginSMaskGroup: function() {
                    var a = this.current.activeSMask,
                    b = a.canvas.width,
                    c = a.canvas.height,
                    d = "smaskGroupAt" + this.groupLevel,
                    e = this.cachedCanvases.getCanvas(d, b, c, !0),
                    g = this.ctx,
                    h = g.mozCurrentTransform;
                    this.ctx.save();
                    var i = e.context;
                    i.scale(1 / a.scaleX, 1 / a.scaleY),
                    i.translate( - a.offsetX, -a.offsetY),
                    i.transform.apply(i, h),
                    a.startTransformInverse = i.mozCurrentTransformInverse,
                    f(g, i),
                    this.ctx = i,
                    this.setGState([["BM", "Normal"], ["ca", 1], ["CA", 1]]),
                    this.groupStack.push(g),
                    this.groupLevel++
                },
                suspendSMaskGroup: function() {
                    var a = this.ctx;
                    this.groupLevel--,
                    this.ctx = this.groupStack.pop(),
                    B(this.ctx, this.current.activeSMask, a),
                    this.ctx.restore(),
                    this.ctx.save(),
                    f(a, this.ctx),
                    this.current.resumeSMaskCtx = a;
                    var b = p.transform(this.current.activeSMask.startTransformInverse, a.mozCurrentTransform);
                    this.ctx.transform.apply(this.ctx, b),
                    a.save(),
                    a.setTransform(1, 0, 0, 1, 0, 0),
                    a.clearRect(0, 0, a.canvas.width, a.canvas.height),
                    a.restore()
                },
                resumeSMaskGroup: function() {
                    var a = this.current.resumeSMaskCtx,
                    b = this.ctx;
                    this.ctx = a,
                    this.groupStack.push(b),
                    this.groupLevel++
                },
                endSMaskGroup: function() {
                    var a = this.ctx;
                    this.groupLevel--,
                    this.ctx = this.groupStack.pop(),
                    B(this.ctx, this.current.activeSMask, a),
                    this.ctx.restore(),
                    f(a, this.ctx);
                    var b = p.transform(this.current.activeSMask.startTransformInverse, a.mozCurrentTransform);
                    this.ctx.transform.apply(this.ctx, b)
                },
                save: function() {
                    this.ctx.save();
                    var a = this.current;
                    this.stateStack.push(a),
                    this.current = a.clone(),
                    this.current.resumeSMaskCtx = null
                },
                restore: function() {
                    this.current.resumeSMaskCtx && this.resumeSMaskGroup(),
                    null === this.current.activeSMask || 0 !== this.stateStack.length && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask || this.endSMaskGroup(),
                    0 !== this.stateStack.length && (this.current = this.stateStack.pop(), this.ctx.restore(), this.pendingClip = null, this.cachedGetSinglePixelWidth = null)
                },
                transform: function(a, b, c, d, e, f) {
                    this.ctx.transform(a, b, c, d, e, f),
                    this.cachedGetSinglePixelWidth = null
                },
                constructPath: function(a, b) {
                    for (var c = this.ctx,
                    d = this.current,
                    e = d.x,
                    f = d.y,
                    g = 0,
                    h = 0,
                    i = a.length; g < i; g++) switch (0 | a[g]) {
                    case m.rectangle:
                        e = b[h++],
                        f = b[h++];
                        var j = b[h++],
                        k = b[h++];
                        0 === j && (j = this.getSinglePixelWidth()),
                        0 === k && (k = this.getSinglePixelWidth());
                        var l = e + j,
                        n = f + k;
                        this.ctx.moveTo(e, f),
                        this.ctx.lineTo(l, f),
                        this.ctx.lineTo(l, n),
                        this.ctx.lineTo(e, n),
                        this.ctx.lineTo(e, f),
                        this.ctx.closePath();
                        break;
                    case m.moveTo:
                        e = b[h++],
                        f = b[h++],
                        c.moveTo(e, f);
                        break;
                    case m.lineTo:
                        e = b[h++],
                        f = b[h++],
                        c.lineTo(e, f);
                        break;
                    case m.curveTo:
                        e = b[h + 4],
                        f = b[h + 5],
                        c.bezierCurveTo(b[h], b[h + 1], b[h + 2], b[h + 3], e, f),
                        h += 6;
                        break;
                    case m.curveTo2:
                        c.bezierCurveTo(e, f, b[h], b[h + 1], b[h + 2], b[h + 3]),
                        e = b[h + 2],
                        f = b[h + 3],
                        h += 4;
                        break;
                    case m.curveTo3:
                        e = b[h + 2],
                        f = b[h + 3],
                        c.bezierCurveTo(b[h], b[h + 1], e, f, e, f),
                        h += 4;
                        break;
                    case m.closePath:
                        c.closePath()
                    }
                    d.setCurrentPoint(e, f)
                },
                closePath: function() {
                    this.ctx.closePath()
                },
                stroke: function(a) {
                    a = "undefined" == typeof a || a;
                    var b = this.ctx,
                    c = this.current.strokeColor;
                    b.lineWidth = Math.max(this.getSinglePixelWidth() * F, this.current.lineWidth),
                    b.globalAlpha = this.current.strokeAlpha,
                    c && c.hasOwnProperty("type") && "Pattern" === c.type ? (b.save(), b.strokeStyle = c.getPattern(b, this), b.stroke(), b.restore()) : b.stroke(),
                    a && this.consumePath(),
                    b.globalAlpha = this.current.fillAlpha
                },
                closeStroke: function() {
                    this.closePath(),
                    this.stroke()
                },
                fill: function(a) {
                    a = "undefined" == typeof a || a;
                    var b = this.ctx,
                    c = this.current.fillColor,
                    d = this.current.patternFill,
                    e = !1;
                    d && (b.save(), this.baseTransform && b.setTransform.apply(b, this.baseTransform), b.fillStyle = c.getPattern(b, this), e = !0),
                    this.pendingEOFill ? (b.fill("evenodd"), this.pendingEOFill = !1) : b.fill(),
                    e && b.restore(),
                    a && this.consumePath()
                },
                eoFill: function() {
                    this.pendingEOFill = !0,
                    this.fill()
                },
                fillStroke: function() {
                    this.fill(!1),
                    this.stroke(!1),
                    this.consumePath()
                },
                eoFillStroke: function() {
                    this.pendingEOFill = !0,
                    this.fillStroke()
                },
                closeFillStroke: function() {
                    this.closePath(),
                    this.fillStroke()
                },
                closeEOFillStroke: function() {
                    this.pendingEOFill = !0,
                    this.closePath(),
                    this.fillStroke()
                },
                endPath: function() {
                    this.consumePath()
                },
                clip: function() {
                    this.pendingClip = R
                },
                eoClip: function() {
                    this.pendingClip = S
                },
                beginText: function() {
                    this.current.textMatrix = k,
                    this.current.textMatrixScale = 1,
                    this.current.x = this.current.lineX = 0,
                    this.current.y = this.current.lineY = 0
                },
                endText: function() {
                    var a = this.pendingTextPaths,
                    b = this.ctx;
                    if (void 0 === a) return void b.beginPath();
                    b.save(),
                    b.beginPath();
                    for (var c = 0; c < a.length; c++) {
                        var d = a[c];
                        b.setTransform.apply(b, d.transform),
                        b.translate(d.x, d.y),
                        d.addToPath(b, d.fontSize)
                    }
                    b.restore(),
                    b.clip(),
                    b.beginPath(),
                    delete this.pendingTextPaths
                },
                setCharSpacing: function(a) {
                    this.current.charSpacing = a
                },
                setWordSpacing: function(a) {
                    this.current.wordSpacing = a
                },
                setHScale: function(a) {
                    this.current.textHScale = a / 100
                },
                setLeading: function(a) {
                    this.current.leading = -a
                },
                setFont: function(a, b) {
                    var c = this.commonObjs.get(a),
                    d = this.current;
                    if (c || v("Can't find font for " + a), d.fontMatrix = c.fontMatrix ? c.fontMatrix: j, 0 !== d.fontMatrix[0] && 0 !== d.fontMatrix[3] || x("Invalid font matrix for font " + a), b < 0 ? (b = -b, d.fontDirection = -1) : d.fontDirection = 1, this.current.font = c, this.current.fontSize = b, !c.isType3Font) {
                        var e = c.loadedName || "sans-serif",
                        f = c.black ? "900": c.bold ? "bold": "normal",
                        g = c.italic ? "italic": "normal",
                        h = '"' + e + '", ' + c.fallbackName,
                        i = b < C ? C: b > D ? D: b;
                        this.current.fontSizeScale = b / i;
                        var k = g + " " + f + " " + i + "px " + h;
                        this.ctx.font = k
                    }
                },
                setTextRenderingMode: function(a) {
                    this.current.textRenderingMode = a
                },
                setTextRise: function(a) {
                    this.current.textRise = a
                },
                moveText: function(a, b) {
                    this.current.x = this.current.lineX += a,
                    this.current.y = this.current.lineY += b
                },
                setLeadingMoveText: function(a, b) {
                    this.setLeading( - b),
                    this.moveText(a, b)
                },
                setTextMatrix: function(a, b, c, d, e, f) {
                    this.current.textMatrix = [a, b, c, d, e, f],
                    this.current.textMatrixScale = Math.sqrt(a * a + b * b),
                    this.current.x = this.current.lineX = 0,
                    this.current.y = this.current.lineY = 0
                },
                nextLine: function() {
                    this.moveText(0, this.current.leading)
                },
                paintChar: function(a, b, c) {
                    var d, e = this.ctx,
                    f = this.current,
                    g = f.font,
                    h = f.textRenderingMode,
                    i = f.fontSize / f.fontSizeScale,
                    j = h & n.FILL_STROKE_MASK,
                    k = !!(h & n.ADD_TO_PATH_FLAG);
                    if ((g.disableFontFace || k) && (d = g.getPathGenerator(this.commonObjs, a)), g.disableFontFace ? (e.save(), e.translate(b, c), e.beginPath(), d(e, i), j !== n.FILL && j !== n.FILL_STROKE || e.fill(), j !== n.STROKE && j !== n.FILL_STROKE || e.stroke(), e.restore()) : (j !== n.FILL && j !== n.FILL_STROKE || e.fillText(a, b, c), j !== n.STROKE && j !== n.FILL_STROKE || e.strokeText(a, b, c)), k) {
                        var l = this.pendingTextPaths || (this.pendingTextPaths = []);
                        l.push({
                            transform: e.mozCurrentTransform,
                            x: b,
                            y: c,
                            fontSize: i,
                            addToPath: d
                        })
                    }
                },
                get isFontSubpixelAAEnabled() {
                    var a = this.canvasFactory.create(10, 10).context;
                    a.scale(1.5, 1),
                    a.fillText("I", 0, 10);
                    for (var b = a.getImageData(0, 0, 10, 10).data, c = !1, d = 3; d < b.length; d += 4) if (b[d] > 0 && b[d] < 255) {
                        c = !0;
                        break
                    }
                    return w(this, "isFontSubpixelAAEnabled", c)
                },
                showText: function(a) {
                    var b = this.current,
                    c = b.font;
                    if (c.isType3Font) return this.showType3Text(a);
                    var d = b.fontSize;
                    if (0 !== d) {
                        var e = this.ctx,
                        f = b.fontSizeScale,
                        g = b.charSpacing,
                        h = b.wordSpacing,
                        i = b.fontDirection,
                        j = b.textHScale * i,
                        k = a.length,
                        l = c.vertical,
                        m = l ? 1 : -1,
                        o = c.defaultVMetrics,
                        p = d * b.fontMatrix[0],
                        q = b.textRenderingMode === n.FILL && !c.disableFontFace;
                        e.save(),
                        e.transform.apply(e, b.textMatrix),
                        e.translate(b.x, b.y + b.textRise),
                        b.patternFill && (e.fillStyle = b.fillColor.getPattern(e, this)),
                        i > 0 ? e.scale(j, -1) : e.scale(j, 1);
                        var r = b.lineWidth,
                        t = b.textMatrixScale;
                        if (0 === t || 0 === r) {
                            var u = b.textRenderingMode & n.FILL_STROKE_MASK;
                            u !== n.STROKE && u !== n.FILL_STROKE || (this.cachedGetSinglePixelWidth = null, r = this.getSinglePixelWidth() * F)
                        } else r /= t;
                        1 !== f && (e.scale(f, f), r /= f),
                        e.lineWidth = r;
                        var v, w = 0;
                        for (v = 0; v < k; ++v) {
                            var x = a[v];
                            if (s(x)) w += m * x * d / 1e3;
                            else {
                                var y, z, A, B, C = !1,
                                D = (x.isSpace ? h: 0) + g,
                                E = x.fontChar,
                                G = x.accent,
                                H = x.width;
                                if (l) {
                                    var I, J, K;
                                    I = x.vmetric || o,
                                    J = x.vmetric ? I[1] : .5 * H,
                                    J = -J * p,
                                    K = I[2] * p,
                                    H = I ? -I[0] : H,
                                    y = J / f,
                                    z = (w + K) / f
                                } else y = w / f,
                                z = 0;
                                if (c.remeasure && H > 0) {
                                    var L = 1e3 * e.measureText(E).width / d * f;
                                    if (H < L && this.isFontSubpixelAAEnabled) {
                                        var M = H / L;
                                        C = !0,
                                        e.save(),
                                        e.scale(M, 1),
                                        y /= M
                                    } else H !== L && (y += (H - L) / 2e3 * d / f)
                                } (x.isInFont || c.missingFile) && (q && !G ? e.fillText(E, y, z) : (this.paintChar(E, y, z), G && (A = y + G.offset.x / f, B = z - G.offset.y / f, this.paintChar(G.fontChar, A, B))));
                                var N = H * p + D * i;
                                w += N,
                                C && e.restore()
                            }
                        }
                        l ? b.y -= w * j: b.x += w * j,
                        e.restore()
                    }
                },
                showType3Text: function(a) {
                    var b, c, d, e, f = this.ctx,
                    g = this.current,
                    h = g.font,
                    i = g.fontSize,
                    k = g.fontDirection,
                    l = h.vertical ? 1 : -1,
                    m = g.charSpacing,
                    o = g.wordSpacing,
                    q = g.textHScale * k,
                    r = g.fontMatrix || j,
                    t = a.length,
                    u = g.textRenderingMode === n.INVISIBLE;
                    if (!u && 0 !== i) {
                        for (this.cachedGetSinglePixelWidth = null, f.save(), f.transform.apply(f, g.textMatrix), f.translate(g.x, g.y), f.scale(q, k), b = 0; b < t; ++b) if (c = a[b], s(c)) e = l * c * i / 1e3,
                        this.ctx.translate(e, 0),
                        g.x += e * q;
                        else {
                            var v = (c.isSpace ? o: 0) + m,
                            w = h.charProcOperatorList[c.operatorListId];
                            if (w) {
                                this.processingType3 = c,
                                this.save(),
                                f.scale(i, i),
                                f.transform.apply(f, r),
                                this.executeOperatorList(w),
                                this.restore();
                                var y = p.applyTransform([c.width, 0], r);
                                d = y[0] * i + v,
                                f.translate(d, 0),
                                g.x += d * q
                            } else x('Type3 character "' + c.operatorListId + '" is not available')
                        }
                        f.restore(),
                        this.processingType3 = null
                    }
                },
                setCharWidth: function(a, b) {},
                setCharWidthAndBounds: function(a, b, c, d, e, f) {
                    this.ctx.rect(c, d, e - c, f - d),
                    this.clip(),
                    this.endPath()
                },
                getColorN_Pattern: function(b) {
                    var c;
                    if ("TilingPattern" === b[0]) {
                        var d = b[1],
                        e = this.baseTransform || this.ctx.mozCurrentTransform.slice(),
                        f = this,
                        g = {
                            createCanvasGraphics: function(b) {
                                return new a(b, f.commonObjs, f.objs, f.canvasFactory)
                            }
                        };
                        c = new y(b, d, this.ctx, g, e)
                    } else c = z(b);
                    return c
                },
                setStrokeColorN: function() {
                    this.current.strokeColor = this.getColorN_Pattern(arguments)
                },
                setFillColorN: function() {
                    this.current.fillColor = this.getColorN_Pattern(arguments),
                    this.current.patternFill = !0
                },
                setStrokeRGBColor: function(a, b, c) {
                    var d = p.makeCssRgb(a, b, c);
                    this.ctx.strokeStyle = d,
                    this.current.strokeColor = d
                },
                setFillRGBColor: function(a, b, c) {
                    var d = p.makeCssRgb(a, b, c);
                    this.ctx.fillStyle = d,
                    this.current.fillColor = d,
                    this.current.patternFill = !1
                },
                shadingFill: function(a) {
                    var b = this.ctx;
                    this.save();
                    var c = z(a);
                    b.fillStyle = c.getPattern(b, this, !0);
                    var d = b.mozCurrentTransformInverse;
                    if (d) {
                        var e = b.canvas,
                        f = e.width,
                        g = e.height,
                        h = p.applyTransform([0, 0], d),
                        i = p.applyTransform([0, g], d),
                        j = p.applyTransform([f, 0], d),
                        k = p.applyTransform([f, g], d),
                        l = Math.min(h[0], i[0], j[0], k[0]),
                        m = Math.min(h[1], i[1], j[1], k[1]),
                        n = Math.max(h[0], i[0], j[0], k[0]),
                        o = Math.max(h[1], i[1], j[1], k[1]);
                        this.ctx.fillRect(l, m, n - l, o - m)
                    } else this.ctx.fillRect( - 1e10, -1e10, 2e10, 2e10);
                    this.restore()
                },
                beginInlineImage: function() {
                    v("Should not call beginInlineImage")
                },
                beginImageData: function() {
                    v("Should not call beginImageData")
                },
                paintFormXObjectBegin: function(a, b) {
                    if (this.save(), this.baseTransformStack.push(this.baseTransform), t(a) && 6 === a.length && this.transform.apply(this, a), this.baseTransform = this.ctx.mozCurrentTransform, t(b) && 4 === b.length) {
                        var c = b[2] - b[0],
                        d = b[3] - b[1];
                        this.ctx.rect(b[0], b[1], c, d),
                        this.clip(),
                        this.endPath()
                    }
                },
                paintFormXObjectEnd: function() {
                    this.restore(),
                    this.baseTransform = this.baseTransformStack.pop()
                },
                beginGroup: function(a) {
                    this.save();
                    var b = this.ctx;
                    a.isolated || r("TODO: Support non-isolated groups."),
                    a.knockout && x("Knockout groups not supported.");
                    var c = b.mozCurrentTransform;
                    a.matrix && b.transform.apply(b, a.matrix),
                    q(a.bbox, "Bounding box is required.");
                    var d = p.getAxialAlignedBoundingBox(a.bbox, b.mozCurrentTransform),
                    e = [0, 0, b.canvas.width, b.canvas.height];
                    d = p.intersect(d, e) || [0, 0, 0, 0];
                    var g = Math.floor(d[0]),
                    h = Math.floor(d[1]),
                    i = Math.max(Math.ceil(d[2]) - g, 1),
                    j = Math.max(Math.ceil(d[3]) - h, 1),
                    k = 1,
                    l = 1;
                    i > E && (k = i / E, i = E),
                    j > E && (l = j / E, j = E);
                    var m = "groupAt" + this.groupLevel;
                    a.smask && (m += "_smask_" + this.smaskCounter++%2);
                    var n = this.cachedCanvases.getCanvas(m, i, j, !0),
                    o = n.context;
                    o.scale(1 / k, 1 / l),
                    o.translate( - g, -h),
                    o.transform.apply(o, c),
                    a.smask ? this.smaskStack.push({
                        canvas: n.canvas,
                        context: o,
                        offsetX: g,
                        offsetY: h,
                        scaleX: k,
                        scaleY: l,
                        subtype: a.smask.subtype,
                        backdrop: a.smask.backdrop,
                        transferMap: a.smask.transferMap || null,
                        startTransformInverse: null
                    }) : (b.setTransform(1, 0, 0, 1, 0, 0), b.translate(g, h), b.scale(k, l)),
                    f(b, o),
                    this.ctx = o,
                    this.setGState([["BM", "Normal"], ["ca", 1], ["CA", 1]]),
                    this.groupStack.push(b),
                    this.groupLevel++,
                    this.current.activeSMask = null
                },
                endGroup: function(a) {
                    this.groupLevel--;
                    var b = this.ctx;
                    this.ctx = this.groupStack.pop(),
                    void 0 !== this.ctx.imageSmoothingEnabled ? this.ctx.imageSmoothingEnabled = !1 : this.ctx.mozImageSmoothingEnabled = !1,
                    a.smask ? this.tempSMask = this.smaskStack.pop() : this.ctx.drawImage(b.canvas, 0, 0),
                    this.restore()
                },
                beginAnnotations: function() {
                    this.save(),
                    this.current = new M,
                    this.baseTransform && this.ctx.setTransform.apply(this.ctx, this.baseTransform)
                },
                endAnnotations: function() {
                    this.restore()
                },
                beginAnnotation: function(a, b, c) {
                    if (this.save(), t(a) && 4 === a.length) {
                        var d = a[2] - a[0],
                        e = a[3] - a[1];
                        this.ctx.rect(a[0], a[1], d, e),
                        this.clip(),
                        this.endPath()
                    }
                    this.transform.apply(this, b),
                    this.transform.apply(this, c)
                },
                endAnnotation: function() {
                    this.restore()
                },
                paintJpegXObject: function(a, b, c) {
                    var d = this.objs.get(a);
                    if (!d) return void x("Dependent image isn't ready yet");
                    this.save();
                    var e = this.ctx;
                    if (e.scale(1 / b, -1 / c), e.drawImage(d, 0, 0, d.width, d.height, 0, -c, b, c), this.imageLayer) {
                        var f = e.mozCurrentTransformInverse,
                        g = this.getCanvasPosition(0, 0);
                        this.imageLayer.appendImage({
                            objId: a,
                            left: g[0],
                            top: g[1],
                            width: b / f[0],
                            height: c / f[3]
                        })
                    }
                    this.restore()
                },
                paintImageMaskXObject: function(a) {
                    var b = this.ctx,
                    d = a.width,
                    f = a.height,
                    g = this.current.fillColor,
                    h = this.current.patternFill,
                    i = this.processingType3;
                    if (G && i && void 0 === i.compiled && (d <= H && f <= H ? i.compiled = e({
                        data: a.data,
                        width: d,
                        height: f
                    }) : i.compiled = null), i && i.compiled) return void i.compiled(b);
                    var j = this.cachedCanvases.getCanvas("maskCanvas", d, f),
                    k = j.context;
                    k.save(),
                    c(k, a),
                    k.globalCompositeOperation = "source-in",
                    k.fillStyle = h ? g.getPattern(k, this) : g,
                    k.fillRect(0, 0, d, f),
                    k.restore(),
                    this.paintInlineImageXObject(j.canvas)
                },
                paintImageMaskXObjectRepeat: function(a, b, d, e) {
                    var f = a.width,
                    g = a.height,
                    h = this.current.fillColor,
                    i = this.current.patternFill,
                    j = this.cachedCanvases.getCanvas("maskCanvas", f, g),
                    k = j.context;
                    k.save(),
                    c(k, a),
                    k.globalCompositeOperation = "source-in",
                    k.fillStyle = i ? h.getPattern(k, this) : h,
                    k.fillRect(0, 0, f, g),
                    k.restore();
                    for (var l = this.ctx,
                    m = 0,
                    n = e.length; m < n; m += 2) l.save(),
                    l.transform(b, 0, 0, d, e[m], e[m + 1]),
                    l.scale(1, -1),
                    l.drawImage(j.canvas, 0, 0, f, g, 0, -1, 1, 1),
                    l.restore()
                },
                paintImageMaskXObjectGroup: function(a) {
                    for (var b = this.ctx,
                    d = this.current.fillColor,
                    e = this.current.patternFill,
                    f = 0,
                    g = a.length; f < g; f++) {
                        var h = a[f],
                        i = h.width,
                        j = h.height,
                        k = this.cachedCanvases.getCanvas("maskCanvas", i, j),
                        l = k.context;
                        l.save(),
                        c(l, h),
                        l.globalCompositeOperation = "source-in",
                        l.fillStyle = e ? d.getPattern(l, this) : d,
                        l.fillRect(0, 0, i, j),
                        l.restore(),
                        b.save(),
                        b.transform.apply(b, h.transform),
                        b.scale(1, -1),
                        b.drawImage(k.canvas, 0, 0, i, j, 0, -1, 1, 1),
                        b.restore()
                    }
                },
                paintImageXObject: function(a) {
                    var b = this.objs.get(a);
                    return b ? void this.paintInlineImageXObject(b) : void x("Dependent image isn't ready yet")
                },
                paintImageXObjectRepeat: function(a, b, c, d) {
                    var e = this.objs.get(a);
                    if (!e) return void x("Dependent image isn't ready yet");
                    for (var f = e.width,
                    g = e.height,
                    h = [], i = 0, j = d.length; i < j; i += 2) h.push({
                        transform: [b, 0, 0, c, d[i], d[i + 1]],
                        x: 0,
                        y: 0,
                        w: f,
                        h: g
                    });
                    this.paintInlineImageXObjectGroup(e, h)
                },
                paintInlineImageXObject: function(a) {
                    var c = a.width,
                    d = a.height,
                    e = this.ctx;
                    this.save(),
                    e.scale(1 / c, -1 / d);
                    var f, g, h = e.mozCurrentTransformInverse,
                    i = h[0],
                    j = h[1],
                    k = Math.max(Math.sqrt(i * i + j * j), 1),
                    l = h[2],
                    m = h[3],
                    n = Math.max(Math.sqrt(l * l + m * m), 1);
                    if (a instanceof HTMLElement || !a.data) f = a;
                    else {
                        g = this.cachedCanvases.getCanvas("inlineImage", c, d);
                        var o = g.context;
                        b(o, a),
                        f = g.canvas
                    }
                    for (var p = c,
                    q = d,
                    r = "prescale1"; k > 2 && p > 1 || n > 2 && q > 1;) {
                        var s = p,
                        t = q;
                        k > 2 && p > 1 && (s = Math.ceil(p / 2), k /= p / s),
                        n > 2 && q > 1 && (t = Math.ceil(q / 2), n /= q / t),
                        g = this.cachedCanvases.getCanvas(r, s, t),
                        o = g.context,
                        o.clearRect(0, 0, s, t),
                        o.drawImage(f, 0, 0, p, q, 0, 0, s, t),
                        f = g.canvas,
                        p = s,
                        q = t,
                        r = "prescale1" === r ? "prescale2": "prescale1"
                    }
                    if (e.drawImage(f, 0, 0, p, q, 0, -d, c, d), this.imageLayer) {
                        var u = this.getCanvasPosition(0, -d);
                        this.imageLayer.appendImage({
                            imgData: a,
                            left: u[0],
                            top: u[1],
                            width: c / h[0],
                            height: d / h[3]
                        })
                    }
                    this.restore()
                },
                paintInlineImageXObjectGroup: function(a, c) {
                    var d = this.ctx,
                    e = a.width,
                    f = a.height,
                    g = this.cachedCanvases.getCanvas("inlineImage", e, f),
                    h = g.context;
                    b(h, a);
                    for (var i = 0,
                    j = c.length; i < j; i++) {
                        var k = c[i];
                        if (d.save(), d.transform.apply(d, k.transform), d.scale(1, -1), d.drawImage(g.canvas, k.x, k.y, k.w, k.h, 0, -1, 1, 1), this.imageLayer) {
                            var l = this.getCanvasPosition(k.x, k.y);
                            this.imageLayer.appendImage({
                                imgData: a,
                                left: l[0],
                                top: l[1],
                                width: e,
                                height: f
                            })
                        }
                        d.restore()
                    }
                },
                paintSolidColorImageMask: function() {
                    this.ctx.fillRect(0, 0, 1, 1)
                },
                paintXObject: function() {
                    x("Unsupported 'paintXObject' command.")
                },
                markPoint: function(a) {},
                markPointProps: function(a, b) {},
                beginMarkedContent: function(a) {},
                beginMarkedContentProps: function(a, b) {},
                endMarkedContent: function() {},
                beginCompat: function() {},
                endCompat: function() {},
                consumePath: function() {
                    var a = this.ctx;
                    this.pendingClip && (this.pendingClip === S ? a.clip("evenodd") : a.clip(), this.pendingClip = null),
                    a.beginPath()
                },
                getSinglePixelWidth: function(a) {
                    if (null === this.cachedGetSinglePixelWidth) {
                        this.ctx.save();
                        var b = this.ctx.mozCurrentTransformInverse;
                        this.ctx.restore(),
                        this.cachedGetSinglePixelWidth = Math.sqrt(Math.max(b[0] * b[0] + b[1] * b[1], b[2] * b[2] + b[3] * b[3]))
                    }
                    return this.cachedGetSinglePixelWidth
                },
                getCanvasPosition: function(a, b) {
                    var c = this.ctx.mozCurrentTransform;
                    return [c[0] * a + c[2] * b + c[4], c[1] * a + c[3] * b + c[5]]
                }
            };
            for (var T in m) a.prototype[m[T]] = a.prototype[T];
            return a
        } ();
        b.CanvasGraphics = N
    },
    function(a, b, c) {
        function d(a) {
            this.docId = a,
            this.styleElement = null,
            this.nativeFontFaces = [],
            this.loadTestFontId = 0,
            this.loadingContext = {
                requests: [],
                nextRequestId: 0
            }
        }
        var e = c(0),
        f = e.assert,
        g = e.bytesToString,
        h = e.string32,
        i = e.shadow,
        j = e.warn;
        d.prototype = {
            insertRule: function(a) {
                var b = this.styleElement;
                b || (b = this.styleElement = document.createElement("style"), b.id = "PDFJS_FONT_STYLE_TAG_" + this.docId, document.documentElement.getElementsByTagName("head")[0].appendChild(b));
                var c = b.sheet;
                c.insertRule(a, c.cssRules.length)
            },
            clear: function() {
                this.styleElement && (this.styleElement.remove(), this.styleElement = null),
                this.nativeFontFaces.forEach(function(a) {
                    document.fonts.delete(a)
                }),
                this.nativeFontFaces.length = 0
            }
        };
        var k = function() {
            return atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==")
        };
        Object.defineProperty(d.prototype, "loadTestFont", {
            get: function() {
                return i(this, "loadTestFont", k())
            },
            configurable: !0
        }),
        d.prototype.addNativeFontFace = function(a) {
            this.nativeFontFaces.push(a),
            document.fonts.add(a)
        },
        d.prototype.bind = function(a, b) {
            for (var c = [], e = [], f = [], g = function(a) {
                return a.loaded.
                catch(function(b) {
                    j('Failed to load font "' + a.family + '": ' + b)
                })
            },
            h = d.isFontLoadingAPISupported && !d.isSyncFontLoadingSupported, i = 0, k = a.length; i < k; i++) {
                var l = a[i];
                if (!l.attached && l.loading !== !1) if (l.attached = !0, h) {
                    var m = l.createNativeFontFace();
                    m && (this.addNativeFontFace(m), f.push(g(m)))
                } else {
                    var n = l.createFontFaceRule();
                    n && (this.insertRule(n), c.push(n), e.push(l))
                }
            }
            var o = this.queueLoadingCallback(b);
            h ? Promise.all(f).then(function() {
                o.complete()
            }) : c.length > 0 && !d.isSyncFontLoadingSupported ? this.prepareFontLoadEvent(c, e, o) : o.complete()
        },
        d.prototype.queueLoadingCallback = function(a) {
            function b() {
                for (f(!e.end, "completeRequest() cannot be called twice"), e.end = Date.now(); c.requests.length > 0 && c.requests[0].end;) {
                    var a = c.requests.shift();
                    setTimeout(a.callback, 0)
                }
            }
            var c = this.loadingContext,
            d = "pdfjs-font-loading-" + c.nextRequestId++,
            e = {
                id: d,
                complete: b,
                callback: a,
                started: Date.now()
            };
            return c.requests.push(e),
            e
        },
        d.prototype.prepareFontLoadEvent = function(a, b, c) {
            function d(a, b) {
                return a.charCodeAt(b) << 24 | a.charCodeAt(b + 1) << 16 | a.charCodeAt(b + 2) << 8 | 255 & a.charCodeAt(b + 3)
            }
            function e(a, b, c, d) {
                var e = a.substr(0, b),
                f = a.substr(b + c);
                return e + d + f
            }
            function f(a, b) {
                if (m++, m > 30) return j("Load test font never loaded."),
                void b();
                l.font = "30px " + a,
                l.fillText(".", 0, 20);
                var c = l.getImageData(0, 0, 1, 1);
                return c.data[3] > 0 ? void b() : void setTimeout(f.bind(null, a, b))
            }
            var g, i, k = document.createElement("canvas");
            k.width = 1,
            k.height = 1;
            var l = k.getContext("2d"),
            m = 0,
            n = "lt" + Date.now() + this.loadTestFontId++,
            o = this.loadTestFont,
            p = 976;
            o = e(o, p, n.length, n);
            var q = 16,
            r = 1482184792,
            s = d(o, q);
            for (g = 0, i = n.length - 3; g < i; g += 4) s = s - r + d(n, g) | 0;
            g < n.length && (s = s - r + d(n + "XXX", g) | 0),
            o = e(o, q, 4, h(s));
            var t = "url(data:font/opentype;base64," + btoa(o) + ");",
            u = '@font-face { font-family:"' + n + '";src:' + t + "}";
            this.insertRule(u);
            var v = [];
            for (g = 0, i = b.length; g < i; g++) v.push(b[g].loadedName);
            v.push(n);
            var w = document.createElement("div");
            for (w.setAttribute("style", "visibility: hidden;width: 10px; height: 10px;position: absolute; top: 0px; left: 0px;"), g = 0, i = v.length; g < i; ++g) {
                var x = document.createElement("span");
                x.textContent = "Hi",
                x.style.fontFamily = v[g],
                w.appendChild(x)
            }
            document.body.appendChild(w),
            f(n,
            function() {
                document.body.removeChild(w),
                c.complete()
            })
        },
        d.isFontLoadingAPISupported = "undefined" != typeof document && !!document.fonts;
        var l = function() {
            if ("undefined" == typeof navigator) return ! 0;
            var a = !1,
            b = /Mozilla\/5.0.*?rv:(\d+).*? Gecko/.exec(navigator.userAgent);
            return b && b[1] >= 14 && (a = !0),
            a
        };
        Object.defineProperty(d, "isSyncFontLoadingSupported", {
            get: function() {
                return i(d, "isSyncFontLoadingSupported", l())
            },
            enumerable: !0,
            configurable: !0
        });
        var m = {
            get value() {
                return i(this, "value", e.isEvalSupported())
            }
        },
        n = function() {
            function a(a, b) {
                this.compiledGlyphs = Object.create(null);
                for (var c in a) this[c] = a[c];
                this.options = b
            }
            return a.prototype = {
                createNativeFontFace: function() {
                    if (!this.data) return null;
                    if (this.options.disableFontFace) return this.disableFontFace = !0,
                    null;
                    var a = new FontFace(this.loadedName, this.data, {});
                    return this.options.fontRegistry && this.options.fontRegistry.registerFont(this),
                    a
                },
                createFontFaceRule: function() {
                    if (!this.data) return null;
                    if (this.options.disableFontFace) return this.disableFontFace = !0,
                    null;
                    var a = g(new Uint8Array(this.data)),
                    b = this.loadedName,
                    c = "url(data:" + this.mimetype + ";base64," + btoa(a) + ");",
                    d = '@font-face { font-family:"' + b + '";src:' + c + "}";
                    return this.options.fontRegistry && this.options.fontRegistry.registerFont(this, c),
                    d
                },
                getPathGenerator: function(a, b) {
                    if (! (b in this.compiledGlyphs)) {
                        var c, d, e, f = a.get(this.loadedName + "_path_" + b);
                        if (this.options.isEvalSupported && m.value) {
                            var g, h = "";
                            for (d = 0, e = f.length; d < e; d++) c = f[d],
                            g = void 0 !== c.args ? c.args.join(",") : "",
                            h += "c." + c.cmd + "(" + g + ");\n";
                            this.compiledGlyphs[b] = new Function("c", "size", h)
                        } else this.compiledGlyphs[b] = function(a, b) {
                            for (d = 0, e = f.length; d < e; d++) c = f[d],
                            "scale" === c.cmd && (c.args = [b, -b]),
                            a[c.cmd].apply(a, c.args)
                        }
                    }
                    return this.compiledGlyphs[b]
                }
            },
            a
        } ();
        b.FontFaceObject = n,
        b.FontLoader = d
    },
    function(a, b, c) {
        function d(a) {
            var b = l[a[0]];
            return b || j("Unknown IR type: " + a[0]),
            b.fromIR(a)
        }
        var e = c(0),
        f = c(8),
        g = e.Util,
        h = e.info,
        i = e.isArray,
        j = e.error,
        k = f.WebGLUtils,
        l = {};
        l.RadialAxial = {
            fromIR: function(a) {
                var b = a[1],
                c = a[2],
                d = a[3],
                e = a[4],
                f = a[5],
                g = a[6];
                return {
                    type: "Pattern",
                    getPattern: function(a) {
                        var h;
                        "axial" === b ? h = a.createLinearGradient(d[0], d[1], e[0], e[1]) : "radial" === b && (h = a.createRadialGradient(d[0], d[1], f, e[0], e[1], g));
                        for (var i = 0,
                        j = c.length; i < j; ++i) {
                            var k = c[i];
                            h.addColorStop(k[0], k[1])
                        }
                        return h
                    }
                }
            }
        };
        var m = function() {
            function a(a, b, c, d, e, f, g, h) {
                var i, j = b.coords,
                k = b.colors,
                l = a.data,
                m = 4 * a.width;
                j[c + 1] > j[d + 1] && (i = c, c = d, d = i, i = f, f = g, g = i),
                j[d + 1] > j[e + 1] && (i = d, d = e, e = i, i = g, g = h, h = i),
                j[c + 1] > j[d + 1] && (i = c, c = d, d = i, i = f, f = g, g = i);
                var n = (j[c] + b.offsetX) * b.scaleX,
                o = (j[c + 1] + b.offsetY) * b.scaleY,
                p = (j[d] + b.offsetX) * b.scaleX,
                q = (j[d + 1] + b.offsetY) * b.scaleY,
                r = (j[e] + b.offsetX) * b.scaleX,
                s = (j[e + 1] + b.offsetY) * b.scaleY;
                if (! (o >= s)) for (var t, u, v, w, x, y, z, A, B, C = k[f], D = k[f + 1], E = k[f + 2], F = k[g], G = k[g + 1], H = k[g + 2], I = k[h], J = k[h + 1], K = k[h + 2], L = Math.round(o), M = Math.round(s), N = L; N <= M; N++) {
                    N < q ? (B = N < o ? 0 : o === q ? 1 : (o - N) / (o - q), t = n - (n - p) * B, u = C - (C - F) * B, v = D - (D - G) * B, w = E - (E - H) * B) : (B = N > s ? 1 : q === s ? 0 : (q - N) / (q - s), t = p - (p - r) * B, u = F - (F - I) * B, v = G - (G - J) * B, w = H - (H - K) * B),
                    B = N < o ? 0 : N > s ? 1 : (o - N) / (o - s),
                    x = n - (n - r) * B,
                    y = C - (C - I) * B,
                    z = D - (D - J) * B,
                    A = E - (E - K) * B;
                    for (var O = Math.round(Math.min(t, x)), P = Math.round(Math.max(t, x)), Q = m * N + 4 * O, R = O; R <= P; R++) B = (t - R) / (t - x),
                    B = B < 0 ? 0 : B > 1 ? 1 : B,
                    l[Q++] = u - (u - y) * B | 0,
                    l[Q++] = v - (v - z) * B | 0,
                    l[Q++] = w - (w - A) * B | 0,
                    l[Q++] = 255
                }
            }
            function b(b, c, d) {
                var e, f, g = c.coords,
                h = c.colors;
                switch (c.type) {
                case "lattice":
                    var i = c.verticesPerRow,
                    k = Math.floor(g.length / i) - 1,
                    l = i - 1;
                    for (e = 0; e < k; e++) for (var m = e * i,
                    n = 0; n < l; n++, m++) a(b, d, g[m], g[m + 1], g[m + i], h[m], h[m + 1], h[m + i]),
                    a(b, d, g[m + i + 1], g[m + 1], g[m + i], h[m + i + 1], h[m + 1], h[m + i]);
                    break;
                case "triangles":
                    for (e = 0, f = g.length; e < f; e += 3) a(b, d, g[e], g[e + 1], g[e + 2], h[e], h[e + 1], h[e + 2]);
                    break;
                default:
                    j("illigal figure")
                }
            }
            function c(a, c, d, e, f, g, h) {
                var i, j, l, m, n = 1.1,
                o = 3e3,
                p = 2,
                q = Math.floor(a[0]),
                r = Math.floor(a[1]),
                s = Math.ceil(a[2]) - q,
                t = Math.ceil(a[3]) - r,
                u = Math.min(Math.ceil(Math.abs(s * c[0] * n)), o),
                v = Math.min(Math.ceil(Math.abs(t * c[1] * n)), o),
                w = s / u,
                x = t / v,
                y = {
                    coords: d,
                    colors: e,
                    offsetX: -q,
                    offsetY: -r,
                    scaleX: 1 / w,
                    scaleY: 1 / x
                },
                z = u + 2 * p,
                A = v + 2 * p;
                if (k.isEnabled) i = k.drawFigures(u, v, g, f, y),
                j = h.getCanvas("mesh", z, A, !1),
                j.context.drawImage(i, p, p),
                i = j.canvas;
                else {
                    j = h.getCanvas("mesh", z, A, !1);
                    var B = j.context,
                    C = B.createImageData(u, v);
                    if (g) {
                        var D = C.data;
                        for (l = 0, m = D.length; l < m; l += 4) D[l] = g[0],
                        D[l + 1] = g[1],
                        D[l + 2] = g[2],
                        D[l + 3] = 255
                    }
                    for (l = 0; l < f.length; l++) b(C, f[l], y);
                    B.putImageData(C, p, p),
                    i = j.canvas
                }
                return {
                    canvas: i,
                    offsetX: q - p * w,
                    offsetY: r - p * x,
                    scaleX: w,
                    scaleY: x
                }
            }
            return c
        } ();
        l.Mesh = {
            fromIR: function(a) {
                var b = a[2],
                c = a[3],
                d = a[4],
                e = a[5],
                f = a[6],
                h = a[8];
                return {
                    type: "Pattern",
                    getPattern: function(a, i, j) {
                        var k;
                        if (j) k = g.singularValueDecompose2dScale(a.mozCurrentTransform);
                        else if (k = g.singularValueDecompose2dScale(i.baseTransform), f) {
                            var l = g.singularValueDecompose2dScale(f);
                            k = [k[0] * l[0], k[1] * l[1]]
                        }
                        var n = m(e, k, b, c, d, j ? null: h, i.cachedCanvases);
                        return j || (a.setTransform.apply(a, i.baseTransform), f && a.transform.apply(a, f)),
                        a.translate(n.offsetX, n.offsetY),
                        a.scale(n.scaleX, n.scaleY),
                        a.createPattern(n.canvas, "no-repeat")
                    }
                }
            }
        },
        l.Dummy = {
            fromIR: function() {
                return {
                    type: "Pattern",
                    getPattern: function() {
                        return "hotpink"
                    }
                }
            }
        };
        var n = function() {
            function a(a, b, c, d, e) {
                this.operatorList = a[2],
                this.matrix = a[3] || [1, 0, 0, 1, 0, 0],
                this.bbox = g.normalizeRect(a[4]),
                this.xstep = a[5],
                this.ystep = a[6],
                this.paintType = a[7],
                this.tilingType = a[8],
                this.color = b,
                this.canvasGraphicsFactory = d,
                this.baseTransform = e,
                this.type = "Pattern",
                this.ctx = c
            }
            var b = {
                COLORED: 1,
                UNCOLORED: 2
            },
            c = 3e3;
            return a.prototype = {
                createPatternCanvas: function(a) {
                    var b = this.operatorList,
                    d = this.bbox,
                    e = this.xstep,
                    f = this.ystep,
                    i = this.paintType,
                    j = this.tilingType,
                    k = this.color,
                    l = this.canvasGraphicsFactory;
                    h("TilingType: " + j);
                    var m = d[0],
                    n = d[1],
                    o = d[2],
                    p = d[3],
                    q = [m, n],
                    r = [m + e, n + f],
                    s = r[0] - q[0],
                    t = r[1] - q[1],
                    u = g.singularValueDecompose2dScale(this.matrix),
                    v = g.singularValueDecompose2dScale(this.baseTransform),
                    w = [u[0] * v[0], u[1] * v[1]];
                    s = Math.min(Math.ceil(Math.abs(s * w[0])), c),
                    t = Math.min(Math.ceil(Math.abs(t * w[1])), c);
                    var x = a.cachedCanvases.getCanvas("pattern", s, t, !0),
                    y = x.context,
                    z = l.createCanvasGraphics(y);
                    z.groupLevel = a.groupLevel,
                    this.setFillAndStrokeStyleToContext(y, i, k),
                    this.setScale(s, t, e, f),
                    this.transformToScale(z);
                    var A = [1, 0, 0, 1, -q[0], -q[1]];
                    return z.transform.apply(z, A),
                    this.clipBbox(z, d, m, n, o, p),
                    z.executeOperatorList(b),
                    x.canvas
                },
                setScale: function(a, b, c, d) {
                    this.scale = [a / c, b / d]
                },
                transformToScale: function(a) {
                    var b = this.scale,
                    c = [b[0], 0, 0, b[1], 0, 0];
                    a.transform.apply(a, c)
                },
                scaleToContext: function() {
                    var a = this.scale;
                    this.ctx.scale(1 / a[0], 1 / a[1])
                },
                clipBbox: function(a, b, c, d, e, f) {
                    if (i(b) && 4 === b.length) {
                        var g = e - c,
                        h = f - d;
                        a.ctx.rect(c, d, g, h),
                        a.clip(),
                        a.endPath()
                    }
                },
                setFillAndStrokeStyleToContext: function(a, c, d) {
                    switch (c) {
                    case b.COLORED:
                        var e = this.ctx;
                        a.fillStyle = e.fillStyle,
                        a.strokeStyle = e.strokeStyle;
                        break;
                    case b.UNCOLORED:
                        var f = g.makeCssRgb(d[0], d[1], d[2]);
                        a.fillStyle = f,
                        a.strokeStyle = f;
                        break;
                    default:
                        j("Unsupported paint type: " + c)
                    }
                },
                getPattern: function(a, b) {
                    var c = this.createPatternCanvas(b);
                    return a = this.ctx,
                    a.setTransform.apply(a, this.baseTransform),
                    a.transform.apply(a, this.matrix),
                    this.scaleToContext(),
                    a.createPattern(c, "repeat")
                }
            },
            a
        } ();
        b.getShadingPatternFromIR = d,
        b.TilingPattern = n
    },
    function(a, b, c) {
        var d = c(0),
        e = c(9),
        f = c(3),
        g = c(5),
        h = c(2),
        i = c(1),
        j = c(4);
        b.PDFJS = e.PDFJS,
        b.build = f.build,
        b.version = f.version,
        b.getDocument = f.getDocument,
        b.PDFDataRangeTransport = f.PDFDataRangeTransport,
        b.PDFWorker = f.PDFWorker,
        b.renderTextLayer = g.renderTextLayer,
        b.AnnotationLayer = h.AnnotationLayer,
        b.CustomStyle = i.CustomStyle,
        b.createPromiseCapability = d.createPromiseCapability,
        b.PasswordResponses = d.PasswordResponses,
        b.InvalidPDFException = d.InvalidPDFException,
        b.MissingPDFException = d.MissingPDFException,
        b.SVGGraphics = j.SVGGraphics,
        b.UnexpectedResponseException = d.UnexpectedResponseException,
        b.OPS = d.OPS,
        b.UNSUPPORTED_FEATURES = d.UNSUPPORTED_FEATURES,
        b.isValidUrl = i.isValidUrl,
        b.createValidAbsoluteUrl = d.createValidAbsoluteUrl,
        b.createObjectURL = d.createObjectURL,
        b.removeNullCharacters = d.removeNullCharacters,
        b.shadow = d.shadow,
        b.createBlob = d.createBlob,
        b.getFilenameFromUrl = i.getFilenameFromUrl,
        b.addLinkAttributes = i.addLinkAttributes
    },
    function(a, b, c) { (function(a) {
            if ("undefined" == typeof PDFJS || !PDFJS.compatibilityChecked) {
                var b = "undefined" != typeof window ? window: "undefined" != typeof a ? a: "undefined" != typeof self ? self: this,
                c = "undefined" != typeof navigator && navigator.userAgent || "",
                d = /Android/.test(c),
                e = /Android\s[0-2][^\d]/.test(c),
                f = /Android\s[0-4][^\d]/.test(c),
                g = c.indexOf("Chrom") >= 0,
                h = /Chrome\/(39|40)\./.test(c),
                i = c.indexOf("CriOS") >= 0,
                j = c.indexOf("Trident") >= 0,
                k = /\b(iPad|iPhone|iPod)(?=;)/.test(c),
                l = c.indexOf("Opera") >= 0,
                m = /Safari\//.test(c) && !/(Chrome\/|Android\s)/.test(c),
                n = "object" == typeof window && "object" == typeof document;
                "undefined" == typeof PDFJS && (b.PDFJS = {}),
                PDFJS.compatibilityChecked = !0,
                function() {
                    function a(a, b) {
                        return new d(this.slice(a, b))
                    }
                    function c(a, b) {
                        arguments.length < 2 && (b = 0);
                        for (var c = 0,
                        d = a.length; c < d; ++c, ++b) this[b] = 255 & a[c]
                    }
                    function d(b) {
                        var d, e, f;
                        if ("number" == typeof b) for (d = [], e = 0; e < b; ++e) d[e] = 0;
                        else if ("slice" in b) d = b.slice(0);
                        else for (d = [], e = 0, f = b.length; e < f; ++e) d[e] = b[e];
                        return d.subarray = a,
                        d.buffer = d,
                        d.byteLength = d.length,
                        d.set = c,
                        "object" == typeof b && b.buffer && (d.buffer = b.buffer),
                        d
                    }
                    return "undefined" != typeof Uint8Array ? ("undefined" == typeof Uint8Array.prototype.subarray && (Uint8Array.prototype.subarray = function(a, b) {
                        return new Uint8Array(this.slice(a, b))
                    },
                    Float32Array.prototype.subarray = function(a, b) {
                        return new Float32Array(this.slice(a, b))
                    }), void("undefined" == typeof Float64Array && (b.Float64Array = Float32Array))) : (b.Uint8Array = d, b.Int8Array = d, b.Uint32Array = d, b.Int32Array = d, b.Uint16Array = d, b.Float32Array = d, void(b.Float64Array = d))
                } (),
                function() {
                    b.URL || (b.URL = b.webkitURL)
                } (),
                function() {
                    if ("undefined" != typeof Object.defineProperty) {
                        var a = !0;
                        try {
                            n && Object.defineProperty(new Image, "id", {
                                value: "test"
                            });
                            var b = function() {};
                            b.prototype = {
                                get id() {}
                            },
                            Object.defineProperty(new b, "id", {
                                value: "",
                                configurable: !0,
                                enumerable: !0,
                                writable: !1
                            })
                        } catch(c) {
                            a = !1
                        }
                        if (a) return
                    }
                    Object.defineProperty = function(a, b, c) {
                        delete a[b],
                        "get" in c && a.__defineGetter__(b, c.get),
                        "set" in c && a.__defineSetter__(b, c.set),
                        "value" in c && (a.__defineSetter__(b,
                        function(a) {
                            return this.__defineGetter__(b,
                            function() {
                                return a
                            }),
                            a
                        }), a[b] = c.value)
                    }
                } (),
                function() {
                    if ("undefined" != typeof XMLHttpRequest) {
                        var a = XMLHttpRequest.prototype,
                        b = new XMLHttpRequest;
                        if ("overrideMimeType" in b || Object.defineProperty(a, "overrideMimeType", {
                            value: function(a) {}
                        }), !("responseType" in b)) return Object.defineProperty(a, "responseType", {
                            get: function() {
                                return this._responseType || "text"
                            },
                            set: function(a) {
                                "text" !== a && "arraybuffer" !== a || (this._responseType = a, "arraybuffer" === a && "function" == typeof this.overrideMimeType && this.overrideMimeType("text/plain; charset=x-user-defined"))
                            }
                        }),
                        "undefined" != typeof VBArray ? void Object.defineProperty(a, "response", {
                            get: function() {
                                return "arraybuffer" === this.responseType ? new Uint8Array(new VBArray(this.responseBody).toArray()) : this.responseText
                            }
                        }) : void Object.defineProperty(a, "response", {
                            get: function() {
                                if ("arraybuffer" !== this.responseType) return this.responseText;
                                var a, b = this.responseText,
                                c = b.length,
                                d = new Uint8Array(c);
                                for (a = 0; a < c; ++a) d[a] = 255 & b.charCodeAt(a);
                                return d.buffer
                            }
                        })
                    }
                } (),
                function() {
                    if (! ("btoa" in b)) {
                        var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
                        b.btoa = function(b) {
                            var c, d, e = "";
                            for (c = 0, d = b.length; c < d; c += 3) {
                                var f = 255 & b.charCodeAt(c),
                                g = 255 & b.charCodeAt(c + 1),
                                h = 255 & b.charCodeAt(c + 2),
                                i = f >> 2,
                                j = (3 & f) << 4 | g >> 4,
                                k = c + 1 < d ? (15 & g) << 2 | h >> 6 : 64,
                                l = c + 2 < d ? 63 & h: 64;
                                e += a.charAt(i) + a.charAt(j) + a.charAt(k) + a.charAt(l)
                            }
                            return e
                        }
                    }
                } (),
                function() {
                    if (! ("atob" in b)) {
                        var a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
                        b.atob = function(b) {
                            if (b = b.replace(/=+$/, ""), b.length % 4 === 1) throw new Error("bad atob input");
                            for (var c, d, e = 0,
                            f = 0,
                            g = ""; d = b.charAt(f++);~d && (c = e % 4 ? 64 * c + d: d, e++%4) ? g += String.fromCharCode(255 & c >> ( - 2 * e & 6)) : 0) d = a.indexOf(d);
                            return g
                        }
                    }
                } (),
                function() {
                    "undefined" == typeof Function.prototype.bind && (Function.prototype.bind = function(a) {
                        var b = this,
                        c = Array.prototype.slice.call(arguments, 1),
                        d = function() {
                            var d = c.concat(Array.prototype.slice.call(arguments));
                            return b.apply(a, d)
                        };
                        return d
                    })
                } (),
                function() {
                    if (n) {
                        var a = document.createElement("div");
                        "dataset" in a || Object.defineProperty(HTMLElement.prototype, "dataset", {
                            get: function() {
                                if (this._dataset) return this._dataset;
                                for (var a = {},
                                b = 0,
                                c = this.attributes.length; b < c; b++) {
                                    var d = this.attributes[b];
                                    if ("data-" === d.name.substring(0, 5)) {
                                        var e = d.name.substring(5).replace(/\-([a-z])/g,
                                        function(a, b) {
                                            return b.toUpperCase()
                                        });
                                        a[e] = d.value
                                    }
                                }
                                return Object.defineProperty(this, "_dataset", {
                                    value: a,
                                    writable: !1,
                                    enumerable: !1
                                }),
                                a
                            },
                            enumerable: !0
                        })
                    }
                } (),
                function() {
                    function a(a, b, c, d) {
                        var e = a.className || "",
                        f = e.split(/\s+/g);
                        "" === f[0] && f.shift();
                        var g = f.indexOf(b);
                        return g < 0 && c && f.push(b),
                        g >= 0 && d && f.splice(g, 1),
                        a.className = f.join(" "),
                        g >= 0
                    }
                    if (n) {
                        var b = document.createElement("div");
                        if (! ("classList" in b)) {
                            var c = {
                                add: function(b) {
                                    a(this.element, b, !0, !1)
                                },
                                contains: function(b) {
                                    return a(this.element, b, !1, !1)
                                },
                                remove: function(b) {
                                    a(this.element, b, !1, !0)
                                },
                                toggle: function(b) {
                                    a(this.element, b, !0, !0)
                                }
                            };
                            Object.defineProperty(HTMLElement.prototype, "classList", {
                                get: function() {
                                    if (this._classList) return this._classList;
                                    var a = Object.create(c, {
                                        element: {
                                            value: this,
                                            writable: !1,
                                            enumerable: !0
                                        }
                                    });
                                    return Object.defineProperty(this, "_classList", {
                                        value: a,
                                        writable: !1,
                                        enumerable: !1
                                    }),
                                    a
                                },
                                enumerable: !0
                            })
                        }
                    }
                } (),
                function() {
                    if (! ("undefined" == typeof importScripts || "console" in b)) {
                        var a = {},
                        c = {
                            log: function() {
                                var a = Array.prototype.slice.call(arguments);
                                b.postMessage({
                                    targetName: "main",
                                    action: "console_log",
                                    data: a
                                })
                            },
                            error: function() {
                                var a = Array.prototype.slice.call(arguments);
                                b.postMessage({
                                    targetName: "main",
                                    action: "console_error",
                                    data: a
                                })
                            },
                            time: function(b) {
                                a[b] = Date.now()
                            },
                            timeEnd: function(b) {
                                var c = a[b];
                                if (!c) throw new Error("Unknown timer name " + b);
                                this.log("Timer:", b, Date.now() - c)
                            }
                        };
                        b.console = c
                    }
                } (),
                function() {
                    if (n) return "console" in window ? "bind" in console.log ? void 0 : (console.log = function(a) {
                        return function(b) {
                            return a(b)
                        }
                    } (console.log), console.error = function(a) {
                        return function(b) {
                            return a(b)
                        }
                    } (console.error), void(console.warn = function(a) {
                        return function(b) {
                            return a(b)
                        }
                    } (console.warn))) : void(window.console = {
                        log: function() {},
                        error: function() {},
                        warn: function() {}
                    })
                } (),
                function() {
                    function a(a) {
                        b(a.target) && a.stopPropagation()
                    }
                    function b(a) {
                        return a.disabled || a.parentNode && b(a.parentNode)
                    }
                    l && document.addEventListener("click", a, !0)
                } (),
                function() { (j || i) && (PDFJS.disableCreateObjectURL = !0)
                } (),
                function() {
                    "undefined" != typeof navigator && ("language" in navigator || (PDFJS.locale = navigator.userLanguage || "en-US"))
                } (),
                function() { (m || e || h || k) && (PDFJS.disableRange = !0, PDFJS.disableStream = !0)
                } (),
                function() {
                    n && (history.pushState && !e || (PDFJS.disableHistory = !0))
                } (),
                function() {
                    if (n) if (window.CanvasPixelArray)"function" != typeof window.CanvasPixelArray.prototype.set && (window.CanvasPixelArray.prototype.set = function(a) {
                        for (var b = 0,
                        c = this.length; b < c; b++) this[b] = a[b]
                    });
                    else {
                        var a, b = !1;
                        if (g ? (a = c.match(/Chrom(e|ium)\/([0-9]+)\./), b = a && parseInt(a[2]) < 21) : d ? b = f: m && (a = c.match(/Version\/([0-9]+)\.([0-9]+)\.([0-9]+) Safari\//), b = a && parseInt(a[1]) < 6), b) {
                            var e = window.CanvasRenderingContext2D.prototype,
                            h = e.createImageData;
                            e.createImageData = function(a, b) {
                                var c = h.call(this, a, b);
                                return c.data.set = function(a) {
                                    for (var b = 0,
                                    c = this.length; b < c; b++) this[b] = a[b]
                                },
                                c
                            },
                            e = null
                        }
                    }
                } (),
                function() {
                    function a(a) {
                        window.setTimeout(a, 20)
                    }
                    if (n) return k ? void(window.requestAnimationFrame = a) : void("requestAnimationFrame" in window || (window.requestAnimationFrame = window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || a))
                } (),
                function() { (k || d) && (PDFJS.maxCanvasPixels = 5242880)
                } (),
                function() {
                    n && j && window.parent !== window && (PDFJS.disableFullscreen = !0)
                } (),
                function() {
                    n && ("currentScript" in document || Object.defineProperty(document, "currentScript", {
                        get: function() {
                            var a = document.getElementsByTagName("script");
                            return a[a.length - 1]
                        },
                        enumerable: !0,
                        configurable: !0
                    }))
                } (),
                function() {
                    if (n) {
                        var a = document.createElement("input");
                        try {
                            a.type = "number"
                        } catch(b) {
                            var c = a.constructor.prototype,
                            d = Object.getOwnPropertyDescriptor(c, "type");
                            Object.defineProperty(c, "type", {
                                get: function() {
                                    return d.get.call(this)
                                },
                                set: function(a) {
                                    d.set.call(this, "number" === a ? "text": a)
                                },
                                enumerable: !0,
                                configurable: !0
                            })
                        }
                    }
                } (),
                function() {
                    if (n && document.attachEvent) {
                        var a = document.constructor.prototype,
                        b = Object.getOwnPropertyDescriptor(a, "readyState");
                        Object.defineProperty(a, "readyState", {
                            get: function() {
                                var a = b.get.call(this);
                                return "interactive" === a ? "loading": a
                            },
                            set: function(a) {
                                b.set.call(this, a)
                            },
                            enumerable: !0,
                            configurable: !0
                        })
                    }
                } (),
                function() {
                    n && "undefined" == typeof Element.prototype.remove && (Element.prototype.remove = function() {
                        this.parentNode && this.parentNode.removeChild(this)
                    })
                } (),
                function() {
                    if (b.Promise) return "function" != typeof b.Promise.all && (b.Promise.all = function(a) {
                        var c, d, e = 0,
                        f = [],
                        g = new b.Promise(function(a, b) {
                            c = a,
                            d = b
                        });
                        return a.forEach(function(a, b) {
                            e++,
                            a.then(function(a) {
                                f[b] = a,
                                e--,
                                0 === e && c(f)
                            },
                            d)
                        }),
                        0 === e && c(f),
                        g
                    }),
                    "function" != typeof b.Promise.resolve && (b.Promise.resolve = function(a) {
                        return new b.Promise(function(b) {
                            b(a)
                        })
                    }),
                    "function" != typeof b.Promise.reject && (b.Promise.reject = function(a) {
                        return new b.Promise(function(b, c) {
                            c(a)
                        })
                    }),
                    void("function" != typeof b.Promise.prototype.
                    catch && (b.Promise.prototype.
                    catch = function(a) {
                        return b.Promise.prototype.then(void 0, a)
                    }));
                    var a = 0,
                    c = 1,
                    d = 2,
                    e = 500,
                    f = {
                        handlers: [],
                        running: !1,
                        unhandledRejections: [],
                        pendingRejectionCheck: !1,
                        scheduleHandlers: function(b) {
                            b._status !== a && (this.handlers = this.handlers.concat(b._handlers), b._handlers = [], this.running || (this.running = !0, setTimeout(this.runHandlers.bind(this), 0)))
                        },
                        runHandlers: function() {
                            for (var a = 1,
                            b = Date.now() + a; this.handlers.length > 0;) {
                                var e = this.handlers.shift(),
                                f = e.thisPromise._status,
                                g = e.thisPromise._value;
                                try {
                                    f === c ? "function" == typeof e.onResolve && (g = e.onResolve(g)) : "function" == typeof e.onReject && (g = e.onReject(g), f = c, e.thisPromise._unhandledRejection && this.removeUnhandeledRejection(e.thisPromise))
                                } catch(h) {
                                    f = d,
                                    g = h
                                }
                                if (e.nextPromise._updateStatus(f, g), Date.now() >= b) break
                            }
                            return this.handlers.length > 0 ? void setTimeout(this.runHandlers.bind(this), 0) : void(this.running = !1)
                        },
                        addUnhandledRejection: function(a) {
                            this.unhandledRejections.push({
                                promise: a,
                                time: Date.now()
                            }),
                            this.scheduleRejectionCheck()
                        },
                        removeUnhandeledRejection: function(a) {
                            a._unhandledRejection = !1;
                            for (var b = 0; b < this.unhandledRejections.length; b++) this.unhandledRejections[b].promise === a && (this.unhandledRejections.splice(b), b--)
                        },
                        scheduleRejectionCheck: function() {
                            this.pendingRejectionCheck || (this.pendingRejectionCheck = !0, setTimeout(function() {
                                this.pendingRejectionCheck = !1;
                                for (var a = Date.now(), b = 0; b < this.unhandledRejections.length; b++) if (a - this.unhandledRejections[b].time > e) {
                                    var c = this.unhandledRejections[b].promise._value,
                                    d = "Unhandled rejection: " + c;
                                    c.stack && (d += "\n" + c.stack);
                                    try {
                                        throw new Error(d)
                                    } catch(f) {
                                        console.warn(d)
                                    }
                                    this.unhandledRejections.splice(b),
                                    b--
                                }
                                this.unhandledRejections.length && this.scheduleRejectionCheck()
                            }.bind(this), e))
                        }
                    },
                    g = function(b) {
                        this._status = a,
                        this._handlers = [];
                        try {
                            b.call(this, this._resolve.bind(this), this._reject.bind(this))
                        } catch(c) {
                            this._reject(c)
                        }
                    };
                    g.all = function(a) {
                        function b(a) {
                            f._status !== d && (i = [], e(a))
                        }
                        var c, e, f = new g(function(a, b) {
                            c = a,
                            e = b
                        }),
                        h = a.length,
                        i = [];
                        if (0 === h) return c(i),
                        f;
                        for (var j = 0,
                        k = a.length; j < k; ++j) {
                            var l = a[j],
                            m = function(a) {
                                return function(b) {
                                    f._status !== d && (i[a] = b, h--, 0 === h && c(i))
                                }
                            } (j);
                            g.isPromise(l) ? l.then(m, b) : m(l)
                        }
                        return f
                    },
                    g.isPromise = function(a) {
                        return a && "function" == typeof a.then
                    },
                    g.resolve = function(a) {
                        return new g(function(b) {
                            b(a)
                        })
                    },
                    g.reject = function(a) {
                        return new g(function(b, c) {
                            c(a)
                        })
                    },
                    g.prototype = {
                        _status: null,
                        _value: null,
                        _handlers: null,
                        _unhandledRejection: null,
                        _updateStatus: function(a, b) {
                            if (this._status !== c && this._status !== d) {
                                if (a === c && g.isPromise(b)) return void b.then(this._updateStatus.bind(this, c), this._updateStatus.bind(this, d));
                                this._status = a,
                                this._value = b,
                                a === d && 0 === this._handlers.length && (this._unhandledRejection = !0, f.addUnhandledRejection(this)),
                                f.scheduleHandlers(this)
                            }
                        },
                        _resolve: function(a) {
                            this._updateStatus(c, a)
                        },
                        _reject: function(a) {
                            this._updateStatus(d, a)
                        },
                        then: function(a, b) {
                            var c = new g(function(a, b) {
                                this.resolve = a,
                                this.reject = b
                            });
                            return this._handlers.push({
                                thisPromise: this,
                                onResolve: a,
                                onReject: b,
                                nextPromise: c
                            }),
                            f.scheduleHandlers(this),
                            c
                        },
                        catch: function(a) {
                            return this.then(void 0, a)
                        }
                    },
                    b.Promise = g
                } (),
                function() {
                    function a() {
                        this.id = "$weakmap" + c++
                    }
                    if (!b.WeakMap) {
                        var c = 0;
                        a.prototype = {
                            has: function(a) {
                                return !! Object.getOwnPropertyDescriptor(a, this.id)
                            },
                            get: function(a, b) {
                                return this.has(a) ? a[this.id] : b
                            },
                            set: function(a, b) {
                                Object.defineProperty(a, this.id, {
                                    value: b,
                                    enumerable: !1,
                                    configurable: !0
                                })
                            },
                            delete: function(a) {
                                delete a[this.id]
                            }
                        },
                        b.WeakMap = a
                    }
                } (),
                function() {
                    function a(a) {
                        return void 0 !== m[a]
                    }
                    function c() {
                        h.call(this),
                        this._isInvalid = !0
                    }
                    function d(a) {
                        return "" === a && c.call(this),
                        a.toLowerCase()
                    }
                    function e(a) {
                        var b = a.charCodeAt(0);
                        return b > 32 && b < 127 && [34, 35, 60, 62, 63, 96].indexOf(b) === -1 ? a: encodeURIComponent(a)
                    }
                    function f(a) {
                        var b = a.charCodeAt(0);
                        return b > 32 && b < 127 && [34, 35, 60, 62, 96].indexOf(b) === -1 ? a: encodeURIComponent(a)
                    }
                    function g(b, g, h) {
                        function i(a) {
                            t.push(a)
                        }
                        var j = g || "scheme start",
                        k = 0,
                        l = "",
                        r = !1,
                        s = !1,
                        t = [];
                        a: for (; (b[k - 1] !== o || 0 === k) && !this._isInvalid;) {
                            var u = b[k];
                            switch (j) {
                            case "scheme start":
                                if (!u || !p.test(u)) {
                                    if (g) {
                                        i("Invalid scheme.");
                                        break a
                                    }
                                    l = "",
                                    j = "no scheme";
                                    continue
                                }
                                l += u.toLowerCase(),
                                j = "scheme";
                                break;
                            case "scheme":
                                if (u && q.test(u)) l += u.toLowerCase();
                                else {
                                    if (":" !== u) {
                                        if (g) {
                                            if (u === o) break a;
                                            i("Code point not allowed in scheme: " + u);
                                            break a
                                        }
                                        l = "",
                                        k = 0,
                                        j = "no scheme";
                                        continue
                                    }
                                    if (this._scheme = l, l = "", g) break a;
                                    a(this._scheme) && (this._isRelative = !0),
                                    j = "file" === this._scheme ? "relative": this._isRelative && h && h._scheme === this._scheme ? "relative or authority": this._isRelative ? "authority first slash": "scheme data"
                                }
                                break;
                            case "scheme data":
                                "?" === u ? (this._query = "?", j = "query") : "#" === u ? (this._fragment = "#", j = "fragment") : u !== o && "\t" !== u && "\n" !== u && "\r" !== u && (this._schemeData += e(u));
                                break;
                            case "no scheme":
                                if (h && a(h._scheme)) {
                                    j = "relative";
                                    continue
                                }
                                i("Missing scheme."),
                                c.call(this);
                                break;
                            case "relative or authority":
                                if ("/" !== u || "/" !== b[k + 1]) {
                                    i("Expected /, got: " + u),
                                    j = "relative";
                                    continue
                                }
                                j = "authority ignore slashes";
                                break;
                            case "relative":
                                if (this._isRelative = !0, "file" !== this._scheme && (this._scheme = h._scheme), u === o) {
                                    this._host = h._host,
                                    this._port = h._port,
                                    this._path = h._path.slice(),
                                    this._query = h._query,
                                    this._username = h._username,
                                    this._password = h._password;
                                    break a
                                }
                                if ("/" === u || "\\" === u)"\\" === u && i("\\ is an invalid code point."),
                                j = "relative slash";
                                else if ("?" === u) this._host = h._host,
                                this._port = h._port,
                                this._path = h._path.slice(),
                                this._query = "?",
                                this._username = h._username,
                                this._password = h._password,
                                j = "query";
                                else {
                                    if ("#" !== u) {
                                        var v = b[k + 1],
                                        w = b[k + 2]; ("file" !== this._scheme || !p.test(u) || ":" !== v && "|" !== v || w !== o && "/" !== w && "\\" !== w && "?" !== w && "#" !== w) && (this._host = h._host, this._port = h._port, this._username = h._username, this._password = h._password, this._path = h._path.slice(), this._path.pop()),
                                        j = "relative path";
                                        continue
                                    }
                                    this._host = h._host,
                                    this._port = h._port,
                                    this._path = h._path.slice(),
                                    this._query = h._query,
                                    this._fragment = "#",
                                    this._username = h._username,
                                    this._password = h._password,
                                    j = "fragment"
                                }
                                break;
                            case "relative slash":
                                if ("/" !== u && "\\" !== u) {
                                    "file" !== this._scheme && (this._host = h._host, this._port = h._port, this._username = h._username, this._password = h._password),
                                    j = "relative path";
                                    continue
                                }
                                "\\" === u && i("\\ is an invalid code point."),
                                j = "file" === this._scheme ? "file host": "authority ignore slashes";
                                break;
                            case "authority first slash":
                                if ("/" !== u) {
                                    i("Expected '/', got: " + u),
                                    j = "authority ignore slashes";
                                    continue
                                }
                                j = "authority second slash";
                                break;
                            case "authority second slash":
                                if (j = "authority ignore slashes", "/" !== u) {
                                    i("Expected '/', got: " + u);
                                    continue
                                }
                                break;
                            case "authority ignore slashes":
                                if ("/" !== u && "\\" !== u) {
                                    j = "authority";
                                    continue
                                }
                                i("Expected authority, got: " + u);
                                break;
                            case "authority":
                                if ("@" === u) {
                                    r && (i("@ already seen."), l += "%40"),
                                    r = !0;
                                    for (var x = 0; x < l.length; x++) {
                                        var y = l[x];
                                        if ("\t" !== y && "\n" !== y && "\r" !== y) if (":" !== y || null !== this._password) {
                                            var z = e(y);
                                            null !== this._password ? this._password += z: this._username += z
                                        } else this._password = "";
                                        else i("Invalid whitespace in authority.")
                                    }
                                    l = ""
                                } else {
                                    if (u === o || "/" === u || "\\" === u || "?" === u || "#" === u) {
                                        k -= l.length,
                                        l = "",
                                        j = "host";
                                        continue
                                    }
                                    l += u
                                }
                                break;
                            case "file host":
                                if (u === o || "/" === u || "\\" === u || "?" === u || "#" === u) {
                                    2 !== l.length || !p.test(l[0]) || ":" !== l[1] && "|" !== l[1] ? 0 === l.length ? j = "relative path start": (this._host = d.call(this, l), l = "", j = "relative path start") : j = "relative path";
                                    continue
                                }
                                "\t" === u || "\n" === u || "\r" === u ? i("Invalid whitespace in file host.") : l += u;
                                break;
                            case "host":
                            case "hostname":
                                if (":" !== u || s) {
                                    if (u === o || "/" === u || "\\" === u || "?" === u || "#" === u) {
                                        if (this._host = d.call(this, l), l = "", j = "relative path start", g) break a;
                                        continue
                                    }
                                    "\t" !== u && "\n" !== u && "\r" !== u ? ("[" === u ? s = !0 : "]" === u && (s = !1), l += u) : i("Invalid code point in host/hostname: " + u)
                                } else if (this._host = d.call(this, l), l = "", j = "port", "hostname" === g) break a;
                                break;
                            case "port":
                                if (/[0-9]/.test(u)) l += u;
                                else {
                                    if (u === o || "/" === u || "\\" === u || "?" === u || "#" === u || g) {
                                        if ("" !== l) {
                                            var A = parseInt(l, 10);
                                            A !== m[this._scheme] && (this._port = A + ""),
                                            l = ""
                                        }
                                        if (g) break a;
                                        j = "relative path start";
                                        continue
                                    }
                                    "\t" === u || "\n" === u || "\r" === u ? i("Invalid code point in port: " + u) : c.call(this)
                                }
                                break;
                            case "relative path start":
                                if ("\\" === u && i("'\\' not allowed in path."), j = "relative path", "/" !== u && "\\" !== u) continue;
                                break;
                            case "relative path":
                                if (u !== o && "/" !== u && "\\" !== u && (g || "?" !== u && "#" !== u))"\t" !== u && "\n" !== u && "\r" !== u && (l += e(u));
                                else {
                                    "\\" === u && i("\\ not allowed in relative path.");
                                    var B; (B = n[l.toLowerCase()]) && (l = B),
                                    ".." === l ? (this._path.pop(), "/" !== u && "\\" !== u && this._path.push("")) : "." === l && "/" !== u && "\\" !== u ? this._path.push("") : "." !== l && ("file" === this._scheme && 0 === this._path.length && 2 === l.length && p.test(l[0]) && "|" === l[1] && (l = l[0] + ":"), this._path.push(l)),
                                    l = "",
                                    "?" === u ? (this._query = "?", j = "query") : "#" === u && (this._fragment = "#", j = "fragment")
                                }
                                break;
                            case "query":
                                g || "#" !== u ? u !== o && "\t" !== u && "\n" !== u && "\r" !== u && (this._query += f(u)) : (this._fragment = "#", j = "fragment");
                                break;
                            case "fragment":
                                u !== o && "\t" !== u && "\n" !== u && "\r" !== u && (this._fragment += u)
                            }
                            k++
                        }
                    }
                    function h() {
                        this._scheme = "",
                        this._schemeData = "",
                        this._username = "",
                        this._password = null,
                        this._host = "",
                        this._port = "",
                        this._path = [],
                        this._query = "",
                        this._fragment = "",
                        this._isInvalid = !1,
                        this._isRelative = !1
                    }
                    function i(a, b) {
                        void 0 === b || b instanceof i || (b = new i(String(b))),
                        this._url = a,
                        h.call(this);
                        var c = a.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g, "");
                        g.call(this, c, null, b)
                    }
                    var j = !1;
                    try {
                        if ("function" == typeof URL && "object" == typeof URL.prototype && "origin" in URL.prototype) {
                            var k = new URL("b", "http://a");
                            k.pathname = "c%20d",
                            j = "http://a/c%20d" === k.href
                        }
                    } catch(l) {}
                    if (!j) {
                        var m = Object.create(null);
                        m.ftp = 21,
                        m.file = 0,
                        m.gopher = 70,
                        m.http = 80,
                        m.https = 443,
                        m.ws = 80,
                        m.wss = 443;
                        var n = Object.create(null);
                        n["%2e"] = ".",
                        n[".%2e"] = "..",
                        n["%2e."] = "..",
                        n["%2e%2e"] = "..";
                        var o, p = /[a-zA-Z]/,
                        q = /[a-zA-Z0-9\+\-\.]/;
                        i.prototype = {
                            toString: function() {
                                return this.href
                            },
                            get href() {
                                if (this._isInvalid) return this._url;
                                var a = "";
                                return "" === this._username && null === this._password || (a = this._username + (null !== this._password ? ":" + this._password: "") + "@"),
                                this.protocol + (this._isRelative ? "//" + a + this.host: "") + this.pathname + this._query + this._fragment
                            },
                            set href(a) {
                                h.call(this),
                                g.call(this, a)
                            },
                            get protocol() {
                                return this._scheme + ":"
                            },
                            set protocol(a) {
                                this._isInvalid || g.call(this, a + ":", "scheme start")
                            },
                            get host() {
                                return this._isInvalid ? "": this._port ? this._host + ":" + this._port: this._host
                            },
                            set host(a) { ! this._isInvalid && this._isRelative && g.call(this, a, "host")
                            },
                            get hostname() {
                                return this._host
                            },
                            set hostname(a) { ! this._isInvalid && this._isRelative && g.call(this, a, "hostname")
                            },
                            get port() {
                                return this._port
                            },
                            set port(a) { ! this._isInvalid && this._isRelative && g.call(this, a, "port")
                            },
                            get pathname() {
                                return this._isInvalid ? "": this._isRelative ? "/" + this._path.join("/") : this._schemeData
                            },
                            set pathname(a) { ! this._isInvalid && this._isRelative && (this._path = [], g.call(this, a, "relative path start"))
                            },
                            get search() {
                                return this._isInvalid || !this._query || "?" === this._query ? "": this._query
                            },
                            set search(a) { ! this._isInvalid && this._isRelative && (this._query = "?", "?" === a[0] && (a = a.slice(1)), g.call(this, a, "query"))
                            },
                            get hash() {
                                return this._isInvalid || !this._fragment || "#" === this._fragment ? "": this._fragment
                            },
                            set hash(a) {
                                this._isInvalid || (this._fragment = "#", "#" === a[0] && (a = a.slice(1)), g.call(this, a, "fragment"))
                            },
                            get origin() {
                                var a;
                                if (this._isInvalid || !this._scheme) return "";
                                switch (this._scheme) {
                                case "data":
                                case "file":
                                case "javascript":
                                case "mailto":
                                    return "null"
                                }
                                return a = this.host,
                                a ? this._scheme + "://" + a: ""
                            }
                        };
                        var r = b.URL;
                        r && (i.createObjectURL = function(a) {
                            return r.createObjectURL.apply(r, arguments)
                        },
                        i.revokeObjectURL = function(a) {
                            r.revokeObjectURL(a)
                        }),
                        b.URL = i
                    }
                } ()
            }
        }).call(b, c(6))
    }])
}),
function(a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {
            i: d,
            l: !1,
            exports: {}
        };
        return a[d].call(e.exports, e, e.exports, b),
        e.l = !0,
        e.exports
    }
    var c = {};
    return b.m = a,
    b.c = c,
    b.i = function(a) {
        return a
    },
    b.d = function(a, c, d) {
        b.o(a, c) || Object.defineProperty(a, c, {
            configurable: !1,
            enumerable: !0,
            get: d
        })
    },
    b.n = function(a) {
        var c = a && a.__esModule ?
        function() {
            return a.
        default
        }:
        function() {
            return a
        };
        return b.d(c, "a", c),
        c
    },
    b.o = function(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b)
    },
    b.p = "",
    b(b.s = 30)
} ([function(a, b, c) {
    function d(a) {
        var b = window.devicePixelRatio || 1,
        c = a.webkitBackingStorePixelRatio || a.mozBackingStorePixelRatio || a.msBackingStorePixelRatio || a.oBackingStorePixelRatio || a.backingStorePixelRatio || 1,
        d = b / c;
        return {
            sx: d,
            sy: d,
            scaled: 1 !== d
        }
    }
    function e(a, b, c) {
        var d = a.offsetParent;
        if (!d) return void console.error("offsetParent is not set -- cannot scroll");
        for (var e = c || !1,
        f = a.offsetTop + a.clientTop,
        g = a.offsetLeft + a.clientLeft; d.clientHeight === d.scrollHeight || e && "hidden" === getComputedStyle(d).overflow;) if (d.dataset._scaleY && (f /= d.dataset._scaleY, g /= d.dataset._scaleX), f += d.offsetTop, g += d.offsetLeft, d = d.offsetParent, !d) return;
        b && (void 0 !== b.top && (f += b.top), void 0 !== b.left && (g += b.left, d.scrollLeft = g)),
        d.scrollTop = f
    }
    function f(a, b) {
        var c = function(c) {
            e || (e = window.requestAnimationFrame(function() {
                e = null;
                var c = a.scrollTop,
                f = d.lastY;
                c !== f && (d.down = c > f),
                d.lastY = c,
                b(d)
            }))
        },
        d = {
            down: !0,
            lastY: a.scrollTop,
            _eventHandler: c
        },
        e = null;
        return a.addEventListener("scroll", c, !0),
        d
    }
    function g(a) {
        for (var b = a.split("&"), c = {},
        d = 0, e = b.length; d < e; ++d) {
            var f = b[d].split("="),
            g = f[0].toLowerCase(),
            h = f.length > 1 ? f[1] : null;
            c[decodeURIComponent(g)] = decodeURIComponent(h)
        }
        return c
    }
    function h(a, b) {
        var c = 0,
        d = a.length - 1;
        if (0 === a.length || !b(a[d])) return a.length;
        if (b(a[c])) return c;
        for (; c < d;) {
            var e = c + d >> 1,
            f = a[e];
            b(f) ? d = e: c = e + 1
        }
        return c
    }
    function i(a) {
        if (Math.floor(a) === a) return [a, 1];
        var b = 1 / a,
        c = 8;
        if (b > c) return [1, c];
        if (Math.floor(b) === b) return [1, b];
        for (var d = a > 1 ? b: a, e = 0, f = 1, g = 1, h = 1;;) {
            var i = e + g,
            j = f + h;
            if (j > c) break;
            d <= i / j ? (g = i, h = j) : (e = i, f = j)
        }
        var k;
        return k = d - e / f < g / h - d ? d === a ? [e, f] : [f, e] : d === a ? [g, h] : [h, g]
    }
    function j(a, b) {
        var c = a % b;
        return 0 === c ? a: Math.round(a - c + b)
    }
    function k(a, b, c) {
        function d(a) {
            var b = a.div,
            c = b.offsetTop + b.clientTop + b.clientHeight;
            return c > n
        }
        for (var e, f, g, i, j, k, l, m, n = a.scrollTop,
        o = n + a.clientHeight,
        p = a.scrollLeft,
        q = p + a.clientWidth,
        r = [], s = 0 === b.length ? 0 : h(b, d), t = s, u = b.length; t < u && (e = b[t], f = e.div, g = f.offsetTop + f.clientTop, i = f.clientHeight, !(g > o)); t++) l = f.offsetLeft + f.clientLeft,
        m = f.clientWidth,
        l + m < p || l > q || (j = Math.max(0, n - g) + Math.max(0, g + i - o), k = 100 * (i - j) / i | 0, r.push({
            id: e.id,
            x: l,
            y: g,
            view: e,
            percent: k
        }));
        var v = r[0],
        w = r[r.length - 1];
        return c && r.sort(function(a, b) {
            var c = a.percent - b.percent;
            return Math.abs(c) > .001 ? -c: a.id - b.id
        }),
        {
            first: v,
            last: w,
            views: r
        }
    }
    function l(a) {
        a.preventDefault()
    }
    function m(a, b) {
        "undefined" == typeof b && (b = "document.pdf");
        var c = /^(?:(?:[^:]+:)?\/\/[^\/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/,
        d = /[^\/?#=]+\.pdf\b(?!.*\.pdf\b)/i,
        e = c.exec(a),
        f = d.exec(e[1]) || d.exec(e[2]) || d.exec(e[3]);
        if (f && (f = f[0], f.indexOf("%") !== -1)) try {
            f = d.exec(decodeURIComponent(f))[0]
        } catch(g) {}
        return f || b
    }
    function n(a) {
        var b = Math.sqrt(a.deltaX * a.deltaX + a.deltaY * a.deltaY),
        c = Math.atan2(a.deltaY, a.deltaX); - .25 * Math.PI < c && c < .75 * Math.PI && (b = -b);
        var d = 0,
        e = 1,
        f = 30,
        g = 30;
        return a.deltaMode === d ? b /= f * g: a.deltaMode === e && (b /= g),
        b
    }
    var o = c(1),
    p = 96 / 72,
    q = "auto",
    r = 1,
    s = .25,
    t = 10,
    u = 0,
    v = 1.25,
    w = 40,
    x = 5,
    y = {
        CANVAS: "canvas",
        SVG: "svg"
    },
    z = document.mozL10n || document.webL10n,
    A = o.PDFJS;
    A.disableFullscreen = void 0 !== A.disableFullscreen && A.disableFullscreen,
    A.useOnlyCssZoom = void 0 !== A.useOnlyCssZoom && A.useOnlyCssZoom,
    A.maxCanvasPixels = void 0 === A.maxCanvasPixels ? 16777216 : A.maxCanvasPixels,
    A.disableHistory = void 0 !== A.disableHistory && A.disableHistory,
    A.disableTextLayer = void 0 !== A.disableTextLayer && A.disableTextLayer,
    A.ignoreCurrentPositionOnZoom = void 0 !== A.ignoreCurrentPositionOnZoom && A.ignoreCurrentPositionOnZoom,
    A.locale = void 0 === A.locale ? navigator.language: A.locale;
    var B = new Promise(function(a) {
        window.requestAnimationFrame(a)
    }),
    C = new Promise(function(a, b) {
        return z ? "loading" !== z.getReadyState() ? void a() : void window.addEventListener("localized",
        function(b) {
            a()
        }) : void a()
    }),
    D = function() {
        function a() {
            this._listeners = Object.create(null)
        }
        return a.prototype = {
            on: function(a, b) {
                var c = this._listeners[a];
                c || (c = [], this._listeners[a] = c),
                c.push(b)
            },
            off: function(a, b) {
                var c, d = this._listeners[a]; ! d || (c = d.indexOf(b)) < 0 || d.splice(c, 1)
            },
            dispatch: function(a) {
                var b = this._listeners[a];
                if (b && 0 !== b.length) {
                    var c = Array.prototype.slice.call(arguments, 1);
                    b.slice(0).forEach(function(a) {
                        a.apply(null, c)
                    })
                }
            }
        },
        a
    } (),
    E = function() {
        function a(a, b, c) {
            return Math.min(Math.max(a, b), c)
        }
        function b(a, b) {
            this.visible = !0,
            this.div = document.querySelector(a + " .progress"),
            this.bar = this.div.parentNode,
            this.height = b.height || 100,
            this.width = b.width || 100,
            this.units = b.units || "%",
            this.div.style.height = this.height + this.units,
            this.percent = 0
        }
        return b.prototype = {
            updateBar: function() {
                if (this._indeterminate) return this.div.classList.add("indeterminate"),
                void(this.div.style.width = this.width + this.units);
                this.div.classList.remove("indeterminate");
                var a = this.width * this._percent / 100;
                this.div.style.width = a + this.units
            },
            get percent() {
                return this._percent
            },
            set percent(b) {
                this._indeterminate = isNaN(b),
                this._percent = a(b, 0, 100),
                this.updateBar()
            },
            setWidth: function(a) {
                if (a) {
                    var b = a.parentNode,
                    c = b.offsetWidth - a.offsetWidth;
                    c > 0 && this.bar.setAttribute("style", "width: calc(100% - " + c + "px);")
                }
            },
            hide: function() {
                this.visible && (this.visible = !1, this.bar.classList.add("hidden"), document.body.classList.remove("loadingInProgress"))
            },
            show: function() {
                this.visible || (this.visible = !0, document.body.classList.add("loadingInProgress"), this.bar.classList.remove("hidden"))
            }
        },
        b
    } ();
    b.CSS_UNITS = p,
    b.DEFAULT_SCALE_VALUE = q,
    b.DEFAULT_SCALE = r,
    b.MIN_SCALE = s,
    b.MAX_SCALE = t,
    b.UNKNOWN_SCALE = u,
    b.MAX_AUTO_SCALE = v,
    b.SCROLLBAR_PADDING = w,
    b.VERTICAL_PADDING = x,
    b.RendererType = y,
    b.mozL10n = z,
    b.EventBus = D,
    b.ProgressBar = E,
    b.getPDFFileNameFromURL = m,
    b.noContextMenuHandler = l,
    b.parseQueryString = g,
    b.getVisibleElements = k,
    b.roundToDivide = j,
    b.approximateFraction = i,
    b.getOutputScale = d,
    b.scrollIntoView = e,
    b.watchScroll = f,
    b.binarySearchFirstItem = h,
    b.normalizeWheelEventDelta = n,
    b.animationStarted = B,
    b.localized = C
},
function(a, b, c) {
    var d;
    if ("undefined" == typeof __pdfjsdev_webpack__) if ("undefined" != typeof window && window["pdfjs-dist/build/pdf"]) d = window["pdfjs-dist/build/pdf"];
    else {
        if ("function" != typeof require) throw new Error("Neither `require` nor `window` found");
        d = require("../build/pdf.js")
    }
    a.exports = d
},
function(a, b, c) {
    function d(a) {
        a.on("documentload",
        function() {
            var a = document.createEvent("CustomEvent");
            a.initCustomEvent("documentload", !0, !0, {}),
            window.dispatchEvent(a)
        }),
        a.on("pagerendered",
        function(a) {
            var b = document.createEvent("CustomEvent");
            b.initCustomEvent("pagerendered", !0, !0, {
                pageNumber: a.pageNumber,
                cssTransform: a.cssTransform
            }),
            a.source.div.dispatchEvent(b)
        }),
        a.on("textlayerrendered",
        function(a) {
            var b = document.createEvent("CustomEvent");
            b.initCustomEvent("textlayerrendered", !0, !0, {
                pageNumber: a.pageNumber
            }),
            a.source.textLayerDiv.dispatchEvent(b)
        }),
        a.on("pagechange",
        function(a) {
            var b = document.createEvent("UIEvents");
            b.initUIEvent("pagechange", !0, !0, window, 0),
            b.pageNumber = a.pageNumber,
            a.source.container.dispatchEvent(b)
        }),
        a.on("pagesinit",
        function(a) {
            var b = document.createEvent("CustomEvent");
            b.initCustomEvent("pagesinit", !0, !0, null),
            a.source.container.dispatchEvent(b)
        }),
        a.on("pagesloaded",
        function(a) {
            var b = document.createEvent("CustomEvent");
            b.initCustomEvent("pagesloaded", !0, !0, {
                pagesCount: a.pagesCount
            }),
            a.source.container.dispatchEvent(b)
        }),
        a.on("scalechange",
        function(a) {
            var b = document.createEvent("UIEvents");
            b.initUIEvent("scalechange", !0, !0, window, 0),
            b.scale = a.scale,
            b.presetValue = a.presetValue,
            a.source.container.dispatchEvent(b)
        }),
        a.on("updateviewarea",
        function(a) {
            var b = document.createEvent("UIEvents");
            b.initUIEvent("updateviewarea", !0, !0, window, 0),
            b.location = a.location,
            a.source.container.dispatchEvent(b)
        }),
        a.on("find",
        function(a) {
            if (a.source !== window) {
                var b = document.createEvent("CustomEvent");
                b.initCustomEvent("find" + a.type, !0, !0, {
                    query: a.query,
                    phraseSearch: a.phraseSearch,
                    caseSensitive: a.caseSensitive,
                    highlightAll: a.highlightAll,
                    findPrevious: a.findPrevious
                }),
                window.dispatchEvent(b)
            }
        }),
        a.on("attachmentsloaded",
        function(a) {
            var b = document.createEvent("CustomEvent");
            b.initCustomEvent("attachmentsloaded", !0, !0, {
                attachmentsCount: a.attachmentsCount
            }),
            a.source.container.dispatchEvent(b)
        }),
        a.on("sidebarviewchanged",
        function(a) {
            var b = document.createEvent("CustomEvent");
            b.initCustomEvent("sidebarviewchanged", !0, !0, {
                view: a.view
            }),
            a.source.outerContainer.dispatchEvent(b)
        }),
        a.on("pagemode",
        function(a) {
            var b = document.createEvent("CustomEvent");
            b.initCustomEvent("pagemode", !0, !0, {
                mode: a.mode
            }),
            a.source.pdfViewer.container.dispatchEvent(b)
        }),
        a.on("namedaction",
        function(a) {
            var b = document.createEvent("CustomEvent");
            b.initCustomEvent("namedaction", !0, !0, {
                action: a.action
            }),
            a.source.pdfViewer.container.dispatchEvent(b)
        }),
        a.on("presentationmodechanged",
        function(a) {
            var b = document.createEvent("CustomEvent");
            b.initCustomEvent("presentationmodechanged", !0, !0, {
                active: a.active,
                switchInProgress: a.switchInProgress
            }),
            window.dispatchEvent(b)
        }),
        a.on("outlineloaded",
        function(a) {
            var b = document.createEvent("CustomEvent");
            b.initCustomEvent("outlineloaded", !0, !0, {
                outlineCount: a.outlineCount
            }),
            a.source.container.dispatchEvent(b)
        })
    }
    function e() {
        return h ? h: (h = new g, d(h), h)
    }
    var f = c(0),
    g = f.EventBus,
    h = null;
    b.attachDOMEventsToEventBus = d,
    b.getGlobalEventBus = e
},
function(a, b, c) {
    var d = 3e4,
    e = {
        INITIAL: 0,
        RUNNING: 1,
        PAUSED: 2,
        FINISHED: 3
    },
    f = function() {
        function a() {
            this.pdfViewer = null,
            this.pdfThumbnailViewer = null,
            this.onIdle = null,
            this.highestPriorityPage = null,
            this.idleTimeout = null,
            this.printing = !1,
            this.isThumbnailViewEnabled = !1
        }
        return a.prototype = {
            setViewer: function(a) {
                this.pdfViewer = a
            },
            setThumbnailViewer: function(a) {
                this.pdfThumbnailViewer = a
            },
            isHighestPriority: function(a) {
                return this.highestPriorityPage === a.renderingId
            },
            renderHighestPriority: function(a) {
                this.idleTimeout && (clearTimeout(this.idleTimeout), this.idleTimeout = null),
                this.pdfViewer.forceRendering(a) || this.pdfThumbnailViewer && this.isThumbnailViewEnabled && this.pdfThumbnailViewer.forceRendering() || this.printing || this.onIdle && (this.idleTimeout = setTimeout(this.onIdle.bind(this), d))
            },
            getHighestPriority: function(a, b, c) {
                var d = a.views,
                e = d.length;
                if (0 === e) return ! 1;
                for (var f = 0; f < e; ++f) {
                    var g = d[f].view;
                    if (!this.isViewFinished(g)) return g
                }
                if (c) {
                    var h = a.last.id;
                    if (b[h] && !this.isViewFinished(b[h])) return b[h]
                } else {
                    var i = a.first.id - 2;
                    if (b[i] && !this.isViewFinished(b[i])) return b[i]
                }
                return null
            },
            isViewFinished: function(a) {
                return a.renderingState === e.FINISHED
            },
            renderView: function(a) {
                var b = a.renderingState;
                switch (b) {
                case e.FINISHED:
                    return ! 1;
                case e.PAUSED:
                    this.highestPriorityPage = a.renderingId,
                    a.resume();
                    break;
                case e.RUNNING:
                    this.highestPriorityPage = a.renderingId;
                    break;
                case e.INITIAL:
                    this.highestPriorityPage = a.renderingId;
                    var c = function() {
                        this.renderHighestPriority()
                    }.bind(this);
                    a.draw().then(c, c)
                }
                return ! 0
            }
        },
        a
    } ();
    b.RenderingStates = e,
    b.PDFRenderingQueue = f
},
function(a, b, c) {
    var d = {
        overlays: {},
        active: null,
        register: function(a, b, c, d) {
            return new Promise(function(e) {
                var f;
                if (! (a && b && (f = b.parentNode))) throw new Error("Not enough parameters.");
                if (this.overlays[a]) throw new Error("The overlay is already registered.");
                this.overlays[a] = {
                    element: b,
                    container: f,
                    callerCloseMethod: c || null,
                    canForceClose: d || !1
                },
                e()
            }.bind(this))
        },
        unregister: function(a) {
            return new Promise(function(b) {
                if (!this.overlays[a]) throw new Error("The overlay does not exist.");
                if (this.active === a) throw new Error("The overlay cannot be removed while it is active.");
                delete this.overlays[a],
                b()
            }.bind(this))
        },
        open: function(a) {
            return new Promise(function(b) {
                if (!this.overlays[a]) throw new Error("The overlay does not exist.");
                if (this.active) {
                    if (!this.overlays[a].canForceClose) throw this.active === a ? new Error("The overlay is already active.") : new Error("Another overlay is currently active.");
                    this._closeThroughCaller()
                }
                this.active = a,
                this.overlays[this.active].element.classList.remove("hidden"),
                this.overlays[this.active].container.classList.remove("hidden"),
                window.addEventListener("keydown", this._keyDown),
                b()
            }.bind(this))
        },
        close: function(a) {
            return new Promise(function(b) {
                if (!this.overlays[a]) throw new Error("The overlay does not exist.");
                if (!this.active) throw new Error("The overlay is currently not active.");
                if (this.active !== a) throw new Error("Another overlay is currently active.");
                this.overlays[this.active].container.classList.add("hidden"),
                this.overlays[this.active].element.classList.add("hidden"),
                this.active = null,
                window.removeEventListener("keydown", this._keyDown),
                b()
            }.bind(this))
        },
        _keyDown: function(a) {
            var b = d;
            b.active && 27 === a.keyCode && (b._closeThroughCaller(), a.preventDefault())
        },
        _closeThroughCaller: function() {
            this.overlays[this.active].callerCloseMethod && this.overlays[this.active].callerCloseMethod(),
            this.active && this.close(this.active)
        }
    };
    b.OverlayManager = d
},
function(a, b, c) {
    function d(a) {
        return h.test(a)
    }
    var e = c(0),
    f = c(2),
    g = e.parseQueryString,
    h = /^\d+$/,
    i = function() {
        function a(a) {
            a = a || {},
            this.eventBus = a.eventBus || f.getGlobalEventBus(),
            this.baseUrl = null,
            this.pdfDocument = null,
            this.pdfViewer = null,
            this.pdfHistory = null,
            this._pagesRefCache = null
        }
        function b(a) {
            if (! (a instanceof Array)) return ! 1;
            var b = a.length,
            c = !0;
            if (b < 2) return ! 1;
            var d = a[0];
            if (! ("object" == typeof d && "number" == typeof d.num && (0 | d.num) === d.num && "number" == typeof d.gen && (0 | d.gen) === d.gen || "number" == typeof d && (0 | d) === d && d >= 0)) return ! 1;
            var e = a[1];
            if ("object" != typeof e || "string" != typeof e.name) return ! 1;
            switch (e.name) {
            case "XYZ":
                if (5 !== b) return ! 1;
                break;
            case "Fit":
            case "FitB":
                return 2 === b;
            case "FitH":
            case "FitBH":
            case "FitV":
            case "FitBV":
                if (3 !== b) return ! 1;
                break;
            case "FitR":
                if (6 !== b) return ! 1;
                c = !1;
                break;
            default:
                return ! 1
            }
            for (var f = 2; f < b; f++) {
                var g = a[f];
                if (! ("number" == typeof g || c && null === g)) return ! 1
            }
            return ! 0
        }
        return a.prototype = {
            setDocument: function(a, b) {
                this.baseUrl = b,
                this.pdfDocument = a,
                this._pagesRefCache = Object.create(null)
            },
            setViewer: function(a) {
                this.pdfViewer = a
            },
            setHistory: function(a) {
                this.pdfHistory = a
            },
            get pagesCount() {
                return this.pdfDocument ? this.pdfDocument.numPages: 0
            },
            get page() {
                return this.pdfViewer.currentPageNumber
            },
            set page(a) {
                this.pdfViewer.currentPageNumber = a
            },
            navigateTo: function(a) {
                var b, c = "",
                d = this,
                e = function(b) {
                    var f;
                    if (b instanceof Object) f = d._cachedPageNumber(b);
                    else {
                        if ((0 | b) !== b) return void console.error('PDFLinkService_navigateTo: "' + b + '" is not a valid destination reference.');
                        f = b + 1
                    }
                    if (f) {
                        if (f < 1 || f > d.pagesCount) return void console.error('PDFLinkService_navigateTo: "' + f + '" is a non-existent page number.');
                        d.pdfViewer.scrollPageIntoView({
                            pageNumber: f,
                            destArray: a
                        }),
                        d.pdfHistory && d.pdfHistory.push({
                            dest: a,
                            hash: c,
                            page: f
                        })
                    } else d.pdfDocument.getPageIndex(b).then(function(a) {
                        d.cachePageRef(a + 1, b),
                        e(b)
                    }).
                    catch(function() {
                        console.error('PDFLinkService_navigateTo: "' + b + '" is not a valid page reference.')
                    })
                };
                "string" == typeof a ? (c = a, b = this.pdfDocument.getDestination(a)) : b = Promise.resolve(a),
                b.then(function(b) {
                    return a = b,
                    b instanceof Array ? void e(b[0]) : void console.error('PDFLinkService_navigateTo: "' + b + '" is not a valid destination array.')
                })
            },
            getDestinationHash: function(a) {
                if ("string" == typeof a) return this.getAnchorUrl("#" + (d(a) ? "nameddest=": "") + escape(a));
                if (a instanceof Array) {
                    var b = JSON.stringify(a);
                    return this.getAnchorUrl("#" + escape(b))
                }
                return this.getAnchorUrl("")
            },
            getAnchorUrl: function(a) {
                return (this.baseUrl || "") + a
            },
            setHash: function(a) {
                var c, e;
                if (a.indexOf("=") >= 0) {
                    var f = g(a);
                    if ("search" in f && this.eventBus.dispatch("findfromurlhash", {
                        source: this,
                        query: f.search.replace(/"/g, ""),
                        phraseSearch: "true" === f.phrase
                    }), "nameddest" in f) return this.pdfHistory && this.pdfHistory.updateNextHashParam(f.nameddest),
                    void this.navigateTo(f.nameddest);
                    if ("page" in f && (c = 0 | f.page || 1), "zoom" in f) {
                        var h = f.zoom.split(","),
                        i = h[0],
                        j = parseFloat(i);
                        i.indexOf("Fit") === -1 ? e = [null, {
                            name: "XYZ"
                        },
                        h.length > 1 ? 0 | h[1] : null, h.length > 2 ? 0 | h[2] : null, j ? j / 100 : i] : "Fit" === i || "FitB" === i ? e = [null, {
                            name: i
                        }] : "FitH" === i || "FitBH" === i || "FitV" === i || "FitBV" === i ? e = [null, {
                            name: i
                        },
                        h.length > 1 ? 0 | h[1] : null] : "FitR" === i ? 5 !== h.length ? console.error("PDFLinkService_setHash: Not enough parameters for 'FitR'.") : e = [null, {
                            name: i
                        },
                        0 | h[1], 0 | h[2], 0 | h[3], 0 | h[4]] : console.error("PDFLinkService_setHash: '" + i + "' is not a valid zoom value.")
                    }
                    e ? this.pdfViewer.scrollPageIntoView({
                        pageNumber: c || this.page,
                        destArray: e,
                        allowNegativeOffset: !0
                    }) : c && (this.page = c),
                    "pagemode" in f && this.eventBus.dispatch("pagemode", {
                        source: this,
                        mode: f.pagemode
                    })
                } else {
                    d(a) && a <= this.pagesCount && (console.warn('PDFLinkService_setHash: specifying a page number directly after the hash symbol (#) is deprecated, please use the "#page=' + a + '" form instead.'), this.page = 0 | a),
                    e = unescape(a);
                    try {
                        e = JSON.parse(e),
                        e instanceof Array || (e = e.toString())
                    } catch(k) {}
                    if ("string" == typeof e || b(e)) return this.pdfHistory && this.pdfHistory.updateNextHashParam(e),
                    void this.navigateTo(e);
                    console.error("PDFLinkService_setHash: '" + unescape(a) + "' is not a valid destination.")
                }
            },
            executeNamedAction: function(a) {
                switch (a) {
                case "GoBack":
                    this.pdfHistory && this.pdfHistory.back();
                    break;
                case "GoForward":
                    this.pdfHistory && this.pdfHistory.forward();
                    break;
                case "NextPage":
                    this.page < this.pagesCount && this.page++;
                    break;
                case "PrevPage":
                    this.page > 1 && this.page--;
                    break;
                case "LastPage":
                    this.page = this.pagesCount;
                    break;
                case "FirstPage":
                    this.page = 1
                }
                this.eventBus.dispatch("namedaction", {
                    source: this,
                    action: a
                })
            },
            onFileAttachmentAnnotation: function(a) {
                this.eventBus.dispatch("fileattachmentannotation", {
                    source: this,
                    id: a.id,
                    filename: a.filename,
                    content: a.content
                })
            },
            cachePageRef: function(a, b) {
                var c = b.num + " " + b.gen + " R";
                this._pagesRefCache[c] = a
            },
            _cachedPageNumber: function(a) {
                var b = a.num + " " + a.gen + " R";
                return this._pagesRefCache && this._pagesRefCache[b] || null
            }
        },
        a
    } (),
    j = function() {
        function a() {}
        return a.prototype = {
            get page() {
                return 0
            },
            set page(a) {},
            navigateTo: function(a) {},
            getDestinationHash: function(a) {
                return "#"
            },
            getAnchorUrl: function(a) {
                return "#"
            },
            setHash: function(a) {},
            executeNamedAction: function(a) {},
            onFileAttachmentAnnotation: function(a) {},
            cachePageRef: function(a, b) {}
        },
        a
    } ();
    b.PDFLinkService = i,
    b.SimpleLinkService = j
},
function(a, b, c) {
    function d(a) {
        a.imageResourcesPath = "./images/",
        a.workerSrc = "pdf.worker.js",
        a.cMapUrl = "../web/cmaps/",
        a.cMapPacked = !0
    }
    function e(a) {
        return new Promise(function(b, c) {
            var d = Ua.appConfig,
            e = document.createElement("script");
            e.src = d.debuggerScriptPath,
            e.onload = function() {
                PDFBug.enable(a),
                PDFBug.init(ga, d.mainContainer),
                b()
            },
            e.onerror = function() {
                c(new Error("Cannot load debugger at " + e.src))
            },
            (document.getElementsByTagName("head")[0] || document.body).appendChild(e)
        })
    }
    function f() {
        var a, b = Ua.appConfig,
        c = document.location.search.substring(1),
        d = pa(c);
        a = "file" in d ? d.file: b.defaultUrl,
        L(a);
        var f = [],
        g = document.createElement("input");
        g.id = b.openFileInputName,
        g.className = "fileInput",
        g.setAttribute("type", "file"),
        g.oncontextmenu = na,
        document.body.appendChild(g),
        window.File && window.FileReader && window.FileList && window.Blob ? g.value = null: (b.toolbar.openFile.setAttribute("hidden", "true"), b.secondaryToolbar.openFileButton.setAttribute("hidden", "true"));
        var h = ga.PDFJS;
        if (Ua.viewerPrefs.pdfBugEnabled) {
            var i = document.location.hash.substring(1),
            j = pa(i);
            if ("disableworker" in j && (h.disableWorker = "true" === j.disableworker), "disablerange" in j && (h.disableRange = "true" === j.disablerange), "disablestream" in j && (h.disableStream = "true" === j.disablestream), "disableautofetch" in j && (h.disableAutoFetch = "true" === j.disableautofetch), "disablefontface" in j && (h.disableFontFace = "true" === j.disablefontface), "disablehistory" in j && (h.disableHistory = "true" === j.disablehistory), "webgl" in j && (h.disableWebGL = "true" !== j.webgl), "useonlycsszoom" in j && (h.useOnlyCssZoom = "true" === j.useonlycsszoom), "verbosity" in j && (h.verbosity = 0 | j.verbosity), "ignorecurrentpositiononzoom" in j && (h.ignoreCurrentPositionOnZoom = "true" === j.ignorecurrentpositiononzoom), "locale" in j && (h.locale = j.locale), "textlayer" in j) switch (j.textlayer) {
            case "off":
                h.disableTextLayer = !0;
                break;
            case "visible":
            case "shadow":
            case "hover":
                var k = b.viewerContainer;
                k.classList.add("textLayer-" + j.textlayer)
            }
            if ("pdfbug" in j) {
                h.pdfBug = !0;
                var l = j.pdfbug,
                m = l.split(",");
                f.push(e(m))
            }
        }
        oa.setLanguage(h.locale),
        Ua.supportsPrinting || (b.toolbar.print.classList.add("hidden"), b.secondaryToolbar.printButton.classList.add("hidden")),
        Ua.supportsFullscreen || (b.toolbar.presentationModeButton.classList.add("hidden"), b.secondaryToolbar.presentationModeButton.classList.add("hidden")),
        Ua.supportsIntegratedFind && b.toolbar.viewFind.classList.add("hidden"),
        b.sidebar.mainContainer.addEventListener("transitionend",
        function(a) {
            a.target === this && Ua.eventBus.dispatch("resize")
        },
        !0),
        b.sidebar.toggleButton.addEventListener("click",
        function() {
            Ua.pdfSidebar.toggle()
        }),
        Promise.all(f).then(function() {
            Va(a)
        }).
        catch(function(a) {
            Ua.error(oa.get("loading_error", null, "An error occurred while opening."), a)
        })
    }
    function g(a) {
        var b = a.pageNumber,
        c = b - 1,
        d = Ua.pdfViewer.getPageView(c);
        if (b === Ua.page && Ua.toolbar.updateLoadingIndicatorState(!1), d) {
            if (Ua.pdfSidebar.isThumbnailViewVisible) {
                var e = Ua.pdfThumbnailViewer.getThumbnail(c);
                e.setImage(d)
            }
            ga.PDFJS.pdfBug && Stats.enabled && d.stats && Stats.add(b, d.stats),
            d.error && Ua.error(oa.get("rendering_error", null, "An error occurred while rendering the page."), d.error)
        }
    }
    function h(a) {}
    function i(a) {
        var b, c = a.mode;
        switch (c) {
        case "thumbs":
            b = sa.THUMBS;
            break;
        case "bookmarks":
        case "outline":
            b = sa.OUTLINE;
            break;
        case "attachments":
            b = sa.ATTACHMENTS;
            break;
        case "none":
            b = sa.NONE;
            break;
        default:
            return void console.error('Invalid "pagemode" hash parameter: ' + c)
        }
        Ua.pdfSidebar.switchView(b, !0)
    }
    function j(a) {
        var b = a.action;
        switch (b) {
        case "GoToPage":
            Ua.appConfig.toolbar.pageNumber.select();
            break;
        case "Find":
            Ua.supportsIntegratedFind || Ua.findBar.toggle()
        }
    }
    function k(a) {
        var b = a.active,
        c = a.switchInProgress;
        Ua.pdfViewer.presentationModeState = c ? Ca.CHANGING: b ? Ca.FULLSCREEN: Ca.NORMAL
    }
    function l(a) {
        Ua.pdfRenderingQueue.isThumbnailViewEnabled = Ua.pdfSidebar.isThumbnailViewVisible;
        var b = Ua.store;
        b && Ua.isInitialViewSet && b.initializedPromise.then(function() {
            b.set("sidebarView", a.view).
            catch(function() {})
        })
    }
    function m(a) {
        var b = a.location,
        c = Ua.store;
        c && c.initializedPromise.then(function() {
            c.setMultiple({
                exists: !0,
                page: b.pageNumber,
                zoom: b.scale,
                scrollLeft: b.left,
                scrollTop: b.top
            }).
            catch(function() {})
        });
        var d = Ua.pdfLinkService.getAnchorUrl(b.pdfOpenParams);
        Ua.appConfig.toolbar.viewBookmark.href = d,
        Ua.appConfig.secondaryToolbar.viewBookmarkButton.href = d,
        Ua.pdfHistory.updateCurrentBookmark(b.pdfOpenParams, b.pageNumber);
        var e = Ua.pdfViewer.getPageView(Ua.page - 1),
        f = e.renderingState !== Ea.FINISHED;
        Ua.toolbar.updateLoadingIndicatorState(f)
    }
    function n() {
        var a = Ua.pdfViewer.currentScaleValue;
        "auto" === a || "page-fit" === a || "page-width" === a ? Ua.pdfViewer.currentScaleValue = a: a || (Ua.pdfViewer.currentScaleValue = ia),
        Ua.pdfViewer.update()
    }
    function o(a) {
        if (Ua.pdfHistory.isHashChangeUnlocked) {
            var b = a.hash;
            if (!b) return;
            Ua.isInitialViewSet ? Ua.pdfLinkService.setHash(b) : Ua.initialBookmark = b
        }
    }
    function p() {
        Ua.requestPresentationMode()
    }
    function q() {
        var a = Ua.appConfig.openFileInputName;
        document.getElementById(a).click()
    }
    function r() {
        window.print()
    }
    function s() {
        Ua.download()
    }
    function t() {
        Ua.pdfDocument && (Ua.page = 1)
    }
    function u() {
        Ua.pdfDocument && (Ua.page = Ua.pagesCount)
    }
    function v() {
        Ua.page++
    }
    function w() {
        Ua.page--
    }
    function x() {
        Ua.zoomIn()
    }
    function y() {
        Ua.zoomOut()
    }
    function z(a) {
        var b = Ua.pdfViewer;
        b.currentPageLabel = a.value,
        a.value !== b.currentPageNumber.toString() && a.value !== b.currentPageLabel && Ua.toolbar.setPageNumber(b.currentPageNumber, b.currentPageLabel)
    }
    function A(a) {
        Ua.pdfViewer.currentScaleValue = a.value
    }
    function B() {
        Ua.rotatePages(90)
    }
    function C() {
        Ua.rotatePages( - 90)
    }
    function D() {
        Ua.pdfDocumentProperties.open()
    }
    function E(a) {
        Ua.findController.executeCommand("find" + a.type, {
            query: a.query,
            phraseSearch: a.phraseSearch,
            caseSensitive: a.caseSensitive,
            highlightAll: a.highlightAll,
            findPrevious: a.findPrevious
        })
    }
    function F(a) {
        Ua.findController.executeCommand("find", {
            query: a.query,
            phraseSearch: a.phraseSearch,
            caseSensitive: !1,
            highlightAll: !0,
            findPrevious: !1
        })
    }
    function G(a) {
        Ua.toolbar.setPageScale(a.presetValue, a.scale),
        Ua.pdfViewer.update()
    }
    function H(a) {
        var b = a.pageNumber;
        if (Ua.toolbar.setPageNumber(b, a.pageLabel || null), Ua.secondaryToolbar.setPageNumber(b), Ua.pdfSidebar.isThumbnailViewVisible && Ua.pdfThumbnailViewer.scrollThumbnailIntoView(b), ga.PDFJS.pdfBug && Stats.enabled) {
            var c = Ua.pdfViewer.getPageView(b - 1);
            c.stats && Stats.add(b, c.stats)
        }
    }
    function I(a) {
        var b = Ua.pdfViewer;
        if (!b.isInPresentationMode) if (a.ctrlKey || a.metaKey) {
            var c = Ua.supportedMouseWheelZoomModifierKeys;
            if (a.ctrlKey && !c.ctrlKey || a.metaKey && !c.metaKey) return;
            if (a.preventDefault(), Ya) return;
            var d = b.currentScale,
            e = Na(a),
            f = 3,
            g = e * f;
            g < 0 ? Ua.zoomOut( - g) : Ua.zoomIn(g);
            var h = b.currentScale;
            if (d !== h) {
                var i = h / d - 1,
                j = b.container.getBoundingClientRect(),
                k = a.clientX - j.left,
                l = a.clientY - j.top;
                b.container.scrollLeft += k * i,
                b.container.scrollTop += l * i
            }
        } else Ya = !0,
        clearTimeout(Xa),
        Xa = setTimeout(function() {
            Ya = !1
        },
        1e3)
    }
    function J(a) {
        if (Ua.secondaryToolbar.isOpen) {
            var b = Ua.appConfig; (Ua.pdfViewer.containsElement(a.target) || b.toolbar.container.contains(a.target) && a.target !== b.secondaryToolbar.toggleButton) && Ua.secondaryToolbar.close()
        }
    }
    function K(a) {
        if (!Ia.active) {
            var b = !1,
            c = !1,
            d = (a.ctrlKey ? 1 : 0) | (a.altKey ? 2 : 0) | (a.shiftKey ? 4 : 0) | (a.metaKey ? 8 : 0),
            e = Ua.pdfViewer,
            f = e && e.isInPresentationMode;
            if (1 === d || 8 === d || 5 === d || 12 === d) switch (a.keyCode) {
            case 70:
                Ua.supportsIntegratedFind || (Ua.findBar.open(), b = !0);
                break;
            case 71:
                if (!Ua.supportsIntegratedFind) {
                    var g = Ua.findController.state;
                    g && Ua.findController.executeCommand("findagain", {
                        query: g.query,
                        phraseSearch: g.phraseSearch,
                        caseSensitive: g.caseSensitive,
                        highlightAll: g.highlightAll,
                        findPrevious: 5 === d || 12 === d
                    }),
                    b = !0
                }
                break;
            case 61:
            case 107:
            case 187:
            case 171:
                f || Ua.zoomIn(),
                b = !0;
                break;
            case 173:
            case 109:
            case 189:
                f || Ua.zoomOut(),
                b = !0;
                break;
            case 48:
            case 96:
                f || (setTimeout(function() {
                    e.currentScaleValue = ia
                }), b = !1);
                break;
            case 38:
                (f || Ua.page > 1) && (Ua.page = 1, b = !0, c = !0);
                break;
            case 40:
                (f || Ua.page < Ua.pagesCount) && (Ua.page = Ua.pagesCount, b = !0, c = !0)
            }
            if (1 === d || 8 === d) switch (a.keyCode) {
            case 83:
                Ua.download(),
                b = !0
            }
            if (3 === d || 10 === d) switch (a.keyCode) {
            case 80:
                Ua.requestPresentationMode(),
                b = !0;
                break;
            case 71:
                Ua.appConfig.toolbar.pageNumber.select(),
                b = !0
            }
            if (b) return c && !f && e.focus(),
            void a.preventDefault();
            var h = document.activeElement || document.querySelector(":focus"),
            i = h && h.tagName.toUpperCase();
            if ("INPUT" !== i && "TEXTAREA" !== i && "SELECT" !== i || 27 === a.keyCode) {
                if (0 === d) switch (a.keyCode) {
                case 38:
                case 33:
                case 8:
                    if (!f && "page-fit" !== e.currentScaleValue) break;
                case 37:
                    if (e.isHorizontalScrollbarEnabled) break;
                case 75:
                case 80:
                    Ua.page > 1 && Ua.page--,
                    b = !0;
                    break;
                case 27:
                    Ua.secondaryToolbar.isOpen && (Ua.secondaryToolbar.close(), b = !0),
                    !Ua.supportsIntegratedFind && Ua.findBar.opened && (Ua.findBar.close(), b = !0);
                    break;
                case 40:
                case 34:
                case 32:
                    if (!f && "page-fit" !== e.currentScaleValue) break;
                case 39:
                    if (e.isHorizontalScrollbarEnabled) break;
                case 74:
                case 78:
                    Ua.page < Ua.pagesCount && Ua.page++,
                    b = !0;
                    break;
                case 36:
                    (f || Ua.page > 1) && (Ua.page = 1, b = !0, c = !0);
                    break;
                case 35:
                    (f || Ua.page < Ua.pagesCount) && (Ua.page = Ua.pagesCount, b = !0, c = !0);
                    break;
                case 72:
                    f || Ua.handTool.toggle();
                    break;
                case 82:
                    Ua.rotatePages(90)
                }
                if (4 === d) switch (a.keyCode) {
                case 32:
                    if (!f && "page-fit" !== e.currentScaleValue) break;
                    Ua.page > 1 && Ua.page--,
                    b = !0;
                    break;
                case 82:
                    Ua.rotatePages( - 90)
                }
                if (b || f || (a.keyCode >= 33 && a.keyCode <= 40 || 32 === a.keyCode && "BUTTON" !== i) && (c = !0), 2 === d) switch (a.keyCode) {
                case 37:
                    f && (Ua.pdfHistory.back(), b = !0);
                    break;
                case 39:
                    f && (Ua.pdfHistory.forward(), b = !0)
                }
                c && !e.containsElement(h) && e.focus(),
                b && a.preventDefault()
            }
        }
    }
    var L, M = c(0),
    N = c(11),
    O = c(18),
    P = c(8),
    Q = c(22),
    R = c(29),
    S = c(24),
    T = c(28),
    U = c(26),
    V = c(14),
    W = c(21),
    X = c(16),
    Y = c(13),
    Z = c(25),
    $ = c(3),
    _ = c(5),
    aa = c(19),
    ba = c(4),
    ca = c(15),
    da = c(7),
    ea = c(17),
    fa = c(2),
    ga = c(1),
    ha = M.UNKNOWN_SCALE,
    ia = M.DEFAULT_SCALE_VALUE,
    ja = M.MIN_SCALE,
    ka = M.MAX_SCALE,
    la = M.ProgressBar,
    ma = M.getPDFFileNameFromURL,
    na = M.noContextMenuHandler,
    oa = M.mozL10n,
    pa = M.parseQueryString,
    qa = O.PDFHistory,
    ra = P.Preferences,
    sa = Q.SidebarView,
    ta = Q.PDFSidebar,
    ua = R.ViewHistory,
    va = S.PDFThumbnailViewer,
    wa = T.Toolbar,
    xa = U.SecondaryToolbar,
    ya = V.PasswordPrompt,
    za = W.PDFPresentationMode,
    Aa = X.PDFDocumentProperties,
    Ba = Y.HandTool,
    Ca = Z.PresentationModeState,
    Da = Z.PDFViewer,
    Ea = $.RenderingStates,
    Fa = $.PDFRenderingQueue,
    Ga = _.PDFLinkService,
    Ha = aa.PDFOutlineViewer,
    Ia = ba.OverlayManager,
    Ja = ca.PDFAttachmentViewer,
    Ka = da.PDFFindController,
    La = ea.PDFFindBar,
    Ma = fa.getGlobalEventBus,
    Na = M.normalizeWheelEventDelta,
    Oa = M.animationStarted,
    Pa = M.localized,
    Qa = M.RendererType,
    Ra = 1.1,
    Sa = 5e3,
    Ta = {
        updateFindControlState: function(a) {},
        initPassiveLoading: function(a) {},
        fallback: function(a, b) {},
        reportTelemetry: function(a) {},
        createDownloadManager: function() {
            return new N.DownloadManager
        },
        supportsIntegratedFind: !1,
        supportsDocumentFonts: !0,
        supportsDocumentColors: !0,
        supportedMouseWheelZoomModifierKeys: {
            ctrlKey: !0,
            metaKey: !0
        }
    },
    Ua = {
        initialBookmark: document.location.hash.substring(1),
        initialDestination: null,
        initialized: !1,
        fellback: !1,
        appConfig: null,
        pdfDocument: null,
        pdfLoadingTask: null,
        printService: null,
        pdfViewer: null,
        pdfThumbnailViewer: null,
        pdfRenderingQueue: null,
        pdfPresentationMode: null,
        pdfDocumentProperties: null,
        pdfLinkService: null,
        pdfHistory: null,
        pdfSidebar: null,
        pdfOutlineViewer: null,
        pdfAttachmentViewer: null,
        store: null,
        downloadManager: null,
        toolbar: null,
        secondaryToolbar: null,
        eventBus: null,
        pageRotation: 0,
        isInitialViewSet: !1,
        viewerPrefs: {
            sidebarViewOnLoad: sa.NONE,
            pdfBugEnabled: !1,
            showPreviousViewOnLoad: !0,
            defaultZoomValue: "",
            disablePageLabels: !1,
            renderer: "canvas",
            enhanceTextSelection: !1,
            renderInteractiveForms: !1,
            enablePrintAutoRotate: !1
        },
        isViewerEmbedded: window.parent !== window,
        url: "",
        baseUrl: "",
        externalServices: Ta,
        initialize: function(a) {
            var b = this,
            c = ga.PDFJS;
            return ra.initialize(),
            this.preferences = ra,
            d(c),
            this.appConfig = a,
            this._readPreferences().then(function() {
                return b._initializeViewerComponents()
            }).then(function() {
                b.bindEvents(),
                b.bindWindowEvents(),
                Pa.then(function() {
                    b.eventBus.dispatch("localized")
                }),
                b.isViewerEmbedded && !c.isExternalLinkTargetSet() && (c.externalLinkTarget = c.LinkTarget.TOP),
                b.initialized = !0
            })
        },
        _readPreferences: function() {
            var a = this,
            b = ga.PDFJS;
            return Promise.all([ra.get("enableWebGL").then(function(a) {
                b.disableWebGL = !a
            }), ra.get("sidebarViewOnLoad").then(function(b) {
                a.viewerPrefs.sidebarViewOnLoad = b
            }), ra.get("pdfBugEnabled").then(function(b) {
                a.viewerPrefs.pdfBugEnabled = b
            }), ra.get("showPreviousViewOnLoad").then(function(b) {
                a.viewerPrefs.showPreviousViewOnLoad = b
            }), ra.get("defaultZoomValue").then(function(b) {
                a.viewerPrefs.defaultZoomValue = b
            }), ra.get("enhanceTextSelection").then(function(b) {
                a.viewerPrefs.enhanceTextSelection = b
            }), ra.get("disableTextLayer").then(function(a) {
                b.disableTextLayer !== !0 && (b.disableTextLayer = a)
            }), ra.get("disableRange").then(function(a) {
                b.disableRange !== !0 && (b.disableRange = a)
            }), ra.get("disableStream").then(function(a) {
                b.disableStream !== !0 && (b.disableStream = a)
            }), ra.get("disableAutoFetch").then(function(a) {
                b.disableAutoFetch = a
            }), ra.get("disableFontFace").then(function(a) {
                b.disableFontFace !== !0 && (b.disableFontFace = a)
            }), ra.get("useOnlyCssZoom").then(function(a) {
                b.useOnlyCssZoom = a
            }), ra.get("externalLinkTarget").then(function(a) {
                b.isExternalLinkTargetSet() || (b.externalLinkTarget = a)
            }), ra.get("renderer").then(function(b) {
                a.viewerPrefs.renderer = b
            }), ra.get("renderInteractiveForms").then(function(b) {
                a.viewerPrefs.renderInteractiveForms = b
            }), ra.get("disablePageLabels").then(function(b) {
                a.viewerPrefs.disablePageLabels = b
            }), ra.get("enablePrintAutoRotate").then(function(b) {
                a.viewerPrefs.enablePrintAutoRotate = b
            })]).
            catch(function(a) {})
        },
        _initializeViewerComponents: function() {
            var a = this,
            b = this.appConfig;
            return new Promise(function(c, d) {
                var e = b.eventBus || Ma();
                a.eventBus = e;
                var f = new Fa;
                f.onIdle = a.cleanup.bind(a),
                a.pdfRenderingQueue = f;
                var g = new Ga({
                    eventBus: e
                });
                a.pdfLinkService = g;
                var h = a.externalServices.createDownloadManager();
                a.downloadManager = h;
                var i = b.mainContainer,
                j = b.viewerContainer;
                a.pdfViewer = new Da({
                    container: i,
                    viewer: j,
                    eventBus: e,
                    renderingQueue: f,
                    linkService: g,
                    downloadManager: h,
                    renderer: a.viewerPrefs.renderer,
                    enhanceTextSelection: a.viewerPrefs.enhanceTextSelection,
                    renderInteractiveForms: a.viewerPrefs.renderInteractiveForms,
                    enablePrintAutoRotate: a.viewerPrefs.enablePrintAutoRotate
                }),
                f.setViewer(a.pdfViewer),
                g.setViewer(a.pdfViewer);
                var k = b.sidebar.thumbnailView;
                a.pdfThumbnailViewer = new va({
                    container: k,
                    renderingQueue: f,
                    linkService: g
                }),
                f.setThumbnailViewer(a.pdfThumbnailViewer),
                a.pdfHistory = new qa({
                    linkService: g,
                    eventBus: e
                }),
                g.setHistory(a.pdfHistory),
                a.findController = new Ka({
                    pdfViewer: a.pdfViewer
                }),
                a.findController.onUpdateResultsCount = function(b) {
                    a.supportsIntegratedFind || a.findBar.updateResultsCount(b)
                },
                a.findController.onUpdateState = function(b, c, d) {
                    a.supportsIntegratedFind ? a.externalServices.updateFindControlState({
                        result: b,
                        findPrevious: c
                    }) : a.findBar.updateUIState(b, c, d)
                },
                a.pdfViewer.setFindController(a.findController);
                var l = Object.create(b.findBar);
                l.findController = a.findController,
                l.eventBus = e,
                a.findBar = new La(l),
                a.overlayManager = Ia,
                a.handTool = new Ba({
                    container: i,
                    eventBus: e
                }),
                a.pdfDocumentProperties = new Aa(b.documentProperties),
                a.toolbar = new wa(b.toolbar, i, e),
                a.secondaryToolbar = new xa(b.secondaryToolbar, i, e),
                a.supportsFullscreen && (a.pdfPresentationMode = new za({
                    container: i,
                    viewer: j,
                    pdfViewer: a.pdfViewer,
                    eventBus: e,
                    contextMenuItems: b.fullscreen
                })),
                a.passwordPrompt = new ya(b.passwordOverlay),
                a.pdfOutlineViewer = new Ha({
                    container: b.sidebar.outlineView,
                    eventBus: e,
                    linkService: g
                }),
                a.pdfAttachmentViewer = new Ja({
                    container: b.sidebar.attachmentsView,
                    eventBus: e,
                    downloadManager: h
                });
                var m = Object.create(b.sidebar);
                m.pdfViewer = a.pdfViewer,
                m.pdfThumbnailViewer = a.pdfThumbnailViewer,
                m.pdfOutlineViewer = a.pdfOutlineViewer,
                m.eventBus = e,
                a.pdfSidebar = new ta(m),
                a.pdfSidebar.onToggled = a.forceRendering.bind(a),
                c(void 0)
            })
        },
        run: function(a) {
            this.initialize(a).then(f)
        },
        zoomIn: function(a) {
            var b = this.pdfViewer.currentScale;
            do b = (b * Ra).toFixed(2),
            b = Math.ceil(10 * b) / 10,
            b = Math.min(ka, b);
            while (--a > 0 && b < ka);
            this.pdfViewer.currentScaleValue = b
        },
        zoomOut: function(a) {
            var b = this.pdfViewer.currentScale;
            do b = (b / Ra).toFixed(2),
            b = Math.floor(10 * b) / 10,
            b = Math.max(ja, b);
            while (--a > 0 && b > ja);
            this.pdfViewer.currentScaleValue = b
        },
        get pagesCount() {
            return this.pdfDocument ? this.pdfDocument.numPages: 0
        },
        set page(a) {
            this.pdfViewer.currentPageNumber = a
        },
        get page() {
            return this.pdfViewer.currentPageNumber
        },
        get printing() {
            return !! this.printService
        },
        get supportsPrinting() {
            return Za.instance.supportsPrinting
        },
        get supportsFullscreen() {
            var a, b = document.documentElement;
            return a = !!(b.requestFullscreen || b.mozRequestFullScreen || b.webkitRequestFullScreen || b.msRequestFullscreen),
            document.fullscreenEnabled !== !1 && document.mozFullScreenEnabled !== !1 && document.webkitFullscreenEnabled !== !1 && document.msFullscreenEnabled !== !1 || (a = !1),
            a && ga.PDFJS.disableFullscreen === !0 && (a = !1),
            ga.shadow(this, "supportsFullscreen", a)
        },
        get supportsIntegratedFind() {
            return this.externalServices.supportsIntegratedFind
        },
        get supportsDocumentFonts() {
            return this.externalServices.supportsDocumentFonts
        },
        get supportsDocumentColors() {
            return this.externalServices.supportsDocumentColors
        },
        get loadingBar() {
            var a = new la("#loadingBar", {});
            return ga.shadow(this, "loadingBar", a)
        },
        get supportedMouseWheelZoomModifierKeys() {
            return this.externalServices.supportedMouseWheelZoomModifierKeys
        },
        initPassiveLoading: function() {
            throw new Error("Not implemented: initPassiveLoading")
        },
        setTitleUsingUrl: function(a) {
            this.url = a,
            this.baseUrl = a.split("#")[0];
            var b = ma(a, "");
            if (!b) try {
                b = decodeURIComponent(ga.getFilenameFromUrl(a)) || a
            } catch(c) {
                b = a
            }
            this.setTitle(b)
        },
        setTitle: function(a) {
            this.isViewerEmbedded || (document.title = a)
        },
        close: function() {
            var a = this.appConfig.errorWrapper.container;
            if (a.setAttribute("hidden", "true"), !this.pdfLoadingTask) return Promise.resolve();
            var b = this.pdfLoadingTask.destroy();
            return this.pdfLoadingTask = null,
            this.pdfDocument && (this.pdfDocument = null, this.pdfThumbnailViewer.setDocument(null), this.pdfViewer.setDocument(null), this.pdfLinkService.setDocument(null, null)),
            this.store = null,
            this.isInitialViewSet = !1,
            this.pdfSidebar.reset(),
            this.pdfOutlineViewer.reset(),
            this.pdfAttachmentViewer.reset(),
            this.findController.reset(),
            this.findBar.reset(),
            this.toolbar.reset(),
            this.secondaryToolbar.reset(),
            "undefined" != typeof PDFBug && PDFBug.cleanup(),
            b
        },
        open: function(a, b) {
            if (arguments.length > 2 || "number" == typeof b) return Promise.reject(new Error("Call of open() with obsolete signature."));
            if (this.pdfLoadingTask) return this.close().then(function() {
                return ra.reload(),
                this.open(a, b)
            }.bind(this));
            var c, d = Object.create(null);
            if ("string" == typeof a ? (this.setTitleUsingUrl(a), d.url = a) : a && "byteLength" in a ? d.data = a: a.url && a.originalUrl && (this.setTitleUsingUrl(a.originalUrl), d.url = a.url), b) {
                for (var e in b) d[e] = b[e];
                b.scale && (c = b.scale),
                b.length && this.pdfDocumentProperties.setFileSize(b.length)
            }
            var f = this;
            f.downloadComplete = !1;
            var g = ga.getDocument(d);
            return this.pdfLoadingTask = g,
            g.onPassword = function(a, b) {
                f.passwordPrompt.setUpdateCallback(a, b),
                f.passwordPrompt.open()
            },
            g.onProgress = function(a) {
                f.progress(a.loaded / a.total)
            },
            g.onUnsupportedFeature = this.fallback.bind(this),
            g.promise.then(function(a) {
                f.load(a, c)
            },
            function(a) {
                var b = a && a.message,
                c = oa.get("loading_error", null, "An error occurred while loading the PDF.");
                a instanceof ga.InvalidPDFException ? c = oa.get("invalid_file_error", null, "Invalid or corrupted PDF file.") : a instanceof ga.MissingPDFException ? c = oa.get("missing_file_error", null, "Missing PDF file.") : a instanceof ga.UnexpectedResponseException && (c = oa.get("unexpected_response_error", null, "Unexpected server response."));
                var d = {
                    message: b
                };
                throw f.error(c, d),
                new Error(c)
            })
        },
        download: function() {
            function a() {
                d.downloadUrl(b, c)
            }
            var b = this.baseUrl,
            c = ma(this.url),
            d = this.downloadManager;
            return d.onerror = function(a) {
                Ua.error("PDF failed to download.")
            },
            this.pdfDocument && this.downloadComplete ? void this.pdfDocument.getData().then(function(a) {
                var e = ga.createBlob(a, "application/pdf");
                d.download(e, b, c)
            },
            a).then(null, a) : void a()
        },
        fallback: function(a) {},
        error: function(a, b) {
            var c = oa.get("error_version_info", {
                version: ga.version || "?",
                build: ga.build || "?"
            },
            "PDF.js v{{version}} (build: {{build}})") + "\n";
            b && (c += oa.get("error_message", {
                message: b.message
            },
            "Message: {{message}}"), b.stack ? c += "\n" + oa.get("error_stack", {
                stack: b.stack
            },
            "Stack: {{stack}}") : (b.filename && (c += "\n" + oa.get("error_file", {
                file: b.filename
            },
            "File: {{file}}")), b.lineNumber && (c += "\n" + oa.get("error_line", {
                line: b.lineNumber
            },
            "Line: {{line}}"))));
            var d = this.appConfig.errorWrapper,
            e = d.container;
            e.removeAttribute("hidden");
            var f = d.errorMessage;
            f.textContent = a;
            var g = d.closeButton;
            g.onclick = function() {
                e.setAttribute("hidden", "true")
            };
            var h = d.errorMoreInfo,
            i = d.moreInfoButton,
            j = d.lessInfoButton;
            i.onclick = function() {
                h.removeAttribute("hidden"),
                i.setAttribute("hidden", "true"),
                j.removeAttribute("hidden"),
                h.style.height = h.scrollHeight + "px"
            },
            j.onclick = function() {
                h.setAttribute("hidden", "true"),
                i.removeAttribute("hidden"),
                j.setAttribute("hidden", "true")
            },
            i.oncontextmenu = na,
            j.oncontextmenu = na,
            g.oncontextmenu = na,
            i.removeAttribute("hidden"),
            j.setAttribute("hidden", "true"),
            h.value = c
        },
        progress: function(a) {
            var b = Math.round(100 * a); (b > this.loadingBar.percent || isNaN(b)) && (this.loadingBar.percent = b, ga.PDFJS.disableAutoFetch && b && (this.disableAutoFetchLoadingBarTimeout && (clearTimeout(this.disableAutoFetchLoadingBarTimeout), this.disableAutoFetchLoadingBarTimeout = null), this.loadingBar.show(), this.disableAutoFetchLoadingBarTimeout = setTimeout(function() {
                this.loadingBar.hide(),
                this.disableAutoFetchLoadingBarTimeout = null
            }.bind(this), Sa)))
        },
        load: function(a, b) {
            var c = this;
            b = b || ha,
            this.pdfDocument = a,
            this.pdfDocumentProperties.setDocumentAndUrl(a, this.url);
            var d = a.getDownloadInfo().then(function() {
                c.downloadComplete = !0,
                c.loadingBar.hide()
            });
            this.toolbar.setPagesCount(a.numPages, !1),
            this.secondaryToolbar.setPagesCount(a.numPages);
            var e, f = this.documentFingerprint = a.fingerprint,
            g = this.store = new ua(f);
            e = null,
            this.pdfLinkService.setDocument(a, e);
            var h = this.pdfViewer;
            h.currentScale = b,
            h.setDocument(a);
            var i = h.firstPagePromise,
            j = h.pagesPromise,
            k = h.onePageRendered;
            this.pageRotation = 0;
            var l = this.pdfThumbnailViewer;
            l.setDocument(a),
            i.then(function(a) {
                d.then(function() {
                    c.eventBus.dispatch("documentload", {
                        source: c
                    })
                }),
                c.loadingBar.setWidth(c.appConfig.viewerContainer),
                ga.PDFJS.disableHistory || c.isViewerEmbedded || (c.viewerPrefs.showPreviousViewOnLoad || c.pdfHistory.clearHistoryState(), c.pdfHistory.initialize(c.documentFingerprint), c.pdfHistory.initialDestination ? c.initialDestination = c.pdfHistory.initialDestination: c.pdfHistory.initialBookmark && (c.initialBookmark = c.pdfHistory.initialBookmark));
                var e = {
                    destination: c.initialDestination,
                    bookmark: c.initialBookmark,
                    hash: null
                };
                g.initializedPromise.then(function() {
                    var a = null,
                    d = null;
                    if (c.viewerPrefs.showPreviousViewOnLoad && g.get("exists", !1)) {
                        var f = g.get("page", "1"),
                        h = c.viewerPrefs.defaultZoomValue || g.get("zoom", ia),
                        i = g.get("scrollLeft", "0"),
                        j = g.get("scrollTop", "0");
                        a = "page=" + f + "&zoom=" + h + "," + i + "," + j,
                        d = g.get("sidebarView", sa.NONE)
                    } else c.viewerPrefs.defaultZoomValue && (a = "page=1&zoom=" + c.viewerPrefs.defaultZoomValue);
                    c.setInitialView(a, {
                        scale: b,
                        sidebarView: d
                    }),
                    e.hash = a,
                    c.isViewerEmbedded || c.pdfViewer.focus()
                },
                function(a) {
                    console.error(a),
                    c.setInitialView(null, {
                        scale: b
                    })
                }),
                j.then(function() { (e.destination || e.bookmark || e.hash) && (c.hasEqualPageSizes || (c.initialDestination = e.destination, c.initialBookmark = e.bookmark, c.pdfViewer.currentScaleValue = c.pdfViewer.currentScaleValue, c.setInitialView(e.hash)))
                })
            }),
            a.getPageLabels().then(function(b) {
                if (b && !c.viewerPrefs.disablePageLabels) {
                    var d = 0,
                    e = b.length;
                    if (e !== c.pagesCount) return void console.error("The number of Page Labels does not match the number of pages in the document.");
                    for (; d < e && b[d] === (d + 1).toString();) d++;
                    d !== e && (h.setPageLabels(b), l.setPageLabels(b), c.toolbar.setPagesCount(a.numPages, !0), c.toolbar.setPageNumber(h.currentPageNumber, h.currentPageLabel))
                }
            }),
            j.then(function() {
                c.supportsPrinting && a.getJavaScript().then(function(a) {
                    a.length && (console.warn("Warning: JavaScript is not supported"), c.fallback(ga.UNSUPPORTED_FEATURES.javaScript));
                    for (var b = /\bprint\s*\(/,
                    d = 0,
                    e = a.length; d < e; d++) {
                        var f = a[d];
                        if (f && b.test(f)) return void setTimeout(function() {
                            window.print()
                        })
                    }
                })
            }),
            Promise.all([k, Oa]).then(function() {
                a.getOutline().then(function(a) {
                    c.pdfOutlineViewer.render({
                        outline: a
                    })
                }),
                a.getAttachments().then(function(a) {
                    c.pdfAttachmentViewer.render({
                        attachments: a
                    })
                })
            }),
            a.getMetadata().then(function(b) {
                var d = b.info,
                e = b.metadata;
                c.documentInfo = d,
                c.metadata = e,
                console.log("PDF " + a.fingerprint + " [" + d.PDFFormatVersion + " " + (d.Producer || "-").trim() + " / " + (d.Creator || "-").trim() + "] (PDF.js: " + (ga.version || "-") + (ga.PDFJS.disableWebGL ? "": " [WebGL]") + ")");
                var f;
                if (e && e.has("dc:title")) {
                    var g = e.get("dc:title");
                    "Untitled" !== g && (f = g)
                } ! f && d && d.Title && (f = d.Title),
                f && c.setTitle(f + " - " + document.title),
                d.IsAcroFormPresent && (console.warn("Warning: AcroForm/XFA is not supported"), c.fallback(ga.UNSUPPORTED_FEATURES.forms))
            })
        },
        setInitialView: function(a, b) {
            var c = b && b.scale,
            d = b && b.sidebarView;
            this.isInitialViewSet = !0,
            this.pdfSidebar.setInitialView(this.viewerPrefs.sidebarViewOnLoad || 0 | d),
            this.initialDestination ? (this.pdfLinkService.navigateTo(this.initialDestination), this.initialDestination = null) : this.initialBookmark ? (this.pdfLinkService.setHash(this.initialBookmark), this.pdfHistory.push({
                hash: this.initialBookmark
            },
            !0), this.initialBookmark = null) : a ? this.pdfLinkService.setHash(a) : c && (this.pdfViewer.currentScaleValue = c, this.page = 1),
            this.toolbar.setPageNumber(this.pdfViewer.currentPageNumber, this.pdfViewer.currentPageLabel),
            this.secondaryToolbar.setPageNumber(this.pdfViewer.currentPageNumber),
            this.pdfViewer.currentScaleValue || (this.pdfViewer.currentScaleValue = ia)
        },
        cleanup: function() {
            this.pdfDocument && (this.pdfViewer.cleanup(), this.pdfThumbnailViewer.cleanup(), this.pdfViewer.renderer !== Qa.SVG && this.pdfDocument.cleanup())
        },
        forceRendering: function() {
            this.pdfRenderingQueue.printing = this.printing,
            this.pdfRenderingQueue.isThumbnailViewEnabled = this.pdfSidebar.isThumbnailViewVisible,
            this.pdfRenderingQueue.renderHighestPriority()
        },
        beforePrint: function() {
            if (!this.printService) {
                if (!this.supportsPrinting) {
                    var a = oa.get("printing_not_supported", null, "Warning: Printing is not fully supported by this browser.");
                    return void this.error(a)
                }
                if (!this.pdfViewer.pageViewsReady) {
                    var b = oa.get("printing_not_ready", null, "Warning: The PDF is not fully loaded for printing.");
                    return void window.alert(b)
                }
                var c = this.pdfViewer.getPagesOverview(),
                d = this.appConfig.printContainer,
                e = Za.instance.createPrintService(this.pdfDocument, c, d);
                this.printService = e,
                this.forceRendering(),
                e.layout()
            }
        },
        get hasEqualPageSizes() {
            for (var a = this.pdfViewer.getPageView(0), b = 1, c = this.pagesCount; b < c; ++b) {
                var d = this.pdfViewer.getPageView(b);
                if (d.width !== a.width || d.height !== a.height) return ! 1
            }
            return ! 0
        },
        afterPrint: function() {
            this.printService && (this.printService.destroy(), this.printService = null),
            this.forceRendering()
        },
        rotatePages: function(a) {
            var b = this.page;
            this.pageRotation = (this.pageRotation + 360 + a) % 360,
            this.pdfViewer.pagesRotation = this.pageRotation,
            this.pdfThumbnailViewer.pagesRotation = this.pageRotation,
            this.forceRendering(),
            this.pdfViewer.currentPageNumber = b
        },
        requestPresentationMode: function() {
            this.pdfPresentationMode && this.pdfPresentationMode.request()
        },
        bindEvents: function() {
            var a = this.eventBus;
            a.on("resize", n),
            a.on("hashchange", o),
            a.on("beforeprint", this.beforePrint.bind(this)),
            a.on("afterprint", this.afterPrint.bind(this)),
            a.on("pagerendered", g),
            a.on("textlayerrendered", h),
            a.on("updateviewarea", m),
            a.on("pagechanging", H),
            a.on("scalechanging", G),
            a.on("sidebarviewchanged", l),
            a.on("pagemode", i),
            a.on("namedaction", j),
            a.on("presentationmodechanged", k),
            a.on("presentationmode", p),
            a.on("openfile", q),
            a.on("print", r),
            a.on("download", s),
            a.on("firstpage", t),
            a.on("lastpage", u),
            a.on("nextpage", v),
            a.on("previouspage", w),
            a.on("zoomin", x),
            a.on("zoomout", y),
            a.on("pagenumberchanged", z),
            a.on("scalechanged", A),
            a.on("rotatecw", B),
            a.on("rotateccw", C),
            a.on("documentproperties", D),
            a.on("find", E),
            a.on("findfromurlhash", F),
            a.on("fileinputchange", Wa)
        },
        bindWindowEvents: function() {
            var a = this.eventBus;
            window.addEventListener("wheel", I),
            window.addEventListener("click", J),
            window.addEventListener("keydown", K),
            window.addEventListener("resize",
            function() {
                a.dispatch("resize")
            }),
            window.addEventListener("hashchange",
            function() {
                a.dispatch("hashchange", {
                    hash: document.location.hash.substring(1)
                })
            }),
            window.addEventListener("beforeprint",
            function() {
                a.dispatch("beforeprint")
            }),
            window.addEventListener("afterprint",
            function() {
                a.dispatch("afterprint")
            }),
            window.addEventListener("change",
            function(b) {
                var c = b.target.files;
                c && 0 !== c.length && a.dispatch("fileinputchange", {
                    fileInput: b.target
                })
            })
        }
    };
    L = function(a) {};
    var Va;
    Va = function(a) {
        if (a && 0 === a.lastIndexOf("file:", 0)) {
            Ua.setTitleUsingUrl(a);
            var b = new XMLHttpRequest;
            b.onload = function() {
                Ua.open(new Uint8Array(b.response))
            };
            try {
                b.open("GET", a),
                b.responseType = "arraybuffer",
                b.send()
            } catch(c) {
                Ua.error(oa.get("loading_error", null, "An error occurred while loading the PDF."), c)
            }
        } else a && Ua.open(a)
    };
    var Wa;
    Wa = function(a) {
        var b = a.fileInput.files[0];
        if (!ga.PDFJS.disableCreateObjectURL && "undefined" != typeof URL && URL.createObjectURL) Ua.open(URL.createObjectURL(b));
        else {
            var c = new FileReader;
            c.onload = function(a) {
                var b = a.target.result,
                c = new Uint8Array(b);
                Ua.open(c)
            },
            c.readAsArrayBuffer(b)
        }
        Ua.setTitleUsingUrl(b.name);
        var d = Ua.appConfig;
        d.toolbar.viewBookmark.setAttribute("hidden", "true"),
        d.secondaryToolbar.viewBookmarkButton.setAttribute("hidden", "true"),
        d.toolbar.download.setAttribute("hidden", "true"),
        d.secondaryToolbar.downloadButton.setAttribute("hidden", "true")
    };
    var Xa, Ya = !1;
    Pa.then(function() {
        document.getElementsByTagName("html")[0].dir = oa.getDirection()
    });
    var Za = {
        instance: {
            supportsPrinting: !1,
            createPrintService: function() {
                throw new Error("Not implemented: createPrintService")
            }
        }
    };
    b.PDFViewerApplication = Ua,
    b.DefaultExernalServices = Ta,
    b.PDFPrintServiceFactory = Za
},
function(a, b, c) {
    var d = c(0),
    e = d.scrollIntoView,
    f = {
        FIND_FOUND: 0,
        FIND_NOTFOUND: 1,
        FIND_WRAPPED: 2,
        FIND_PENDING: 3
    },
    g = -50,
    h = -400,
    i = {
        "‘": "'",
        "’": "'",
        "‚": "'",
        "‛": "'",
        "“": '"',
        "”": '"',
        "„": '"',
        "‟": '"',
        "¼": "1/4",
        "½": "1/2",
        "¾": "3/4"
    },
    j = function() {
        function a(a) {
            this.pdfViewer = a.pdfViewer || null,
            this.onUpdateResultsCount = null,
            this.onUpdateState = null,
            this.reset();
            var b = Object.keys(i).join("");
            this.normalizationRegex = new RegExp("[" + b + "]", "g")
        }
        return a.prototype = {
            reset: function() {
                this.startedTextExtraction = !1,
                this.extractTextPromises = [],
                this.pendingFindMatches = Object.create(null),
                this.active = !1,
                this.pageContents = [],
                this.pageMatches = [],
                this.pageMatchesLength = null,
                this.matchCount = 0,
                this.selected = {
                    pageIdx: -1,
                    matchIdx: -1
                },
                this.offset = {
                    pageIdx: null,
                    matchIdx: null
                },
                this.pagesToSearch = null,
                this.resumePageIdx = null,
                this.state = null,
                this.dirtyMatch = !1,
                this.findTimeout = null,
                this.firstPagePromise = new Promise(function(a) {
                    this.resolveFirstPage = a
                }.bind(this))
            },
            normalize: function(a) {
                return a.replace(this.normalizationRegex,
                function(a) {
                    return i[a]
                })
            },
            _prepareMatches: function(a, b, c) {
                function d(a, b) {
                    var c, d, e;
                    if (c = a[b], e = a[b + 1], b < a.length - 1 && c.match === e.match) return c.skipped = !0,
                    !0;
                    for (var f = b - 1; f >= 0; f--) if (d = a[f], !d.skipped) {
                        if (d.match + d.matchLength < c.match) break;
                        if (d.match + d.matchLength >= c.match + c.matchLength) return c.skipped = !0,
                        !0
                    }
                    return ! 1
                }
                var e, f;
                for (a.sort(function(a, b) {
                    return a.match === b.match ? a.matchLength - b.matchLength: a.match - b.match
                }), e = 0, f = a.length; e < f; e++) d(a, e) || (b.push(a[e].match), c.push(a[e].matchLength))
            },
            calcFindPhraseMatch: function(a, b, c) {
                for (var d = [], e = a.length, f = -e;;) {
                    if (f = c.indexOf(a, f + e), f === -1) break;
                    d.push(f)
                }
                this.pageMatches[b] = d
            },
            calcFindWordMatch: function(a, b, c) {
                for (var d, e, f, g = [], h = a.match(/\S+/g), i = 0, j = h.length; i < j; i++) for (d = h[i], e = d.length, f = -e;;) {
                    if (f = c.indexOf(d, f + e), f === -1) break;
                    g.push({
                        match: f,
                        matchLength: e,
                        skipped: !1
                    })
                }
                this.pageMatchesLength || (this.pageMatchesLength = []),
                this.pageMatchesLength[b] = [],
                this.pageMatches[b] = [],
                this._prepareMatches(g, this.pageMatches[b], this.pageMatchesLength[b])
            },
            calcFindMatch: function(a) {
                var b = this.normalize(this.pageContents[a]),
                c = this.normalize(this.state.query),
                d = this.state.caseSensitive,
                e = this.state.phraseSearch,
                f = c.length;
                0 !== f && (d || (b = b.toLowerCase(), c = c.toLowerCase()), e ? this.calcFindPhraseMatch(c, a, b) : this.calcFindWordMatch(c, a, b), this.updatePage(a), this.resumePageIdx === a && (this.resumePageIdx = null, this.nextPageMatch()), this.pageMatches[a].length > 0 && (this.matchCount += this.pageMatches[a].length, this.updateUIResultsCount()))
            },
            extractText: function() {
                function a(c) {
                    e.pdfViewer.getPageTextContent(c).then(function(d) {
                        for (var f = d.items,
                        g = [], h = 0, i = f.length; h < i; h++) g.push(f[h].str);
                        e.pageContents.push(g.join("")),
                        b[c](c),
                        c + 1 < e.pdfViewer.pagesCount && a(c + 1)
                    })
                }
                if (!this.startedTextExtraction) {
                    this.startedTextExtraction = !0,
                    this.pageContents = [];
                    for (var b = [], c = this.pdfViewer.pagesCount, d = 0; d < c; d++) this.extractTextPromises.push(new Promise(function(a) {
                        b.push(a)
                    }));
                    var e = this;
                    a(0)
                }
            },
            executeCommand: function(a, b) {
                null !== this.state && "findagain" === a || (this.dirtyMatch = !0),
                this.state = b,
                this.updateUIState(f.FIND_PENDING),
                this.firstPagePromise.then(function() {
                    this.extractText(),
                    clearTimeout(this.findTimeout),
                    "find" === a ? this.findTimeout = setTimeout(this.nextMatch.bind(this), 250) : this.nextMatch()
                }.bind(this))
            },
            updatePage: function(a) {
                this.selected.pageIdx === a && (this.pdfViewer.currentPageNumber = a + 1);
                var b = this.pdfViewer.getPageView(a);
                b.textLayer && b.textLayer.updateMatches()
            },
            nextMatch: function() {
                var a = this.state.findPrevious,
                b = this.pdfViewer.currentPageNumber - 1,
                c = this.pdfViewer.pagesCount;
                if (this.active = !0, this.dirtyMatch) {
                    this.dirtyMatch = !1,
                    this.selected.pageIdx = this.selected.matchIdx = -1,
                    this.offset.pageIdx = b,
                    this.offset.matchIdx = null,
                    this.hadMatch = !1,
                    this.resumePageIdx = null,
                    this.pageMatches = [],
                    this.matchCount = 0,
                    this.pageMatchesLength = null;
                    for (var d = this,
                    e = 0; e < c; e++) this.updatePage(e),
                    e in this.pendingFindMatches || (this.pendingFindMatches[e] = !0, this.extractTextPromises[e].then(function(a) {
                        delete d.pendingFindMatches[a],
                        d.calcFindMatch(a)
                    }))
                }
                if ("" === this.state.query) return void this.updateUIState(f.FIND_FOUND);
                if (!this.resumePageIdx) {
                    var g = this.offset;
                    if (this.pagesToSearch = c, null !== g.matchIdx) {
                        var h = this.pageMatches[g.pageIdx].length;
                        if (!a && g.matchIdx + 1 < h || a && g.matchIdx > 0) return this.hadMatch = !0,
                        g.matchIdx = a ? g.matchIdx - 1 : g.matchIdx + 1,
                        void this.updateMatch(!0);
                        this.advanceOffsetPage(a)
                    }
                    this.nextPageMatch()
                }
            },
            matchesReady: function(a) {
                var b = this.offset,
                c = a.length,
                d = this.state.findPrevious;
                return c ? (this.hadMatch = !0, b.matchIdx = d ? c - 1 : 0, this.updateMatch(!0), !0) : (this.advanceOffsetPage(d), !!(b.wrapped && (b.matchIdx = null, this.pagesToSearch < 0)) && (this.updateMatch(!1), !0))
            },
            updateMatchPosition: function(a, b, c, d) {
                if (this.selected.matchIdx === b && this.selected.pageIdx === a) {
                    var f = {
                        top: g,
                        left: h
                    };
                    e(c[d], f, !0)
                }
            },
            nextPageMatch: function() {
                null !== this.resumePageIdx && console.error("There can only be one pending page.");
                do {
                    var a = this.offset.pageIdx,
                    b = this.pageMatches[a];
                    if (!b) {
                        this.resumePageIdx = a;
                        break
                    }
                } while (! this . matchesReady ( b ))
            },
            advanceOffsetPage: function(a) {
                var b = this.offset,
                c = this.extractTextPromises.length;
                b.pageIdx = a ? b.pageIdx - 1 : b.pageIdx + 1,
                b.matchIdx = null,
                this.pagesToSearch--,
                (b.pageIdx >= c || b.pageIdx < 0) && (b.pageIdx = a ? c - 1 : 0, b.wrapped = !0)
            },
            updateMatch: function(a) {
                var b = f.FIND_NOTFOUND,
                c = this.offset.wrapped;
                if (this.offset.wrapped = !1, a) {
                    var d = this.selected.pageIdx;
                    this.selected.pageIdx = this.offset.pageIdx,
                    this.selected.matchIdx = this.offset.matchIdx,
                    b = c ? f.FIND_WRAPPED: f.FIND_FOUND,
                    d !== -1 && d !== this.selected.pageIdx && this.updatePage(d)
                }
                this.updateUIState(b, this.state.findPrevious),
                this.selected.pageIdx !== -1 && this.updatePage(this.selected.pageIdx)
            },
            updateUIResultsCount: function() {
                this.onUpdateResultsCount && this.onUpdateResultsCount(this.matchCount)
            },
            updateUIState: function(a, b) {
                this.onUpdateState && this.onUpdateState(a, b, this.matchCount)
            }
        },
        a
    } ();
    b.FindStates = f,
    b.PDFFindController = j
},
function(a, b, c) {
    function d() {
        return f || (f = Promise.resolve({
            showPreviousViewOnLoad: !0,
            defaultZoomValue: "",
            sidebarViewOnLoad: 0,
            enableHandToolOnLoad: !1,
            enableWebGL: !1,
            pdfBugEnabled: !1,
            disableRange: !1,
            disableStream: !1,
            disableAutoFetch: !1,
            disableFontFace: !1,
            disableTextLayer: !1,
            useOnlyCssZoom: !1,
            externalLinkTarget: 0,
            enhanceTextSelection: !1,
            renderer: "canvas",
            renderInteractiveForms: !1,
            enablePrintAutoRotate: !1,
            disablePageLabels: !1
        })),
        f
    }
    function e(a) {
        var b = {};
        for (var c in a) Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
        return b
    }
    var f = null,
    g = {
        prefs: null,
        isInitializedPromiseResolved: !1,
        initializedPromise: null,
        initialize: function() {
            return this.initializedPromise = d().then(function(a) {
                return Object.defineProperty(this, "defaults", {
                    value: Object.freeze(a),
                    writable: !1,
                    enumerable: !0,
                    configurable: !1
                }),
                this.prefs = e(a),
                this._readFromStorage(a)
            }.bind(this)).then(function(a) {
                this.isInitializedPromiseResolved = !0,
                a && (this.prefs = a)
            }.bind(this))
        },
        _writeToStorage: function(a) {
            return Promise.resolve()
        },
        _readFromStorage: function(a) {
            return Promise.resolve()
        },
        reset: function() {
            return this.initializedPromise.then(function() {
                return this.prefs = e(this.defaults),
                this._writeToStorage(this.defaults)
            }.bind(this))
        },
        reload: function() {
            return this.initializedPromise.then(function() {
                this._readFromStorage(this.defaults).then(function(a) {
                    a && (this.prefs = a)
                }.bind(this))
            }.bind(this))
        },
        set: function(a, b) {
            return this.initializedPromise.then(function() {
                if (void 0 === this.defaults[a]) throw new Error("preferencesSet: '" + a + "' is undefined.");
                if (void 0 === b) throw new Error("preferencesSet: no value is specified.");
                var c = typeof b,
                d = typeof this.defaults[a];
                if (c !== d) {
                    if ("number" !== c || "string" !== d) throw new Error("Preferences_set: '" + b + "' is a \"" + c + '", expected "' + d + '".');
                    b = b.toString()
                } else if ("number" === c && (0 | b) !== b) throw new Error("Preferences_set: '" + b + '\' must be an "integer".');
                return this.prefs[a] = b,
                this._writeToStorage(this.prefs)
            }.bind(this))
        },
        get: function(a) {
            return this.initializedPromise.then(function() {
                var b = this.defaults[a];
                if (void 0 === b) throw new Error("preferencesGet: '" + a + "' is undefined.");
                var c = this.prefs[a];
                return void 0 !== c ? c: b
            }.bind(this))
        }
    };
    g._writeToStorage = function(a) {
        return new Promise(function(b) {
            localStorage.setItem("pdfjs.preferences", JSON.stringify(a)),
            b()
        })
    },
    g._readFromStorage = function(a) {
        return new Promise(function(a) {
            var b = JSON.parse(localStorage.getItem("pdfjs.preferences"));
            a(b)
        })
    },
    b.Preferences = g
},
function(a, b, c) {
    function d(a, b, c, d) {
        var e = r.scratchCanvas,
        f = 150,
        g = f / 72;
        e.width = Math.floor(d.width * g),
        e.height = Math.floor(d.height * g);
        var h = Math.floor(d.width * o) + "px",
        i = Math.floor(d.height * o) + "px",
        j = e.getContext("2d");
        return j.save(),
        j.fillStyle = "rgb(255, 255, 255)",
        j.fillRect(0, 0, e.width, e.height),
        j.restore(),
        b.getPage(c).then(function(a) {
            var b = {
                canvasContext: j,
                transform: [g, 0, 0, g, 0, 0],
                viewport: a.getViewport(1, d.rotation),
                intent: "print"
            };
            return a.render(b).promise
        }).then(function() {
            return {
                width: h,
                height: i
            }
        })
    }
    function e(a, b, c) {
        this.pdfDocument = a,
        this.pagesOverview = b,
        this.printContainer = c,
        this.currentPage = -1,
        this.scratchCanvas = document.createElement("canvas")
    }
    function f(a) {
        var b = document.createEvent("CustomEvent");
        b.initCustomEvent(a, !1, !1, "custom"),
        window.dispatchEvent(b)
    }
    function g() {
        r && (r.destroy(), f("afterprint"))
    }
    function h(a, b) {
        var c = document.getElementById("printServiceOverlay"),
        d = Math.round(100 * a / b),
        e = c.querySelector("progress"),
        f = c.querySelector(".relative-progress");
        e.value = d,
        f.textContent = n.get("print_progress_percent", {
            progress: d
        },
        d + "%")
    }
    function i() {
        return v || (v = q.register("printServiceOverlay", document.getElementById("printServiceOverlay"), g, !0), document.getElementById("printCancel").onclick = g),
        v
    }
    var j = c(0),
    k = c(4),
    l = c(6),
    m = c(1),
    n = j.mozL10n,
    o = j.CSS_UNITS,
    p = l.PDFPrintServiceFactory,
    q = k.OverlayManager,
    r = null;
    e.prototype = {
        layout: function() {
            this.throwIfInactive();
            var a = document.querySelector("body");
            a.setAttribute("data-pdfjsprinting", !0);
            var b = this.pagesOverview.every(function(a) {
                return a.width === this.pagesOverview[0].width && a.height === this.pagesOverview[0].height
            },
            this);
            b || console.warn("Not all pages have the same size. The printed result may be incorrect!"),
            this.pageStyleSheet = document.createElement("style");
            var c = this.pagesOverview[0];
            this.pageStyleSheet.textContent = "@supports ((size:A4) and (size:1pt 1pt)) {@page { size: " + c.width + "pt " + c.height + "pt;}}",
            a.appendChild(this.pageStyleSheet)
        },
        destroy: function() {
            r === this && (this.printContainer.textContent = "", this.pageStyleSheet && this.pageStyleSheet.parentNode && (this.pageStyleSheet.parentNode.removeChild(this.pageStyleSheet), this.pageStyleSheet = null), this.scratchCanvas.width = this.scratchCanvas.height = 0, this.scratchCanvas = null, r = null, i().then(function() {
                "printServiceOverlay" === q.active && q.close("printServiceOverlay")
            }))
        },
        renderPages: function() {
            var a = this.pagesOverview.length,
            b = function(c, e) {
                if (this.throwIfInactive(), ++this.currentPage >= a) return h(a, a),
                void c();
                var f = this.currentPage;
                h(f, a),
                d(this, this.pdfDocument, f + 1, this.pagesOverview[f]).then(this.useRenderedPage.bind(this)).then(function() {
                    b(c, e)
                },
                e)
            }.bind(this);
            return new Promise(b)
        },
        useRenderedPage: function(a) {
            this.throwIfInactive();
            var b = document.createElement("img");
            b.style.width = a.width,
            b.style.height = a.height;
            var c = this.scratchCanvas;
            "toBlob" in c && !m.PDFJS.disableCreateObjectURL ? c.toBlob(function(a) {
                b.src = URL.createObjectURL(a)
            }) : b.src = c.toDataURL();
            var d = document.createElement("div");
            return d.appendChild(b),
            this.printContainer.appendChild(d),
            new Promise(function(a, c) {
                b.onload = a,
                b.onerror = c
            })
        },
        performPrint: function() {
            return this.throwIfInactive(),
            new Promise(function(a) {
                setTimeout(function() {
                    return this.active ? (s.call(window), void setTimeout(a, 20)) : void a()
                }.bind(this), 0)
            }.bind(this))
        },
        get active() {
            return this === r
        },
        throwIfInactive: function() {
            if (!this.active) throw new Error("This print request was cancelled or completed.")
        }
    };
    var s = window.print;
    window.print = function() {
        if (r) return void console.warn("Ignored window.print() because of a pending print job.");
        i().then(function() {
            r && q.open("printServiceOverlay")
        });
        try {
            f("beforeprint")
        } finally {
            if (!r) return console.error("Expected print service to be initialized."),
            void("printServiceOverlay" === q.active && q.close("printServiceOverlay"));
            var a = r;
            r.renderPages().then(function() {
                return a.performPrint()
            }).
            catch(function() {}).then(function() {
                a.active && g()
            })
        }
    };
    var t = !!document.attachEvent;
    if (window.addEventListener("keydown",
    function(a) {
        if (80 === a.keyCode && (a.ctrlKey || a.metaKey) && !a.altKey && (!a.shiftKey || window.chrome || window.opera)) {
            if (window.print(), t) return;
            return a.preventDefault(),
            void(a.stopImmediatePropagation ? a.stopImmediatePropagation() : a.stopPropagation())
        }
    },
    !0), t && document.attachEvent("onkeydown",
    function(a) {
        if (a = a || window.event, 80 === a.keyCode && a.ctrlKey) return a.keyCode = 0,
        !1
    }), "onbeforeprint" in window) {
        var u = function(a) {
            "custom" !== a.detail && a.stopImmediatePropagation && a.stopImmediatePropagation()
        };
        window.addEventListener("beforeprint", u),
        window.addEventListener("afterprint", u)
    }
    var v;
    p.instance = {
        supportsPrinting: !0,
        createPrintService: function(a, b, c) {
            if (r) throw new Error("The print service is created and active.");
            return r = new e(a, b, c)
        }
    },
    b.PDFPrintService = e
},
function(a, b, c) {
    function d() {}
    var e = c(0),
    f = c(5),
    g = c(1),
    h = e.mozL10n,
    i = f.SimpleLinkService,
    j = function() {
        function a(a) {
            this.pageDiv = a.pageDiv,
            this.pdfPage = a.pdfPage,
            this.renderInteractiveForms = a.renderInteractiveForms,
            this.linkService = a.linkService,
            this.downloadManager = a.downloadManager,
            this.div = null
        }
        return a.prototype = {
            render: function(a, b) {
                var c = this,
                d = {
                    intent: void 0 === b ? "display": b
                };
                this.pdfPage.getAnnotations(d).then(function(b) {
                    if (a = a.clone({
                        dontFlip: !0
                    }), d = {
                        viewport: a,
                        div: c.div,
                        annotations: b,
                        page: c.pdfPage,
                        renderInteractiveForms: c.renderInteractiveForms,
                        linkService: c.linkService,
                        downloadManager: c.downloadManager
                    },
                    c.div) g.AnnotationLayer.update(d);
                    else {
                        if (0 === b.length) return;
                        c.div = document.createElement("div"),
                        c.div.className = "annotationLayer",
                        c.pageDiv.appendChild(c.div),
                        d.div = c.div,
                        g.AnnotationLayer.render(d),
                        "undefined" != typeof h && h.translate(c.div)
                    }
                })
            },
            hide: function() {
                this.div && this.div.setAttribute("hidden", "true")
            }
        },
        a
    } ();
    d.prototype = {
        createAnnotationLayerBuilder: function(a, b, c) {
            return new j({
                pageDiv: a,
                pdfPage: b,
                renderInteractiveForms: c,
                linkService: new i
            })
        }
    },
    b.AnnotationLayerBuilder = j,
    b.DefaultAnnotationLayerFactory = d
},
function(a, b, c) {
    function d(a, b) {
        var c = document.createElement("a");
        if (c.click) c.href = a,
        c.target = "_parent",
        "download" in c && (c.download = b),
        (document.body || document.documentElement).appendChild(c),
        c.click(),
        c.parentNode.removeChild(c);
        else {
            if (window.top === window && a.split("#")[0] === window.location.href.split("#")[0]) {
                var d = a.indexOf("?") === -1 ? "?": "&";
                a = a.replace(/#|$/, d + "$&")
            }
            window.open(a, "_parent")
        }
    }
    function e() {}
    var f = c(1);
    e.prototype = {
        downloadUrl: function(a, b) {
            f.createValidAbsoluteUrl(a, "http://example.com") && d(a + "#pdfjs.action=download", b)
        },
        downloadData: function(a, b, c) {
            if (navigator.msSaveBlob) return navigator.msSaveBlob(new Blob([a], {
                type: c
            }), b);
            var e = f.createObjectURL(a, c, f.PDFJS.disableCreateObjectURL);
            d(e, b)
        },
        download: function(a, b, c) {
            if (navigator.msSaveBlob) return void(navigator.msSaveBlob(a, c) || this.downloadUrl(b, c));
            if (f.PDFJS.disableCreateObjectURL) return void this.downloadUrl(b, c);
            var e = URL.createObjectURL(a);
            d(e, c)
        }
    },
    b.DownloadManager = e
},
function(a, b, c) {
    function d(a) {
        this.element = a.element,
        this.document = a.element.ownerDocument,
        "function" == typeof a.ignoreTarget && (this.ignoreTarget = a.ignoreTarget),
        this.onActiveChanged = a.onActiveChanged,
        this.activate = this.activate.bind(this),
        this.deactivate = this.deactivate.bind(this),
        this.toggle = this.toggle.bind(this),
        this._onmousedown = this._onmousedown.bind(this),
        this._onmousemove = this._onmousemove.bind(this),
        this._endPan = this._endPan.bind(this);
        var b = this.overlay = document.createElement("div");
        b.className = "grab-to-pan-grabbing"
    }
    function e(a) {
        return "buttons" in a && g ? !(1 & a.buttons) : i || j ? 0 === a.which: void 0
    }
    d.prototype = {
        CSS_CLASS_GRAB: "grab-to-pan-grab",
        activate: function() {
            this.active || (this.active = !0, this.element.addEventListener("mousedown", this._onmousedown, !0), this.element.classList.add(this.CSS_CLASS_GRAB), this.onActiveChanged && this.onActiveChanged(!0))
        },
        deactivate: function() {
            this.active && (this.active = !1, this.element.removeEventListener("mousedown", this._onmousedown, !0), this._endPan(), this.element.classList.remove(this.CSS_CLASS_GRAB), this.onActiveChanged && this.onActiveChanged(!1))
        },
        toggle: function() {
            this.active ? this.deactivate() : this.activate()
        },
        ignoreTarget: function(a) {
            return a[f]("a[href], a[href] *, input, textarea, button, button *, select, option")
        },
        _onmousedown: function(a) {
            if (0 === a.button && !this.ignoreTarget(a.target)) {
                if (a.originalTarget) try {
                    a.originalTarget.tagName
                } catch(b) {
                    return
                }
                this.scrollLeftStart = this.element.scrollLeft,
                this.scrollTopStart = this.element.scrollTop,
                this.clientXStart = a.clientX,
                this.clientYStart = a.clientY,
                this.document.addEventListener("mousemove", this._onmousemove, !0),
                this.document.addEventListener("mouseup", this._endPan, !0),
                this.element.addEventListener("scroll", this._endPan, !0),
                a.preventDefault(),
                a.stopPropagation();
                var c = document.activeElement;
                c && !c.contains(a.target) && c.blur()
            }
        },
        _onmousemove: function(a) {
            if (this.element.removeEventListener("scroll", this._endPan, !0), e(a)) return void this._endPan();
            var b = a.clientX - this.clientXStart,
            c = a.clientY - this.clientYStart,
            d = this.scrollTopStart - c,
            f = this.scrollLeftStart - b;
            this.element.scrollTo ? this.element.scrollTo({
                top: d,
                left: f,
                behavior: "instant"
            }) : (this.element.scrollTop = d, this.element.scrollLeft = f),
            this.overlay.parentNode || document.body.appendChild(this.overlay)
        },
        _endPan: function() {
            this.element.removeEventListener("scroll", this._endPan, !0),
            this.document.removeEventListener("mousemove", this._onmousemove, !0),
            this.document.removeEventListener("mouseup", this._endPan, !0),
            this.overlay.remove()
        }
    };
    var f; ["webkitM", "mozM", "msM", "oM", "m"].some(function(a) {
        var b = a + "atches";
        return b in document.documentElement && (f = b),
        b += "Selector",
        b in document.documentElement && (f = b),
        f
    });
    var g = !document.documentMode || document.documentMode > 9,
    h = window.chrome,
    i = h && (h.webstore || h.app),
    j = /Apple/.test(navigator.vendor) && /Version\/([6-9]\d*|[1-5]\d+)/.test(navigator.userAgent);
    b.GrabToPan = d
},
function(a, b, c) {
    var d = c(12),
    e = c(8),
    f = c(0),
    g = d.GrabToPan,
    h = e.Preferences,
    i = f.localized,
    j = function() {
        function a(a) {
            this.container = a.container,
            this.eventBus = a.eventBus,
            this.wasActive = !1,
            this.handTool = new g({
                element: this.container,
                onActiveChanged: function(a) {
                    this.eventBus.dispatch("handtoolchanged", {
                        isActive: a
                    })
                }.bind(this)
            }),
            this.eventBus.on("togglehandtool", this.toggle.bind(this)),
            Promise.all([i, h.get("enableHandToolOnLoad")]).then(function(a) {
                a[1] === !0 && this.handTool.activate()
            }.bind(this)).
            catch(function(a) {}),
            this.eventBus.on("presentationmodechanged",
            function(a) {
                a.switchInProgress || (a.active ? this.enterPresentationMode() : this.exitPresentationMode())
            }.bind(this))
        }
        return a.prototype = {
            get isActive() {
                return !! this.handTool.active
            },
            toggle: function() {
                this.handTool.toggle()
            },
            enterPresentationMode: function() {
                this.isActive && (this.wasActive = !0, this.handTool.deactivate())
            },
            exitPresentationMode: function() {
                this.wasActive && (this.wasActive = !1, this.handTool.activate())
            }
        },
        a
    } ();
    b.HandTool = j
},
function(a, b, c) {
    var d = c(0),
    e = c(4),
    f = c(1),
    g = d.mozL10n,
    h = e.OverlayManager,
    i = function() {
        function a(a) {
            this.overlayName = a.overlayName,
            this.container = a.container,
            this.label = a.label,
            this.input = a.input,
            this.submitButton = a.submitButton,
            this.cancelButton = a.cancelButton,
            this.updateCallback = null,
            this.reason = null,
            this.submitButton.addEventListener("click", this.verify.bind(this)),
            this.cancelButton.addEventListener("click", this.close.bind(this)),
            this.input.addEventListener("keydown",
            function(a) {
                13 === a.keyCode && this.verify()
            }.bind(this)),
            h.register(this.overlayName, this.container, this.close.bind(this), !0)
        }
        return a.prototype = {
            open: function() {
                h.open(this.overlayName).then(function() {
                    this.input.type = "password",
                    this.input.focus();
                    var a = g.get("password_label", null, "Enter the password to open this PDF file.");
                    this.reason === f.PasswordResponses.INCORRECT_PASSWORD && (a = g.get("password_invalid", null, "Invalid password. Please try again.")),
                    this.label.textContent = a
                }.bind(this))
            },
            close: function() {
                h.close(this.overlayName).then(function() {
                    this.input.value = "",
                    this.input.type = ""
                }.bind(this))
            },
            verify: function() {
                var a = this.input.value;
                if (a && a.length > 0) return this.close(),
                this.updateCallback(a)
            },
            setUpdateCallback: function(a, b) {
                this.updateCallback = a,
                this.reason = b
            }
        },
        a
    } ();
    b.PasswordPrompt = i
},
function(a, b, c) {
    var d = c(1),
    e = function() {
        function a(a) {
            this.attachments = null,
            this.container = a.container,
            this.eventBus = a.eventBus,
            this.downloadManager = a.downloadManager,
            this._renderedCapability = d.createPromiseCapability(),
            this.eventBus.on("fileattachmentannotation", this._appendAttachment.bind(this))
        }
        return a.prototype = {
            reset: function(a) {
                this.attachments = null,
                this.container.textContent = "",
                a || (this._renderedCapability = d.createPromiseCapability())
            },
            _dispatchEvent: function(a) {
                this.eventBus.dispatch("attachmentsloaded", {
                    source: this,
                    attachmentsCount: a
                }),
                this._renderedCapability.resolve()
            },
            _bindPdfLink: function(a, b, c) {
                var e;
                a.onclick = function() {
                    e || (e = d.createObjectURL(b, "application/pdf", d.PDFJS.disableCreateObjectURL));
                    var a;
                    return a = "?file=" + encodeURIComponent(e + "#" + c),
                    window.open(a),
                    !1
                }
            },
            _bindLink: function(a, b, c) {
                a.onclick = function(a) {
                    return this.downloadManager.downloadData(b, c, ""),
                    !1
                }.bind(this)
            },
            render: function(a) {
                a = a || {};
                var b = a.attachments || null,
                c = 0;
                if (this.attachments) {
                    var e = a.keepRenderedCapability === !0;
                    this.reset(e)
                }
                if (this.attachments = b, !b) return void this._dispatchEvent(c);
                var f = Object.keys(b).sort(function(a, b) {
                    return a.toLowerCase().localeCompare(b.toLowerCase())
                });
                c = f.length;
                for (var g = 0; g < c; g++) {
                    var h = b[f[g]],
                    i = d.getFilenameFromUrl(h.filename);
                    i = d.removeNullCharacters(i);
                    var j = document.createElement("div");
                    j.className = "attachmentsItem";
                    var k = document.createElement("button");
                    k.textContent = i,
                    /\.pdf$/i.test(i) ? this._bindPdfLink(k, h.content, i) : this._bindLink(k, h.content, i),
                    j.appendChild(k),
                    this.container.appendChild(j)
                }
                this._dispatchEvent(c)
            },
            _appendAttachment: function(a) {
                this._renderedCapability.promise.then(function(a, b, c) {
                    var d = this.attachments;
                    if (d) {
                        for (var e in d) if (a === e) return
                    } else d = Object.create(null);
                    d[a] = {
                        filename: b,
                        content: c
                    },
                    this.render({
                        attachments: d,
                        keepRenderedCapability: !0
                    })
                }.bind(this, a.id, a.filename, a.content))
            }
        },
        a
    } ();
    b.PDFAttachmentViewer = e
},
function(a, b, c) {
    var d = c(0),
    e = c(4),
    f = d.getPDFFileNameFromURL,
    g = d.mozL10n,
    h = e.OverlayManager,
    i = function() {
        function a(a) {
            this.fields = a.fields,
            this.overlayName = a.overlayName,
            this.container = a.container,
            this.rawFileSize = 0,
            this.url = null,
            this.pdfDocument = null,
            a.closeButton && a.closeButton.addEventListener("click", this.close.bind(this)),
            this.dataAvailablePromise = new Promise(function(a) {
                this.resolveDataAvailable = a
            }.bind(this)),
            h.register(this.overlayName, this.container, this.close.bind(this))
        }
        return a.prototype = {
            open: function() {
                Promise.all([h.open(this.overlayName), this.dataAvailablePromise]).then(function() {
                    this._getProperties()
                }.bind(this))
            },
            close: function() {
                h.close(this.overlayName)
            },
            setFileSize: function(a) {
                a > 0 && (this.rawFileSize = a)
            },
            setDocumentAndUrl: function(a, b) {
                this.pdfDocument = a,
                this.url = b,
                this.resolveDataAvailable()
            },
            _getProperties: function() {
                h.active && (this.pdfDocument.getDownloadInfo().then(function(a) {
                    a.length !== this.rawFileSize && (this.setFileSize(a.length), this._updateUI(this.fields.fileSize, this._parseFileSize()))
                }.bind(this)), this.pdfDocument.getMetadata().then(function(a) {
                    var b = {
                        fileName: f(this.url),
                        fileSize: this._parseFileSize(),
                        title: a.info.Title,
                        author: a.info.Author,
                        subject: a.info.Subject,
                        keywords: a.info.Keywords,
                        creationDate: this._parseDate(a.info.CreationDate),
                        modificationDate: this._parseDate(a.info.ModDate),
                        creator: a.info.Creator,
                        producer: a.info.Producer,
                        version: a.info.PDFFormatVersion,
                        pageCount: this.pdfDocument.numPages
                    };
                    for (var c in b) this._updateUI(this.fields[c], b[c])
                }.bind(this)))
            },
            _updateUI: function(a, b) {
                a && void 0 !== b && "" !== b && (a.textContent = b)
            },
            _parseFileSize: function() {
                var a = this.rawFileSize,
                b = a / 1024;
                if (b) return b < 1024 ? g.get("document_properties_kb", {
                    size_kb: ( + b.toPrecision(3)).toLocaleString(),
                    size_b: a.toLocaleString()
                },
                "{{size_kb}} KB ({{size_b}} bytes)") : g.get("document_properties_mb", {
                    size_mb: ( + (b / 1024).toPrecision(3)).toLocaleString(),
                    size_b: a.toLocaleString()
                },
                "{{size_mb}} MB ({{size_b}} bytes)")
            },
            _parseDate: function(a) {
                var b = a;
                if (void 0 === b) return "";
                "D:" === b.substring(0, 2) && (b = b.substring(2));
                var c = parseInt(b.substring(0, 4), 10),
                d = parseInt(b.substring(4, 6), 10) - 1,
                e = parseInt(b.substring(6, 8), 10),
                f = parseInt(b.substring(8, 10), 10),
                h = parseInt(b.substring(10, 12), 10),
                i = parseInt(b.substring(12, 14), 10),
                j = b.substring(14, 15),
                k = parseInt(b.substring(15, 17), 10),
                l = parseInt(b.substring(18, 20), 10);
                "-" === j ? (f += k, h += l) : "+" === j && (f -= k, h -= l);
                var m = new Date(Date.UTC(c, d, e, f, h, i)),
                n = m.toLocaleDateString(),
                o = m.toLocaleTimeString();
                return g.get("document_properties_date_string", {
                    date: n,
                    time: o
                },
                "{{date}}, {{time}}")
            }
        },
        a
    } ();
    b.PDFDocumentProperties = i
},
function(a, b, c) {
    var d = c(0),
    e = c(7),
    f = d.mozL10n,
    g = e.FindStates,
    h = function() {
        function a(a) {
            if (this.opened = !1, this.bar = a.bar || null, this.toggleButton = a.toggleButton || null, this.findField = a.findField || null, this.highlightAll = a.highlightAllCheckbox || null, this.caseSensitive = a.caseSensitiveCheckbox || null, this.findMsg = a.findMsg || null, this.findResultsCount = a.findResultsCount || null, this.findStatusIcon = a.findStatusIcon || null, this.findPreviousButton = a.findPreviousButton || null, this.findNextButton = a.findNextButton || null, this.findController = a.findController || null, this.eventBus = a.eventBus, null === this.findController) throw new Error("PDFFindBar cannot be used without a PDFFindController instance.");
            var b = this;
            this.toggleButton.addEventListener("click",
            function() {
                b.toggle()
            }),
            this.findField.addEventListener("input",
            function() {
                b.dispatchEvent("")
            }),
            this.bar.addEventListener("keydown",
            function(a) {
                switch (a.keyCode) {
                case 13:
                    a.target === b.findField && b.dispatchEvent("again", a.shiftKey);
                    break;
                case 27:
                    b.close()
                }
            }),
            this.findPreviousButton.addEventListener("click",
            function() {
                b.dispatchEvent("again", !0)
            }),
            this.findNextButton.addEventListener("click",
            function() {
                b.dispatchEvent("again", !1)
            }),
            this.highlightAll.addEventListener("click",
            function() {
                b.dispatchEvent("highlightallchange")
            }),
            this.caseSensitive.addEventListener("click",
            function() {
                b.dispatchEvent("casesensitivitychange")
            }),
            this.eventBus.on("resize", this._adjustWidth.bind(this))
        }
        return a.prototype = {
            reset: function() {
                this.updateUIState()
            },
            dispatchEvent: function(a, b) {
                this.eventBus.dispatch("find", {
                    source: this,
                    type: a,
                    query: this.findField.value,
                    caseSensitive: this.caseSensitive.checked,
                    phraseSearch: !0,
                    highlightAll: this.highlightAll.checked,
                    findPrevious: b
                })
            },
            updateUIState: function(a, b, c) {
                var d = !1,
                e = "",
                h = "";
                switch (a) {
                case g.FIND_FOUND:
                    break;
                case g.FIND_PENDING:
                    h = "pending";
                    break;
                case g.FIND_NOTFOUND:
                    e = f.get("find_not_found", null, "Phrase not found"),
                    d = !0;
                    break;
                case g.FIND_WRAPPED:
                    e = b ? f.get("find_reached_top", null, "Reached top of document, continued from bottom") : f.get("find_reached_bottom", null, "Reached end of document, continued from top")
                }
                d ? this.findField.classList.add("notFound") : this.findField.classList.remove("notFound"),
                this.findField.setAttribute("data-status", h),
                this.findMsg.textContent = e,
                this.updateResultsCount(c),
                this._adjustWidth()
            },
            updateResultsCount: function(a) {
                if (this.findResultsCount) {
                    if (!a) return void this.findResultsCount.classList.add("hidden");
                    this.findResultsCount.textContent = a.toLocaleString(),
                    this.findResultsCount.classList.remove("hidden")
                }
            },
            open: function() {
                this.opened || (this.opened = !0, this.toggleButton.classList.add("toggled"), this.bar.classList.remove("hidden")),
                this.findField.select(),
                this.findField.focus(),
                this._adjustWidth()
            },
            close: function() {
                this.opened && (this.opened = !1, this.toggleButton.classList.remove("toggled"), this.bar.classList.add("hidden"), this.findController.active = !1)
            },
            toggle: function() {
                this.opened ? this.close() : this.open()
            },
            _adjustWidth: function() {
                if (this.opened) {
                    this.bar.classList.remove("wrapContainers");
                    var a = this.bar.clientHeight,
                    b = this.bar.firstElementChild.clientHeight;
                    a > b && this.bar.classList.add("wrapContainers")
                }
            }
        },
        a
    } ();
    b.PDFFindBar = h
},
function(a, b, c) {
    function d(a) {
        this.linkService = a.linkService,
        this.eventBus = a.eventBus || e.getGlobalEventBus(),
        this.initialized = !1,
        this.initialDestination = null,
        this.initialBookmark = null
    }
    var e = c(2);
    d.prototype = {
        initialize: function(a) {
            function b() {
                f.previousHash = window.location.hash.slice(1),
                f._pushToHistory({
                    hash: f.previousHash
                },
                !1, !0),
                f._updatePreviousBookmark()
            }
            function c(a, b) {
                function c() {
                    window.removeEventListener("popstate", c),
                    window.addEventListener("popstate", d),
                    f._pushToHistory(a, !1, !0),
                    history.forward()
                }
                function d() {
                    window.removeEventListener("popstate", d),
                    f.allowHashChange = !0,
                    f.historyUnlocked = !0,
                    b()
                }
                f.historyUnlocked = !1,
                f.allowHashChange = !1,
                window.addEventListener("popstate", c),
                history.back()
            }
            function d() {
                var a = f._getPreviousParams(null, !0);
                if (a) {
                    var b = !f.current.dest && f.current.hash !== f.previousHash;
                    f._pushToHistory(a, !1, b),
                    f._updatePreviousBookmark()
                }
                window.removeEventListener("beforeunload", d)
            }
            this.initialized = !0,
            this.reInitialized = !1,
            this.allowHashChange = !0,
            this.historyUnlocked = !0,
            this.isViewerInPresentationMode = !1,
            this.previousHash = window.location.hash.substring(1),
            this.currentBookmark = "",
            this.currentPage = 0,
            this.updatePreviousBookmark = !1,
            this.previousBookmark = "",
            this.previousPage = 0,
            this.nextHashParam = "",
            this.fingerprint = a,
            this.currentUid = this.uid = 0,
            this.current = {};
            var e = window.history.state;
            this._isStateObjectDefined(e) ? (e.target.dest ? this.initialDestination = e.target.dest: this.initialBookmark = e.target.hash, this.currentUid = e.uid, this.uid = e.uid + 1, this.current = e.target) : (e && e.fingerprint && this.fingerprint !== e.fingerprint && (this.reInitialized = !0), this._pushOrReplaceState({
                fingerprint: this.fingerprint
            },
            !0));
            var f = this;
            window.addEventListener("popstate",
            function(a) {
                if (f.historyUnlocked) {
                    if (a.state) return void f._goTo(a.state);
                    if (0 === f.uid) {
                        var d = f.previousHash && f.currentBookmark && f.previousHash !== f.currentBookmark ? {
                            hash: f.currentBookmark,
                            page: f.currentPage
                        }: {
                            page: 1
                        };
                        c(d,
                        function() {
                            b()
                        })
                    } else b()
                }
            }),
            window.addEventListener("beforeunload", d),
            window.addEventListener("pageshow",
            function(a) {
                window.addEventListener("beforeunload", d)
            }),
            f.eventBus.on("presentationmodechanged",
            function(a) {
                f.isViewerInPresentationMode = a.active
            })
        },
        clearHistoryState: function() {
            this._pushOrReplaceState(null, !0)
        },
        _isStateObjectDefined: function(a) {
            return !! (a && a.uid >= 0 && a.fingerprint && this.fingerprint === a.fingerprint && a.target && a.target.hash)
        },
        _pushOrReplaceState: function(a, b) {
            b ? window.history.replaceState(a, "", document.URL) : window.history.pushState(a, "", document.URL)
        },
        get isHashChangeUnlocked() {
            return ! this.initialized || this.allowHashChange
        },
        _updatePreviousBookmark: function() {
            this.updatePreviousBookmark && this.currentBookmark && this.currentPage && (this.previousBookmark = this.currentBookmark, this.previousPage = this.currentPage, this.updatePreviousBookmark = !1)
        },
        updateCurrentBookmark: function(a, b) {
            this.initialized && (this.currentBookmark = a.substring(1), this.currentPage = 0 | b, this._updatePreviousBookmark())
        },
        updateNextHashParam: function(a) {
            this.initialized && (this.nextHashParam = a)
        },
        push: function(a, b) {
            if (this.initialized && this.historyUnlocked) {
                if (a.dest && !a.hash && (a.hash = this.current.hash && this.current.dest && this.current.dest === a.dest ? this.current.hash: this.linkService.getDestinationHash(a.dest).split("#")[1]), a.page && (a.page |= 0), b) {
                    var c = window.history.state.target;
                    return c || (this._pushToHistory(a, !1), this.previousHash = window.location.hash.substring(1)),
                    this.updatePreviousBookmark = !this.nextHashParam,
                    void(c && this._updatePreviousBookmark())
                }
                if (this.nextHashParam) {
                    if (this.nextHashParam === a.hash) return this.nextHashParam = null,
                    void(this.updatePreviousBookmark = !0);
                    this.nextHashParam = null
                }
                a.hash ? this.current.hash ? this.current.hash !== a.hash ? this._pushToHistory(a, !0) : (!this.current.page && a.page && this._pushToHistory(a, !1, !0), this.updatePreviousBookmark = !0) : this._pushToHistory(a, !0) : this.current.page && a.page && this.current.page !== a.page && this._pushToHistory(a, !0)
            }
        },
        _getPreviousParams: function(a, b) {
            if (!this.currentBookmark || !this.currentPage) return null;
            if (this.updatePreviousBookmark && (this.updatePreviousBookmark = !1), this.uid > 0 && (!this.previousBookmark || !this.previousPage)) return null;
            if (!this.current.dest && !a || b) {
                if (this.previousBookmark === this.currentBookmark) return null
            } else {
                if (!this.current.page && !a) return null;
                if (this.previousPage === this.currentPage) return null
            }
            var c = {
                hash: this.currentBookmark,
                page: this.currentPage
            };
            return this.isViewerInPresentationMode && (c.hash = null),
            c
        },
        _stateObj: function(a) {
            return {
                fingerprint: this.fingerprint,
                uid: this.uid,
                target: a
            }
        },
        _pushToHistory: function(a, b, c) {
            if (this.initialized) {
                if (!a.hash && a.page && (a.hash = "page=" + a.page), b && !c) {
                    var d = this._getPreviousParams();
                    if (d) {
                        var e = !this.current.dest && this.current.hash !== this.previousHash;
                        this._pushToHistory(d, !1, e)
                    }
                }
                this._pushOrReplaceState(this._stateObj(a), c || 0 === this.uid),
                this.currentUid = this.uid++,
                this.current = a,
                this.updatePreviousBookmark = !0
            }
        },
        _goTo: function(a) {
            if (this.initialized && this.historyUnlocked && this._isStateObjectDefined(a)) {
                if (!this.reInitialized && a.uid < this.currentUid) {
                    var b = this._getPreviousParams(!0);
                    if (b) return this._pushToHistory(this.current, !1),
                    this._pushToHistory(b, !1),
                    this.currentUid = a.uid,
                    void window.history.back()
                }
                this.historyUnlocked = !1,
                a.target.dest ? this.linkService.navigateTo(a.target.dest) : this.linkService.setHash(a.target.hash),
                this.currentUid = a.uid,
                a.uid > this.uid && (this.uid = a.uid),
                this.current = a.target,
                this.updatePreviousBookmark = !0;
                var c = window.location.hash.substring(1);
                this.previousHash !== c && (this.allowHashChange = !1),
                this.previousHash = c,
                this.historyUnlocked = !0
            }
        },
        back: function() {
            this.go( - 1)
        },
        forward: function() {
            this.go(1)
        },
        go: function(a) {
            if (this.initialized && this.historyUnlocked) {
                var b = window.history.state;
                a === -1 && b && b.uid > 0 ? window.history.back() : 1 === a && b && b.uid < this.uid - 1 && window.history.forward()
            }
        }
    },
    b.PDFHistory = d
},
function(a, b, c) {
    var d = c(1),
    e = d.PDFJS,
    f = "–",
    g = function() {
        function a(a) {
            this.outline = null,
            this.lastToggleIsShow = !0,
            this.container = a.container,
            this.linkService = a.linkService,
            this.eventBus = a.eventBus
        }
        return a.prototype = {
            reset: function() {
                this.outline = null,
                this.lastToggleIsShow = !0,
                this.container.textContent = "",
                this.container.classList.remove("outlineWithDeepNesting")
            },
            _dispatchEvent: function(a) {
                this.eventBus.dispatch("outlineloaded", {
                    source: this,
                    outlineCount: a
                })
            },
            _bindLink: function(a, b) {
                if (b.url) return void d.addLinkAttributes(a, {
                    url: b.url,
                    target: b.newWindow ? e.LinkTarget.BLANK: void 0
                });
                var c = this,
                f = b.dest;
                a.href = c.linkService.getDestinationHash(f),
                a.onclick = function() {
                    return f && c.linkService.navigateTo(f),
                    !1
                }
            },
            _setStyles: function(a, b) {
                var c = "";
                b.bold && (c += "font-weight: bold;"),
                b.italic && (c += "font-style: italic;"),
                c && a.setAttribute("style", c)
            },
            _addToggleButton: function(a) {
                var b = document.createElement("div");
                b.className = "outlineItemToggler",
                b.onclick = function(c) {
                    if (c.stopPropagation(), b.classList.toggle("outlineItemsHidden"), c.shiftKey) {
                        var d = !b.classList.contains("outlineItemsHidden");
                        this._toggleOutlineItem(a, d)
                    }
                }.bind(this),
                a.insertBefore(b, a.firstChild)
            },
            _toggleOutlineItem: function(a, b) {
                this.lastToggleIsShow = b;
                for (var c = a.querySelectorAll(".outlineItemToggler"), d = 0, e = c.length; d < e; ++d) c[d].classList[b ? "remove": "add"]("outlineItemsHidden")
            },
            toggleOutlineTree: function() {
                this.outline && this._toggleOutlineItem(this.container, !this.lastToggleIsShow)
            },
            render: function(a) {
                var b = a && a.outline || null,
                c = 0;
                if (this.outline && this.reset(), this.outline = b, !b) return void this._dispatchEvent(c);
                for (var e = document.createDocumentFragment(), g = [{
                    parent: e,
                    items: this.outline
                }], h = !1; g.length > 0;) for (var i = g.shift(), j = 0, k = i.items.length; j < k; j++) {
                    var l = i.items[j],
                    m = document.createElement("div");
                    m.className = "outlineItem";
                    var n = document.createElement("a");
                    if (this._bindLink(n, l), this._setStyles(n, l), n.textContent = d.removeNullCharacters(l.title) || f, m.appendChild(n), l.items.length > 0) {
                        h = !0,
                        this._addToggleButton(m);
                        var o = document.createElement("div");
                        o.className = "outlineItems",
                        m.appendChild(o),
                        g.push({
                            parent: o,
                            items: l.items
                        })
                    }
                    i.parent.appendChild(m),
                    c++
                }
                h && this.container.classList.add("outlineWithDeepNesting"),
                this.container.appendChild(e),
                this._dispatchEvent(c)
            }
        },
        a
    } ();
    b.PDFOutlineViewer = g
},
function(a, b, c) {
    var d = c(0),
    e = c(3),
    f = c(2),
    g = c(1),
    h = d.CSS_UNITS,
    i = d.DEFAULT_SCALE,
    j = d.getOutputScale,
    k = d.approximateFraction,
    l = d.roundToDivide,
    m = d.RendererType,
    n = e.RenderingStates,
    o = 200,
    p = function() {
        function a(a) {
            var b = a.container,
            c = a.id,
            d = a.scale,
            e = a.defaultViewport,
            g = a.renderingQueue,
            h = a.textLayerFactory,
            j = a.annotationLayerFactory,
            k = a.enhanceTextSelection || !1,
            l = a.renderInteractiveForms || !1;
            this.id = c,
            this.renderingId = "page" + c,
            this.pageLabel = null,
            this.rotation = 0,
            this.scale = d || i,
            this.viewport = e,
            this.pdfPageRotate = e.rotation,
            this.hasRestrictedScaling = !1,
            this.enhanceTextSelection = k,
            this.renderInteractiveForms = l,
            this.eventBus = a.eventBus || f.getGlobalEventBus(),
            this.renderingQueue = g,
            this.textLayerFactory = h,
            this.annotationLayerFactory = j,
            this.renderer = a.renderer || m.CANVAS,
            this.paintTask = null,
            this.paintedViewportMap = new WeakMap,
            this.renderingState = n.INITIAL,
            this.resume = null,
            this.error = null,
            this.onBeforeDraw = null,
            this.onAfterDraw = null,
            this.textLayer = null,
            this.zoomLayer = null,
            this.annotationLayer = null;
            var o = document.createElement("div");
            o.className = "page",
            o.style.width = Math.floor(this.viewport.width) + "px",
            o.style.height = Math.floor(this.viewport.height) + "px",
            o.setAttribute("data-page-number", this.id),
            this.div = o,
            b.appendChild(o)
        }
        return a.prototype = {
            setPdfPage: function(a) {
                this.pdfPage = a,
                this.pdfPageRotate = a.rotate;
                var b = (this.rotation + this.pdfPageRotate) % 360;
                this.viewport = a.getViewport(this.scale * h, b),
                this.stats = a.stats,
                this.reset()
            },
            destroy: function() {
                this.zoomLayer = null,
                this.reset(),
                this.pdfPage && this.pdfPage.cleanup()
            },
            reset: function(a, b) {
                this.cancelRendering();
                var c = this.div;
                c.style.width = Math.floor(this.viewport.width) + "px",
                c.style.height = Math.floor(this.viewport.height) + "px";
                for (var d = c.childNodes,
                e = a && this.zoomLayer || null,
                f = b && this.annotationLayer && this.annotationLayer.div || null,
                g = d.length - 1; g >= 0; g--) {
                    var h = d[g];
                    e !== h && f !== h && c.removeChild(h)
                }
                c.removeAttribute("data-loaded"),
                f ? this.annotationLayer.hide() : this.annotationLayer = null,
                this.canvas && !e && (this.paintedViewportMap.delete(this.canvas), this.canvas.width = 0, this.canvas.height = 0, delete this.canvas),
                this.svg && (this.paintedViewportMap.delete(this.svg), delete this.svg),
                this.loadingIconDiv = document.createElement("div"),
                this.loadingIconDiv.className = "loadingIcon",
                c.appendChild(this.loadingIconDiv)
            },
            update: function(a, b) {
                this.scale = a || this.scale,
                "undefined" != typeof b && (this.rotation = b);
                var c = (this.rotation + this.pdfPageRotate) % 360;
                if (this.viewport = this.viewport.clone({
                    scale: this.scale * h,
                    rotation: c
                }), this.svg) return this.cssTransform(this.svg, !0),
                void this.eventBus.dispatch("pagerendered", {
                    source: this,
                    pageNumber: this.id,
                    cssTransform: !0
                });
                var d = !1;
                if (this.canvas && g.PDFJS.maxCanvasPixels > 0) {
                    var e = this.outputScale; (Math.floor(this.viewport.width) * e.sx | 0) * (Math.floor(this.viewport.height) * e.sy | 0) > g.PDFJS.maxCanvasPixels && (d = !0)
                }
                if (this.canvas) {
                    if (g.PDFJS.useOnlyCssZoom || this.hasRestrictedScaling && d) return this.cssTransform(this.canvas, !0),
                    void this.eventBus.dispatch("pagerendered", {
                        source: this,
                        pageNumber: this.id,
                        cssTransform: !0
                    });
                    this.zoomLayer || (this.zoomLayer = this.canvas.parentNode, this.zoomLayer.style.position = "absolute")
                }
                this.zoomLayer && this.cssTransform(this.zoomLayer.firstChild),
                this.reset(!0, !0)
            },
            cancelRendering: function() {
                this.paintTask && (this.paintTask.cancel(), this.paintTask = null),
                this.renderingState = n.INITIAL,
                this.resume = null,
                this.textLayer && (this.textLayer.cancel(), this.textLayer = null)
            },
            updatePosition: function() {
                this.textLayer && this.textLayer.render(o)
            },
            cssTransform: function(a, b) {
                var c = g.CustomStyle,
                d = this.viewport.width,
                e = this.viewport.height,
                f = this.div;
                a.style.width = a.parentNode.style.width = f.style.width = Math.floor(d) + "px",
                a.style.height = a.parentNode.style.height = f.style.height = Math.floor(e) + "px";
                var h = this.viewport.rotation - this.paintedViewportMap.get(a).rotation,
                i = Math.abs(h),
                j = 1,
                k = 1;
                90 !== i && 270 !== i || (j = e / d, k = d / e);
                var l = "rotate(" + h + "deg) scale(" + j + "," + k + ")";
                if (c.setProp("transform", a, l), this.textLayer) {
                    var m = this.textLayer.viewport,
                    n = this.viewport.rotation - m.rotation,
                    o = Math.abs(n),
                    p = d / m.width;
                    90 !== o && 270 !== o || (p = d / m.height);
                    var q, r, s = this.textLayer.textLayerDiv;
                    switch (o) {
                    case 0:
                        q = r = 0;
                        break;
                    case 90:
                        q = 0,
                        r = "-" + s.style.height;
                        break;
                    case 180:
                        q = "-" + s.style.width,
                        r = "-" + s.style.height;
                        break;
                    case 270:
                        q = "-" + s.style.width,
                        r = 0;
                        break;
                    default:
                        console.error("Bad rotation value.")
                    }
                    c.setProp("transform", s, "rotate(" + o + "deg) scale(" + p + ", " + p + ") translate(" + q + ", " + r + ")"),
                    c.setProp("transformOrigin", s, "0% 0%")
                }
                b && this.annotationLayer && this.annotationLayer.render(this.viewport, "display");
            },
            get width() {
                return this.viewport.width
            },
            get height() {
                return this.viewport.height
            },
            getPagePoint: function(a, b) {
                return this.viewport.convertToPdfPoint(a, b)
            },
            draw: function() {
                this.renderingState !== n.INITIAL && (console.error("Must be in new state before drawing"), this.reset()),
                this.renderingState = n.RUNNING;
                var a = this,
                b = this.pdfPage,
                c = this.div,
                d = document.createElement("div");
                d.style.width = c.style.width,
                d.style.height = c.style.height,
                d.classList.add("canvasWrapper"),
                this.annotationLayer && this.annotationLayer.div ? c.insertBefore(d, this.annotationLayer.div) : c.appendChild(d);
                var e = null,
                f = null;
                this.textLayerFactory && (e = document.createElement("div"), e.className = "textLayer", e.style.width = d.style.width, e.style.height = d.style.height, this.annotationLayer && this.annotationLayer.div ? c.insertBefore(e, this.annotationLayer.div) : c.appendChild(e), f = this.textLayerFactory.createTextLayerBuilder(e, this.id - 1, this.viewport, this.enhanceTextSelection)),
                this.textLayer = f;
                var g = null;
                this.renderingQueue && (g = function(b) {
                    return a.renderingQueue.isHighestPriority(a) ? void b() : (a.renderingState = n.PAUSED, void(a.resume = function() {
                        a.renderingState = n.RUNNING,
                        b()
                    }))
                });
                var h = function(d) {
                    if (i === a.paintTask && (a.paintTask = null), "cancelled" === d) return a.error = null,
                    Promise.resolve(void 0);
                    if (a.renderingState = n.FINISHED, a.loadingIconDiv && (c.removeChild(a.loadingIconDiv), delete a.loadingIconDiv), a.zoomLayer) {
                        var e = a.zoomLayer.firstChild;
                        a.paintedViewportMap.delete(e),
                        e.width = 0,
                        e.height = 0,
                        c.contains(a.zoomLayer) && c.removeChild(a.zoomLayer),
                        a.zoomLayer = null
                    }
                    return a.error = d,
                    a.stats = b.stats,
                    a.onAfterDraw && a.onAfterDraw(),
                    a.eventBus.dispatch("pagerendered", {
                        source: a,
                        pageNumber: a.id,
                        cssTransform: !1
                    }),
                    d ? Promise.reject(d) : Promise.resolve(void 0)
                },
                i = this.renderer === m.SVG ? this.paintOnSvg(d) : this.paintOnCanvas(d);
                i.onRenderContinue = g,
                this.paintTask = i;
                var j = i.promise.then(function() {
                    return h(null).then(function() {
                        f && b.getTextContent({
                            normalizeWhitespace: !0
                        }).then(function(a) {
                            f.setTextContent(a),
                            f.render(o)
                        })
                    })
                },
                function(a) {
                    return h(a)
                });
                return this.annotationLayerFactory && (this.annotationLayer || (this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(c, b, this.renderInteractiveForms)), this.annotationLayer.render(this.viewport, "display")),
                c.setAttribute("data-loaded", !0),
                this.onBeforeDraw && this.onBeforeDraw(),
                j
            },
            paintOnCanvas: function(a) {
                var b, c, d = new Promise(function(a, d) {
                    b = a,
                    c = d
                }),
                e = {
                    promise: d,
                    onRenderContinue: function(a) {
                        a()
                    },
                    cancel: function() {
                        x.cancel()
                    }
                },
                f = this.viewport,
                i = document.createElement("canvas");
                i.id = "page" + this.id,
                i.setAttribute("hidden", "hidden");
                var m = !0,
                n = function() {
                    m && (i.removeAttribute("hidden"), m = !1)
                };
                a.appendChild(i),
                this.canvas = i,
                i.mozOpaque = !0;
                var o = i.getContext("2d", {
                    alpha: !1
                }),
                p = j(o);
                if (this.outputScale = p, g.PDFJS.useOnlyCssZoom) {
                    var q = f.clone({
                        scale: h
                    });
                    p.sx *= q.width / f.width,
                    p.sy *= q.height / f.height,
                    p.scaled = !0
                }
                if (g.PDFJS.maxCanvasPixels > 0) {
                    var r = f.width * f.height,
                    s = Math.sqrt(g.PDFJS.maxCanvasPixels / r);
                    p.sx > s || p.sy > s ? (p.sx = s, p.sy = s, p.scaled = !0, this.hasRestrictedScaling = !0) : this.hasRestrictedScaling = !1
                }
                var t = k(p.sx),
                u = k(p.sy);
                i.width = l(f.width * p.sx, t[0]),
                i.height = l(f.height * p.sy, u[0]),
                i.style.width = l(f.width, t[1]) + "px",
                i.style.height = l(f.height, u[1]) + "px",
                this.paintedViewportMap.set(i, f);
                var v = p.scaled ? [p.sx, 0, 0, p.sy, 0, 0] : null,
                w = {
                    canvasContext: o,
                    transform: v,
                    viewport: this.viewport,
                    renderInteractiveForms: this.renderInteractiveForms
                },
                x = this.pdfPage.render(w);
                return x.onContinue = function(a) {
                    n(),
                    e.onRenderContinue ? e.onRenderContinue(a) : a()
                },
                x.promise.then(function() {
                    n(),
                    b(void 0)
                },
                function(a) {
                    n(),
                    c(a)
                }),
                e
            },
            paintOnSvg: function(a) {
                var b = !1,
                c = function() {
                    if (b) throw "cancelled"
                },
                d = this,
                e = this.pdfPage,
                f = g.SVGGraphics,
                i = this.viewport.clone({
                    scale: h
                }),
                j = e.getOperatorList().then(function(b) {
                    c();
                    var g = new f(e.commonObjs, e.objs);
                    return g.getSVG(b, i).then(function(b) {
                        c(),
                        d.svg = b,
                        d.paintedViewportMap.set(b, i),
                        b.style.width = a.style.width,
                        b.style.height = a.style.height,
                        d.renderingState = n.FINISHED,
                        a.appendChild(b)
                    })
                });
                return {
                    promise: j,
                    onRenderContinue: function(a) {
                        a()
                    },
                    cancel: function() {
                        b = !0
                    }
                }
            },
            setPageLabel: function(a) {
                this.pageLabel = "string" == typeof a ? a: null,
                null !== this.pageLabel ? this.div.setAttribute("data-page-label", this.pageLabel) : this.div.removeAttribute("data-page-label")
            }
        },
        a
    } ();
    b.PDFPageView = p
},
function(a, b, c) {
    var d = c(0),
    e = d.normalizeWheelEventDelta,
    f = 1500,
    g = 3e3,
    h = "pdfPresentationMode",
    i = "pdfPresentationModeControls",
    j = function() {
        function a(a) {
            this.container = a.container,
            this.viewer = a.viewer || a.container.firstElementChild,
            this.pdfViewer = a.pdfViewer,
            this.eventBus = a.eventBus;
            var b = a.contextMenuItems || null;
            this.active = !1,
            this.args = null,
            this.contextMenuOpen = !1,
            this.mouseScrollTimeStamp = 0,
            this.mouseScrollDelta = 0,
            this.touchSwipeState = null,
            b && (b.contextFirstPage.addEventListener("click",
            function(a) {
                this.contextMenuOpen = !1,
                this.eventBus.dispatch("firstpage")
            }.bind(this)), b.contextLastPage.addEventListener("click",
            function(a) {
                this.contextMenuOpen = !1,
                this.eventBus.dispatch("lastpage")
            }.bind(this)), b.contextPageRotateCw.addEventListener("click",
            function(a) {
                this.contextMenuOpen = !1,
                this.eventBus.dispatch("rotatecw")
            }.bind(this)), b.contextPageRotateCcw.addEventListener("click",
            function(a) {
                this.contextMenuOpen = !1,
                this.eventBus.dispatch("rotateccw")
            }.bind(this)))
        }
        return a.prototype = {
            request: function() {
                if (this.switchInProgress || this.active || !this.viewer.hasChildNodes()) return ! 1;
                if (this._addFullscreenChangeListeners(), this._setSwitchInProgress(), this._notifyStateChange(), this.container.requestFullscreen) this.container.requestFullscreen();
                else if (this.container.mozRequestFullScreen) this.container.mozRequestFullScreen();
                else if (this.container.webkitRequestFullscreen) this.container.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
                else {
                    if (!this.container.msRequestFullscreen) return ! 1;
                    this.container.msRequestFullscreen()
                }
                return this.args = {
                    page: this.pdfViewer.currentPageNumber,
                    previousScale: this.pdfViewer.currentScaleValue
                },
                !0
            },
            _mouseWheel: function(a) {
                if (this.active) {
                    a.preventDefault();
                    var b = e(a),
                    c = 50,
                    d = .1,
                    f = (new Date).getTime(),
                    g = this.mouseScrollTimeStamp;
                    if (! (f > g && f - g < c) && ((this.mouseScrollDelta > 0 && b < 0 || this.mouseScrollDelta < 0 && b > 0) && this._resetMouseScrollState(), this.mouseScrollDelta += b, Math.abs(this.mouseScrollDelta) >= d)) {
                        var h = this.mouseScrollDelta;
                        this._resetMouseScrollState();
                        var i = h > 0 ? this._goToPreviousPage() : this._goToNextPage();
                        i && (this.mouseScrollTimeStamp = f)
                    }
                }
            },
            get isFullscreen() {
                return !! (document.fullscreenElement || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement)
            },
            _goToPreviousPage: function() {
                var a = this.pdfViewer.currentPageNumber;
                return ! (a <= 1) && (this.pdfViewer.currentPageNumber = a - 1, !0)
            },
            _goToNextPage: function() {
                var a = this.pdfViewer.currentPageNumber;
                return ! (a >= this.pdfViewer.pagesCount) && (this.pdfViewer.currentPageNumber = a + 1, !0)
            },
            _notifyStateChange: function() {
                this.eventBus.dispatch("presentationmodechanged", {
                    source: this,
                    active: this.active,
                    switchInProgress: !!this.switchInProgress
                })
            },
            _setSwitchInProgress: function() {
                this.switchInProgress && clearTimeout(this.switchInProgress),
                this.switchInProgress = setTimeout(function() {
                    this._removeFullscreenChangeListeners(),
                    delete this.switchInProgress,
                    this._notifyStateChange()
                }.bind(this), f)
            },
            _resetSwitchInProgress: function() {
                this.switchInProgress && (clearTimeout(this.switchInProgress), delete this.switchInProgress)
            },
            _enter: function() {
                this.active = !0,
                this._resetSwitchInProgress(),
                this._notifyStateChange(),
                this.container.classList.add(h),
                setTimeout(function() {
                    this.pdfViewer.currentPageNumber = this.args.page,
                    this.pdfViewer.currentScaleValue = "page-fit"
                }.bind(this), 0),
                this._addWindowListeners(),
                this._showControls(),
                this.contextMenuOpen = !1,
                this.container.setAttribute("contextmenu", "viewerContextMenu"),
                window.getSelection().removeAllRanges()
            },
            _exit: function() {
                var a = this.pdfViewer.currentPageNumber;
                this.container.classList.remove(h),
                setTimeout(function() {
                    this.active = !1,
                    this._removeFullscreenChangeListeners(),
                    this._notifyStateChange(),
                    this.pdfViewer.currentScaleValue = this.args.previousScale,
                    this.pdfViewer.currentPageNumber = a,
                    this.args = null
                }.bind(this), 0),
                this._removeWindowListeners(),
                this._hideControls(),
                this._resetMouseScrollState(),
                this.container.removeAttribute("contextmenu"),
                this.contextMenuOpen = !1
            },
            _mouseDown: function(a) {
                if (this.contextMenuOpen) return this.contextMenuOpen = !1,
                void a.preventDefault();
                if (0 === a.button) {
                    var b = a.target.href && a.target.classList.contains("internalLink");
                    b || (a.preventDefault(), this.pdfViewer.currentPageNumber += a.shiftKey ? -1 : 1)
                }
            },
            _contextMenu: function() {
                this.contextMenuOpen = !0
            },
            _showControls: function() {
                this.controlsTimeout ? clearTimeout(this.controlsTimeout) : this.container.classList.add(i),
                this.controlsTimeout = setTimeout(function() {
                    this.container.classList.remove(i),
                    delete this.controlsTimeout
                }.bind(this), g)
            },
            _hideControls: function() {
                this.controlsTimeout && (clearTimeout(this.controlsTimeout), this.container.classList.remove(i), delete this.controlsTimeout)
            },
            _resetMouseScrollState: function() {
                this.mouseScrollTimeStamp = 0,
                this.mouseScrollDelta = 0
            },
            _touchSwipe: function(a) {
                if (this.active) {
                    var b = 50,
                    c = Math.PI / 6;
                    if (a.touches.length > 1) return void(this.touchSwipeState = null);
                    switch (a.type) {
                    case "touchstart":
                        this.touchSwipeState = {
                            startX: a.touches[0].pageX,
                            startY: a.touches[0].pageY,
                            endX: a.touches[0].pageX,
                            endY: a.touches[0].pageY
                        };
                        break;
                    case "touchmove":
                        if (null === this.touchSwipeState) return;
                        this.touchSwipeState.endX = a.touches[0].pageX,
                        this.touchSwipeState.endY = a.touches[0].pageY,
                        a.preventDefault();
                        break;
                    case "touchend":
                        if (null === this.touchSwipeState) return;
                        var d = 0,
                        e = this.touchSwipeState.endX - this.touchSwipeState.startX,
                        f = this.touchSwipeState.endY - this.touchSwipeState.startY,
                        g = Math.abs(Math.atan2(f, e));
                        Math.abs(e) > b && (g <= c || g >= Math.PI - c) ? d = e: Math.abs(f) > b && Math.abs(g - Math.PI / 2) <= c && (d = f),
                        d > 0 ? this._goToPreviousPage() : d < 0 && this._goToNextPage()
                    }
                }
            },
            _addWindowListeners: function() {
                this.showControlsBind = this._showControls.bind(this),
                this.mouseDownBind = this._mouseDown.bind(this),
                this.mouseWheelBind = this._mouseWheel.bind(this),
                this.resetMouseScrollStateBind = this._resetMouseScrollState.bind(this),
                this.contextMenuBind = this._contextMenu.bind(this),
                this.touchSwipeBind = this._touchSwipe.bind(this),
                window.addEventListener("mousemove", this.showControlsBind),
                window.addEventListener("mousedown", this.mouseDownBind),
                window.addEventListener("wheel", this.mouseWheelBind),
                window.addEventListener("keydown", this.resetMouseScrollStateBind),
                window.addEventListener("contextmenu", this.contextMenuBind),
                window.addEventListener("touchstart", this.touchSwipeBind),
                window.addEventListener("touchmove", this.touchSwipeBind),
                window.addEventListener("touchend", this.touchSwipeBind)
            },
            _removeWindowListeners: function() {
                window.removeEventListener("mousemove", this.showControlsBind),
                window.removeEventListener("mousedown", this.mouseDownBind),
                window.removeEventListener("wheel", this.mouseWheelBind),
                window.removeEventListener("keydown", this.resetMouseScrollStateBind),
                window.removeEventListener("contextmenu", this.contextMenuBind),
                window.removeEventListener("touchstart", this.touchSwipeBind),
                window.removeEventListener("touchmove", this.touchSwipeBind),
                window.removeEventListener("touchend", this.touchSwipeBind),
                delete this.showControlsBind,
                delete this.mouseDownBind,
                delete this.mouseWheelBind,
                delete this.resetMouseScrollStateBind,
                delete this.contextMenuBind,
                delete this.touchSwipeBind
            },
            _fullscreenChange: function() {
                this.isFullscreen ? this._enter() : this._exit()
            },
            _addFullscreenChangeListeners: function() {
                this.fullscreenChangeBind = this._fullscreenChange.bind(this),
                window.addEventListener("fullscreenchange", this.fullscreenChangeBind),
                window.addEventListener("mozfullscreenchange", this.fullscreenChangeBind),
                window.addEventListener("webkitfullscreenchange", this.fullscreenChangeBind),
                window.addEventListener("MSFullscreenChange", this.fullscreenChangeBind)
            },
            _removeFullscreenChangeListeners: function() {
                window.removeEventListener("fullscreenchange", this.fullscreenChangeBind),
                window.removeEventListener("mozfullscreenchange", this.fullscreenChangeBind),
                window.removeEventListener("webkitfullscreenchange", this.fullscreenChangeBind),
                window.removeEventListener("MSFullscreenChange", this.fullscreenChangeBind),
                delete this.fullscreenChangeBind
            }
        },
        a
    } ();
    b.PDFPresentationMode = j
},
function(a, b, c) {
    var d = c(3),
    e = c(0),
    f = d.RenderingStates,
    g = e.mozL10n,
    h = "pdfSidebarNotification",
    i = {
        NONE: 0,
        THUMBS: 1,
        OUTLINE: 2,
        ATTACHMENTS: 3
    },
    j = function() {
        function a(a) {
            this.isOpen = !1,
            this.active = i.THUMBS,
            this.isInitialViewSet = !1,
            this.onToggled = null,
            this.pdfViewer = a.pdfViewer,
            this.pdfThumbnailViewer = a.pdfThumbnailViewer,
            this.pdfOutlineViewer = a.pdfOutlineViewer,
            this.mainContainer = a.mainContainer,
            this.outerContainer = a.outerContainer,
            this.eventBus = a.eventBus,
            this.toggleButton = a.toggleButton,
            this.thumbnailButton = a.thumbnailButton,
            this.outlineButton = a.outlineButton,
            this.attachmentsButton = a.attachmentsButton,
            this.thumbnailView = a.thumbnailView,
            this.outlineView = a.outlineView,
            this.attachmentsView = a.attachmentsView,
            this.disableNotification = a.disableNotification || !1,
            this._addEventListeners()
        }
        return a.prototype = {
            reset: function() {
                this.isInitialViewSet = !1,
                this._hideUINotification(null),
                this.switchView(i.THUMBS),
                this.outlineButton.disabled = !1,
                this.attachmentsButton.disabled = !1
            },
            get visibleView() {
                return this.isOpen ? this.active: i.NONE
            },
            get isThumbnailViewVisible() {
                return this.isOpen && this.active === i.THUMBS
            },
            get isOutlineViewVisible() {
                return this.isOpen && this.active === i.OUTLINE
            },
            get isAttachmentsViewVisible() {
                return this.isOpen && this.active === i.ATTACHMENTS
            },
            setInitialView: function(a) {
                if (!this.isInitialViewSet) {
                    if (this.isInitialViewSet = !0, this.isOpen && a === i.NONE) return void this._dispatchEvent();
                    var b = a === this.visibleView;
                    this.switchView(a, !0),
                    b && this._dispatchEvent()
                }
            },
            switchView: function(a, b) {
                if (a === i.NONE) return void this.close();
                var c = a !== this.active,
                d = !1;
                switch (a) {
                case i.THUMBS:
                    this.thumbnailButton.classList.add("toggled"),
                    this.outlineButton.classList.remove("toggled"),
                    this.attachmentsButton.classList.remove("toggled"),
                    this.thumbnailView.classList.remove("hidden"),
                    this.outlineView.classList.add("hidden"),
                    this.attachmentsView.classList.add("hidden"),
                    this.isOpen && c && (this._updateThumbnailViewer(), d = !0);
                    break;
                case i.OUTLINE:
                    if (this.outlineButton.disabled) return;
                    this.thumbnailButton.classList.remove("toggled"),
                    this.outlineButton.classList.add("toggled"),
                    this.attachmentsButton.classList.remove("toggled"),
                    this.thumbnailView.classList.add("hidden"),
                    this.outlineView.classList.remove("hidden"),
                    this.attachmentsView.classList.add("hidden");
                    break;
                case i.ATTACHMENTS:
                    if (this.attachmentsButton.disabled) return;
                    this.thumbnailButton.classList.remove("toggled"),
                    this.outlineButton.classList.remove("toggled"),
                    this.attachmentsButton.classList.add("toggled"),
                    this.thumbnailView.classList.add("hidden"),
                    this.outlineView.classList.add("hidden"),
                    this.attachmentsView.classList.remove("hidden");
                    break;
                default:
                    return void console.error('PDFSidebar_switchView: "' + a + '" is an unsupported value.')
                }
                return this.active = 0 | a,
                b && !this.isOpen ? void this.open() : (d && this._forceRendering(), c && this._dispatchEvent(), void this._hideUINotification(this.active))
            },
            open: function() {
                this.isOpen || (this.isOpen = !0, this.toggleButton.classList.add("toggled"), this.outerContainer.classList.add("sidebarMoving"), this.outerContainer.classList.add("sidebarOpen"), this.active === i.THUMBS && this._updateThumbnailViewer(), this._forceRendering(), this._dispatchEvent(), this._hideUINotification(this.active))
            },
            close: function() {
                this.isOpen && (this.isOpen = !1, this.toggleButton.classList.remove("toggled"), this.outerContainer.classList.add("sidebarMoving"), this.outerContainer.classList.remove("sidebarOpen"), this._forceRendering(), this._dispatchEvent())
            },
            toggle: function() {
                this.isOpen ? this.close() : this.open()
            },
            _dispatchEvent: function() {
                this.eventBus.dispatch("sidebarviewchanged", {
                    source: this,
                    view: this.visibleView
                })
            },
            _forceRendering: function() {
                this.onToggled ? this.onToggled() : (this.pdfViewer.forceRendering(), this.pdfThumbnailViewer.forceRendering())
            },
            _updateThumbnailViewer: function() {
                for (var a = this.pdfViewer,
                b = this.pdfThumbnailViewer,
                c = a.pagesCount,
                d = 0; d < c; d++) {
                    var e = a.getPageView(d);
                    if (e && e.renderingState === f.FINISHED) {
                        var g = b.getThumbnail(d);
                        g.setImage(e)
                    }
                }
                b.scrollThumbnailIntoView(a.currentPageNumber)
            },
            _showUINotification: function(a) {
                if (!this.disableNotification) {
                    if (this.toggleButton.title = g.get("toggle_sidebar_notification.title", null, "Toggle Sidebar (document contains outline/attachments)"), this.isOpen) {
                        if (a === this.active) return
                    } else this.toggleButton.classList.add(h);
                    switch (a) {
                    case i.OUTLINE:
                        this.outlineButton.classList.add(h);
                        break;
                    case i.ATTACHMENTS:
                        this.attachmentsButton.classList.add(h)
                    }
                }
            },
            _hideUINotification: function(a) {
                if (!this.disableNotification) {
                    var b = function(a) {
                        switch (a) {
                        case i.OUTLINE:
                            this.outlineButton.classList.remove(h);
                            break;
                        case i.ATTACHMENTS:
                            this.attachmentsButton.classList.remove(h)
                        }
                    }.bind(this);
                    if (this.isOpen || null === a) {
                        if (this.toggleButton.classList.remove(h), null !== a) return void b(a);
                        for (a in i) b(i[a]);
                        this.toggleButton.title = g.get("toggle_sidebar.title", null, "Toggle Sidebar")
                    }
                }
            },
            _addEventListeners: function() {
                var a = this;
                a.mainContainer.addEventListener("transitionend",
                function(b) {
                    b.target === this && a.outerContainer.classList.remove("sidebarMoving")
                }),
                a.thumbnailButton.addEventListener("click",
                function() {
                    a.switchView(i.THUMBS)
                }),
                a.outlineButton.addEventListener("click",
                function() {
                    a.switchView(i.OUTLINE)
                }),
                a.outlineButton.addEventListener("dblclick",
                function() {
                    a.pdfOutlineViewer.toggleOutlineTree()
                }),
                a.attachmentsButton.addEventListener("click",
                function() {
                    a.switchView(i.ATTACHMENTS)
                }),
                a.eventBus.on("outlineloaded",
                function(b) {
                    var c = b.outlineCount;
                    a.outlineButton.disabled = !c,
                    c ? a._showUINotification(i.OUTLINE) : a.active === i.OUTLINE && a.switchView(i.THUMBS)
                }),
                a.eventBus.on("attachmentsloaded",
                function(b) {
                    var c = b.attachmentsCount;
                    a.attachmentsButton.disabled = !c,
                    c ? a._showUINotification(i.ATTACHMENTS) : a.active === i.ATTACHMENTS && a.switchView(i.THUMBS)
                }),
                a.eventBus.on("presentationmodechanged",
                function(b) {
                    b.active || b.switchInProgress || !a.isThumbnailViewVisible || a._updateThumbnailViewer()
                })
            }
        },
        a
    } ();
    b.SidebarView = i,
    b.PDFSidebar = j
},
function(a, b, c) {
    var d = c(0),
    e = c(3),
    f = d.mozL10n,
    g = d.getOutputScale,
    h = e.RenderingStates,
    i = 98,
    j = 1,
    k = function() {
        function a(a, c) {
            var d = b.tempImageCache;
            d || (d = document.createElement("canvas"), b.tempImageCache = d),
            d.width = a,
            d.height = c,
            d.mozOpaque = !0;
            var e = d.getContext("2d", {
                alpha: !1
            });
            return e.save(),
            e.fillStyle = "rgb(255, 255, 255)",
            e.fillRect(0, 0, a, c),
            e.restore(),
            d
        }
        function b(a) {
            var b = a.container,
            c = a.id,
            d = a.defaultViewport,
            e = a.linkService,
            g = a.renderingQueue,
            k = a.disableCanvasToImageConversion || !1;
            this.id = c,
            this.renderingId = "thumbnail" + c,
            this.pageLabel = null,
            this.pdfPage = null,
            this.rotation = 0,
            this.viewport = d,
            this.pdfPageRotate = d.rotation,
            this.linkService = e,
            this.renderingQueue = g,
            this.renderTask = null,
            this.renderingState = h.INITIAL,
            this.resume = null,
            this.disableCanvasToImageConversion = k,
            this.pageWidth = this.viewport.width,
            this.pageHeight = this.viewport.height,
            this.pageRatio = this.pageWidth / this.pageHeight,
            this.canvasWidth = i,
            this.canvasHeight = this.canvasWidth / this.pageRatio | 0,
            this.scale = this.canvasWidth / this.pageWidth;
            var l = document.createElement("a");
            l.href = e.getAnchorUrl("#page=" + c),
            l.title = f.get("thumb_page_title", {
                page: c
            },
            "Page {{page}}"),
            l.onclick = function() {
                return e.page = c,
                !1
            },
            this.anchor = l;
            var m = document.createElement("div");
            m.className = "thumbnail",
            m.setAttribute("data-page-number", this.id),
            this.div = m,
            1 === c && m.classList.add("selected");
            var n = document.createElement("div");
            n.className = "thumbnailSelectionRing";
            var o = 2 * j;
            n.style.width = this.canvasWidth + o + "px",
            n.style.height = this.canvasHeight + o + "px",
            this.ring = n,
            m.appendChild(n),
            l.appendChild(m),
            b.appendChild(l)
        }
        return b.prototype = {
            setPdfPage: function(a) {
                this.pdfPage = a,
                this.pdfPageRotate = a.rotate;
                var b = (this.rotation + this.pdfPageRotate) % 360;
                this.viewport = a.getViewport(1, b),
                this.reset()
            },
            reset: function() {
                this.cancelRendering(),
                this.pageWidth = this.viewport.width,
                this.pageHeight = this.viewport.height,
                this.pageRatio = this.pageWidth / this.pageHeight,
                this.canvasHeight = this.canvasWidth / this.pageRatio | 0,
                this.scale = this.canvasWidth / this.pageWidth,
                this.div.removeAttribute("data-loaded");
                for (var a = this.ring,
                b = a.childNodes,
                c = b.length - 1; c >= 0; c--) a.removeChild(b[c]);
                var d = 2 * j;
                a.style.width = this.canvasWidth + d + "px",
                a.style.height = this.canvasHeight + d + "px",
                this.canvas && (this.canvas.width = 0, this.canvas.height = 0, delete this.canvas),
                this.image && (this.image.removeAttribute("src"), delete this.image)
            },
            update: function(a) {
                "undefined" != typeof a && (this.rotation = a);
                var b = (this.rotation + this.pdfPageRotate) % 360;
                this.viewport = this.viewport.clone({
                    scale: 1,
                    rotation: b
                }),
                this.reset()
            },
            cancelRendering: function() {
                this.renderTask && (this.renderTask.cancel(), this.renderTask = null),
                this.renderingState = h.INITIAL,
                this.resume = null
            },
            _getPageDrawContext: function(a) {
                var b = document.createElement("canvas");
                this.canvas = b,
                b.mozOpaque = !0;
                var c = b.getContext("2d", {
                    alpha: !1
                }),
                d = g(c);
                return b.width = this.canvasWidth * d.sx | 0,
                b.height = this.canvasHeight * d.sy | 0,
                b.style.width = this.canvasWidth + "px",
                b.style.height = this.canvasHeight + "px",
                !a && d.scaled && c.scale(d.sx, d.sy),
                c
            },
            _convertCanvasToImage: function() {
                if (this.canvas && this.renderingState === h.FINISHED) {
                    var a = this.renderingId,
                    b = "thumbnailImage",
                    c = f.get("thumb_page_canvas", {
                        page: this.pageId
                    },
                    "Thumbnail of Page {{page}}");
                    if (this.disableCanvasToImageConversion) return this.canvas.id = a,
                    this.canvas.className = b,
                    this.canvas.setAttribute("aria-label", c),
                    this.div.setAttribute("data-loaded", !0),
                    void this.ring.appendChild(this.canvas);
                    var d = document.createElement("img");
                    d.id = a,
                    d.className = b,
                    d.setAttribute("aria-label", c),
                    d.style.width = this.canvasWidth + "px",
                    d.style.height = this.canvasHeight + "px",
                    d.src = this.canvas.toDataURL(),
                    this.image = d,
                    this.div.setAttribute("data-loaded", !0),
                    this.ring.appendChild(d),
                    this.canvas.width = 0,
                    this.canvas.height = 0,
                    delete this.canvas
                }
            },
            draw: function() {
                function a(a) {
                    return k === e.renderTask && (e.renderTask = null),
                    "cancelled" === a ? void c(a) : (e.renderingState = h.FINISHED, e._convertCanvasToImage(), void(a ? c(a) : b(void 0)))
                }
                if (this.renderingState !== h.INITIAL) return console.error("Must be in new state before drawing"),
                Promise.resolve(void 0);
                this.renderingState = h.RUNNING;
                var b, c, d = new Promise(function(a, d) {
                    b = a,
                    c = d
                }),
                e = this,
                f = this._getPageDrawContext(),
                g = this.viewport.clone({
                    scale: this.scale
                }),
                i = function(a) {
                    return e.renderingQueue.isHighestPriority(e) ? void a() : (e.renderingState = h.PAUSED, void(e.resume = function() {
                        e.renderingState = h.RUNNING,
                        a()
                    }))
                },
                j = {
                    canvasContext: f,
                    viewport: g
                },
                k = this.renderTask = this.pdfPage.render(j);
                return k.onContinue = i,
                k.promise.then(function() {
                    a(null)
                },
                function(b) {
                    a(b)
                }),
                d
            },
            setImage: function(b) {
                if (this.renderingState === h.INITIAL) {
                    var c = b.canvas;
                    if (c) {
                        this.pdfPage || this.setPdfPage(b.pdfPage),
                        this.renderingState = h.FINISHED;
                        var d = this._getPageDrawContext(!0),
                        e = d.canvas;
                        if (c.width <= 2 * e.width) return d.drawImage(c, 0, 0, c.width, c.height, 0, 0, e.width, e.height),
                        void this._convertCanvasToImage();
                        for (var f = 3,
                        g = e.width << f,
                        i = e.height << f,
                        j = a(g, i), k = j.getContext("2d"); g > c.width || i > c.height;) g >>= 1,
                        i >>= 1;
                        for (k.drawImage(c, 0, 0, c.width, c.height, 0, 0, g, i); g > 2 * e.width;) k.drawImage(j, 0, 0, g, i, 0, 0, g >> 1, i >> 1),
                        g >>= 1,
                        i >>= 1;
                        d.drawImage(j, 0, 0, g, i, 0, 0, e.width, e.height),
                        this._convertCanvasToImage()
                    }
                }
            },
            get pageId() {
                return null !== this.pageLabel ? this.pageLabel: this.id
            },
            setPageLabel: function(a) {
                if (this.pageLabel = "string" == typeof a ? a: null, this.anchor.title = f.get("thumb_page_title", {
                    page: this.pageId
                },
                "Page {{page}}"), this.renderingState === h.FINISHED) {
                    var b = f.get("thumb_page_canvas", {
                        page: this.pageId
                    },
                    "Thumbnail of Page {{page}}");
                    this.image ? this.image.setAttribute("aria-label", b) : this.disableCanvasToImageConversion && this.canvas && this.canvas.setAttribute("aria-label", b)
                }
            }
        },
        b
    } ();
    k.tempImageCache = null,
    b.PDFThumbnailView = k
},
function(a, b, c) {
    var d = c(0),
    e = c(23),
    f = d.watchScroll,
    g = d.getVisibleElements,
    h = d.scrollIntoView,
    i = e.PDFThumbnailView,
    j = -19,
    k = function() {
        function a(a) {
            this.container = a.container,
            this.renderingQueue = a.renderingQueue,
            this.linkService = a.linkService,
            this.scroll = f(this.container, this._scrollUpdated.bind(this)),
            this._resetView()
        }
        return a.prototype = {
            _scrollUpdated: function() {
                this.renderingQueue.renderHighestPriority()
            },
            getThumbnail: function(a) {
                return this.thumbnails[a]
            },
            _getVisibleThumbs: function() {
                return g(this.container, this.thumbnails)
            },
            scrollThumbnailIntoView: function(a) {
                var b = document.querySelector(".thumbnail.selected");
                b && b.classList.remove("selected");
                var c = document.querySelector('div.thumbnail[data-page-number="' + a + '"]');
                c && c.classList.add("selected");
                var d = this._getVisibleThumbs(),
                e = d.views.length;
                if (e > 0) {
                    var f = d.first.id,
                    g = e > 1 ? d.last.id: f; (a <= f || a >= g) && h(c, {
                        top: j
                    })
                }
            },
            get pagesRotation() {
                return this._pagesRotation
            },
            set pagesRotation(a) {
                this._pagesRotation = a;
                for (var b = 0,
                c = this.thumbnails.length; b < c; b++) {
                    var d = this.thumbnails[b];
                    d.update(a)
                }
            },
            cleanup: function() {
                var a = i.tempImageCache;
                a && (a.width = 0, a.height = 0),
                i.tempImageCache = null
            },
            _resetView: function() {
                this.thumbnails = [],
                this._pageLabels = null,
                this._pagesRotation = 0,
                this._pagesRequests = [],
                this.container.textContent = ""
            },
            setDocument: function(a) {
                return this.pdfDocument && (this._cancelRendering(), this._resetView()),
                this.pdfDocument = a,
                a ? a.getPage(1).then(function(b) {
                    for (var c = a.numPages,
                    d = b.getViewport(1), e = 1; e <= c; ++e) {
                        var f = new i({
                            container: this.container,
                            id: e,
                            defaultViewport: d.clone(),
                            linkService: this.linkService,
                            renderingQueue: this.renderingQueue,
                            disableCanvasToImageConversion: !1
                        });
                        this.thumbnails.push(f)
                    }
                }.bind(this)) : Promise.resolve()
            },
            _cancelRendering: function() {
                for (var a = 0,
                b = this.thumbnails.length; a < b; a++) this.thumbnails[a] && this.thumbnails[a].cancelRendering()
            },
            setPageLabels: function(a) {
                if (this.pdfDocument) {
                    a ? a instanceof Array && this.pdfDocument.numPages === a.length ? this._pageLabels = a: (this._pageLabels = null, console.error("PDFThumbnailViewer_setPageLabels: Invalid page labels.")) : this._pageLabels = null;
                    for (var b = 0,
                    c = this.thumbnails.length; b < c; b++) {
                        var d = this.thumbnails[b],
                        e = this._pageLabels && this._pageLabels[b];
                        d.setPageLabel(e)
                    }
                }
            },
            _ensurePdfPageLoaded: function(a) {
                if (a.pdfPage) return Promise.resolve(a.pdfPage);
                var b = a.id;
                if (this._pagesRequests[b]) return this._pagesRequests[b];
                var c = this.pdfDocument.getPage(b).then(function(c) {
                    return a.setPdfPage(c),
                    this._pagesRequests[b] = null,
                    c
                }.bind(this));
                return this._pagesRequests[b] = c,
                c
            },
            forceRendering: function() {
                var a = this._getVisibleThumbs(),
                b = this.renderingQueue.getHighestPriority(a, this.thumbnails, this.scroll.down);
                return !! b && (this._ensurePdfPageLoaded(b).then(function() {
                    this.renderingQueue.renderView(b)
                }.bind(this)), !0)
            }
        },
        a
    } ();
    b.PDFThumbnailViewer = k
},
function(a, b, c) {
    var d = c(0),
    e = c(20),
    f = c(3),
    g = c(27),
    h = c(10),
    i = c(5),
    j = c(2),
    k = c(1),
    l = d.UNKNOWN_SCALE,
    m = d.SCROLLBAR_PADDING,
    n = d.VERTICAL_PADDING,
    o = d.MAX_AUTO_SCALE,
    p = d.CSS_UNITS,
    q = d.DEFAULT_SCALE,
    r = d.DEFAULT_SCALE_VALUE,
    s = d.RendererType,
    t = d.scrollIntoView,
    u = d.watchScroll,
    v = d.getVisibleElements,
    w = e.PDFPageView,
    x = f.RenderingStates,
    y = f.PDFRenderingQueue,
    z = g.TextLayerBuilder,
    A = h.AnnotationLayerBuilder,
    B = i.SimpleLinkService,
    C = {
        UNKNOWN: 0,
        NORMAL: 1,
        CHANGING: 2,
        FULLSCREEN: 3
    },
    D = 10,
    E = function() {
        function a(a) {
            var b = [];
            this.push = function(c) {
                var d = b.indexOf(c);
                d >= 0 && b.splice(d, 1),
                b.push(c),
                b.length > a && b.shift().destroy()
            },
            this.resize = function(c) {
                for (a = c; b.length > a;) b.shift().destroy()
            }
        }
        function b(a, b) {
            return b === a || Math.abs(b - a) < 1e-15
        }
        function c(a) {
            return a.width <= a.height
        }
        function d(a) {
            this.container = a.container,
            this.viewer = a.viewer || a.container.firstElementChild,
            this.eventBus = a.eventBus || j.getGlobalEventBus(),
            this.linkService = a.linkService || new B,
            this.downloadManager = a.downloadManager || null,
            this.removePageBorders = a.removePageBorders || !1,
            this.enhanceTextSelection = a.enhanceTextSelection || !1,
            this.renderInteractiveForms = a.renderInteractiveForms || !1,
            this.enablePrintAutoRotate = a.enablePrintAutoRotate || !1,
            this.renderer = a.renderer || s.CANVAS,
            this.defaultRenderingQueue = !a.renderingQueue,
            this.defaultRenderingQueue ? (this.renderingQueue = new y, this.renderingQueue.setViewer(this)) : this.renderingQueue = a.renderingQueue,
            this.scroll = u(this.container, this._scrollUpdate.bind(this)),
            this.presentationModeState = C.UNKNOWN,
            this._resetView(),
            this.removePageBorders && this.viewer.classList.add("removePageBorders")
        }
        return d.prototype = {
            get pagesCount() {
                return this._pages.length
            },
            getPageView: function(a) {
                return this._pages[a]
            },
            get pageViewsReady() {
                return this._pageViewsReady
            },
            get currentPageNumber() {
                return this._currentPageNumber
            },
            set currentPageNumber(a) {
                if ((0 | a) !== a) throw new Error("Invalid page number.");
                return this.pdfDocument ? void this._setCurrentPageNumber(a, !0) : void(this._currentPageNumber = a)
            },
            _setCurrentPageNumber: function(a, b) {
                if (this._currentPageNumber === a) return void(b && this._resetCurrentPageView());
                if (! (0 < a && a <= this.pagesCount)) return void console.error('PDFViewer_setCurrentPageNumber: "' + a + '" is out of bounds.');
                var c = {
                    source: this,
                    pageNumber: a,
                    pageLabel: this._pageLabels && this._pageLabels[a - 1]
                };
                this._currentPageNumber = a,
                this.eventBus.dispatch("pagechanging", c),
                this.eventBus.dispatch("pagechange", c),
                b && this._resetCurrentPageView()
            },
            get currentPageLabel() {
                return this._pageLabels && this._pageLabels[this._currentPageNumber - 1]
            },
            set currentPageLabel(a) {
                var b = 0 | a;
                if (this._pageLabels) {
                    var c = this._pageLabels.indexOf(a);
                    c >= 0 && (b = c + 1)
                }
                this.currentPageNumber = b
            },
            get currentScale() {
                return this._currentScale !== l ? this._currentScale: q
            },
            set currentScale(a) {
                if (isNaN(a)) throw new Error("Invalid numeric scale");
                return this.pdfDocument ? void this._setScale(a, !1) : (this._currentScale = a, void(this._currentScaleValue = a !== l ? a.toString() : null))
            },
            get currentScaleValue() {
                return this._currentScaleValue
            },
            set currentScaleValue(a) {
                return this.pdfDocument ? void this._setScale(a, !1) : (this._currentScale = isNaN(a) ? l: a, void(this._currentScaleValue = a.toString()))
            },
            get pagesRotation() {
                return this._pagesRotation
            },
            set pagesRotation(a) {
                if ("number" != typeof a || a % 90 !== 0) throw new Error("Invalid pages rotation angle.");
                if (this._pagesRotation = a, this.pdfDocument) {
                    for (var b = 0,
                    c = this._pages.length; b < c; b++) {
                        var d = this._pages[b];
                        d.update(d.scale, a)
                    }
                    this._setScale(this._currentScaleValue, !0),
                    this.defaultRenderingQueue && this.update()
                }
            },
            setDocument: function(a) {
                if (this.pdfDocument && (this._cancelRendering(), this._resetView()), this.pdfDocument = a, a) {
                    var b, c = a.numPages,
                    d = this,
                    e = new Promise(function(a) {
                        b = a
                    });
                    this.pagesPromise = e,
                    e.then(function() {
                        d._pageViewsReady = !0,
                        d.eventBus.dispatch("pagesloaded", {
                            source: d,
                            pagesCount: c
                        })
                    });
                    var f = !1,
                    g = null,
                    h = new Promise(function(a) {
                        g = a
                    });
                    this.onePageRendered = h;
                    var i = function(a) {
                        a.onBeforeDraw = function() {
                            d._buffer.push(this)
                        },
                        a.onAfterDraw = function() {
                            f || (f = !0, g())
                        }
                    },
                    j = a.getPage(1);
                    return this.firstPagePromise = j,
                    j.then(function(e) {
                        for (var f = this.currentScale,
                        g = e.getViewport(f * p), j = 1; j <= c; ++j) {
                            var l = null;
                            k.PDFJS.disableTextLayer || (l = this);
                            var m = new w({
                                container: this.viewer,
                                eventBus: this.eventBus,
                                id: j,
                                scale: f,
                                defaultViewport: g.clone(),
                                renderingQueue: this.renderingQueue,
                                textLayerFactory: l,
                                annotationLayerFactory: this,
                                enhanceTextSelection: this.enhanceTextSelection,
                                renderInteractiveForms: this.renderInteractiveForms,
                                renderer: this.renderer
                            });
                            i(m),
                            this._pages.push(m)
                        }
                        var n = this.linkService;
                        h.then(function() {
                            if (k.PDFJS.disableAutoFetch) b();
                            else for (var e = c,
                            f = 1; f <= c; ++f) a.getPage(f).then(function(a, c) {
                                var f = d._pages[a - 1];
                                f.pdfPage || f.setPdfPage(c),
                                n.cachePageRef(a, c.ref),
                                e--,
                                e || b()
                            }.bind(null, f))
                        }),
                        d.eventBus.dispatch("pagesinit", {
                            source: d
                        }),
                        this.defaultRenderingQueue && this.update(),
                        this.findController && this.findController.resolveFirstPage()
                    }.bind(this))
                }
            },
            setPageLabels: function(a) {
                if (this.pdfDocument) {
                    a ? a instanceof Array && this.pdfDocument.numPages === a.length ? this._pageLabels = a: (this._pageLabels = null, console.error("PDFViewer_setPageLabels: Invalid page labels.")) : this._pageLabels = null;
                    for (var b = 0,
                    c = this._pages.length; b < c; b++) {
                        var d = this._pages[b],
                        e = this._pageLabels && this._pageLabels[b];
                        d.setPageLabel(e)
                    }
                }
            },
            _resetView: function() {
                this._pages = [],
                this._currentPageNumber = 1,
                this._currentScale = l,
                this._currentScaleValue = null,
                this._pageLabels = null,
                this._buffer = new a(D),
                this._location = null,
                this._pagesRotation = 0,
                this._pagesRequests = [],
                this._pageViewsReady = !1,
                this.viewer.textContent = ""
            },
            _scrollUpdate: function() {
                if (0 !== this.pagesCount) {
                    this.update();
                    for (var a = 0,
                    b = this._pages.length; a < b; a++) this._pages[a].updatePosition();
                }
            },
            _setScaleDispatchEvent: function(a, b, c) {
                var d = {
                    source: this,
                    scale: a,
                    presetValue: c ? b: void 0
                };
                this.eventBus.dispatch("scalechanging", d),
                this.eventBus.dispatch("scalechange", d)
            },
            _setScaleUpdatePages: function(a, c, d, e) {
                if (this._currentScaleValue = c.toString(), b(this._currentScale, a)) return void(e && this._setScaleDispatchEvent(a, c, !0));
                for (var f = 0,
                g = this._pages.length; f < g; f++) this._pages[f].update(a);
                if (this._currentScale = a, !d) {
                    var h, i = this._currentPageNumber; ! this._location || k.PDFJS.ignoreCurrentPositionOnZoom || this.isInPresentationMode || this.isChangingPresentationMode || (i = this._location.pageNumber, h = [null, {
                        name: "XYZ"
                    },
                    this._location.left, this._location.top, null]),
                    this.scrollPageIntoView({
                        pageNumber: i,
                        destArray: h,
                        allowNegativeOffset: !0
                    })
                }
                this._setScaleDispatchEvent(a, c, e),
                this.defaultRenderingQueue && this.update()
            },
            _setScale: function(a, b) {
                var c = parseFloat(a);
                if (c > 0) this._setScaleUpdatePages(c, a, b, !1);
                else {
                    var d = this._pages[this._currentPageNumber - 1];
                    if (!d) return;
                    var e = this.isInPresentationMode || this.removePageBorders ? 0 : m,
                    f = this.isInPresentationMode || this.removePageBorders ? 0 : n,
                    g = (this.container.clientWidth - e) / d.width * d.scale,
                    h = (this.container.clientHeight - f) / d.height * d.scale;
                    switch (a) {
                    case "page-actual":
                        c = 1;
                        break;
                    case "page-width":
                        c = g;
                        break;
                    case "page-height":
                        c = h;
                        break;
                    case "page-fit":
                        c = Math.min(g, h);
                        break;
                    case "auto":
                        var i = d.width > d.height,
                        j = i ? Math.min(h, g) : g;
                        c = Math.min(o, j);
                        break;
                    default:
                        return void console.error('PDFViewer_setScale: "' + a + '" is an unknown zoom value.')
                    }
                    this._setScaleUpdatePages(c, a, b, !0)
                }
            },
            _resetCurrentPageView: function() {
                this.isInPresentationMode && this._setScale(this._currentScaleValue, !0);
                var a = this._pages[this._currentPageNumber - 1];
                t(a.div)
            },
            scrollPageIntoView: function(a) {
                if (this.pdfDocument) {
                    if (arguments.length > 1 || "number" == typeof a) {
                        console.warn("Call of scrollPageIntoView() with obsolete signature.");
                        var b = {};
                        "number" == typeof a && (b.pageNumber = a),
                        arguments[1] instanceof Array && (b.destArray = arguments[1]),
                        a = b
                    }
                    var c = a.pageNumber || 0,
                    d = a.destArray || null,
                    e = a.allowNegativeOffset || !1;
                    if (this.isInPresentationMode || !d) return void this._setCurrentPageNumber(c, !0);
                    var f = this._pages[c - 1];
                    if (!f) return void console.error('PDFViewer_scrollPageIntoView: Invalid "pageNumber" parameter.');
                    var g, h, i = 0,
                    j = 0,
                    k = 0,
                    o = 0,
                    q = f.rotation % 180 !== 0,
                    s = (q ? f.height: f.width) / f.scale / p,
                    u = (q ? f.width: f.height) / f.scale / p,
                    v = 0;
                    switch (d[1].name) {
                    case "XYZ":
                        i = d[2],
                        j = d[3],
                        v = d[4],
                        i = null !== i ? i: 0,
                        j = null !== j ? j: u;
                        break;
                    case "Fit":
                    case "FitB":
                        v = "page-fit";
                        break;
                    case "FitH":
                    case "FitBH":
                        j = d[2],
                        v = "page-width",
                        null === j && this._location && (i = this._location.left, j = this._location.top);
                        break;
                    case "FitV":
                    case "FitBV":
                        i = d[2],
                        k = s,
                        o = u,
                        v = "page-height";
                        break;
                    case "FitR":
                        i = d[2],
                        j = d[3],
                        k = d[4] - i,
                        o = d[5] - j;
                        var w = this.removePageBorders ? 0 : m,
                        x = this.removePageBorders ? 0 : n;
                        g = (this.container.clientWidth - w) / k / p,
                        h = (this.container.clientHeight - x) / o / p,
                        v = Math.min(Math.abs(g), Math.abs(h));
                        break;
                    default:
                        return void console.error("PDFViewer_scrollPageIntoView: '" + d[1].name + "' is not a valid destination type.")
                    }
                    if (v && v !== this._currentScale ? this.currentScaleValue = v: this._currentScale === l && (this.currentScaleValue = r), "page-fit" === v && !d[4]) return void t(f.div);
                    var y = [f.viewport.convertToViewportPoint(i, j), f.viewport.convertToViewportPoint(i + k, j + o)],
                    z = Math.min(y[0][0], y[1][0]),
                    A = Math.min(y[0][1], y[1][1]);
                    e || (z = Math.max(z, 0), A = Math.max(A, 0)),
                    t(f.div, {
                        left: z,
                        top: A
                    })
                }
            },
            _updateLocation: function(a) {
                var b = this._currentScale,
                c = this._currentScaleValue,
                d = parseFloat(c) === b ? Math.round(1e4 * b) / 100 : c,
                e = a.id,
                f = "#page=" + e;
                f += "&zoom=" + d;
                var g = this._pages[e - 1],
                h = this.container,
                i = g.getPagePoint(h.scrollLeft - a.x, h.scrollTop - a.y),
                j = Math.round(i[0]),
                k = Math.round(i[1]);
                f += "," + j + "," + k,
                this._location = {
                    pageNumber: e,
                    scale: d,
                    top: k,
                    left: j,
                    pdfOpenParams: f
                }
            },
            update: function() {
                var a = this._getVisiblePages(),
                b = a.views;
                if (0 !== b.length) {
                    var c = Math.max(D, 2 * b.length + 1);
                    this._buffer.resize(c),
                    this.renderingQueue.renderHighestPriority(a);
                    for (var d = this._currentPageNumber,
                    e = a.first,
                    f = 0,
                    g = b.length,
                    h = !1; f < g; ++f) {
                        var i = b[f];
                        if (i.percent < 100) break;
                        if (i.id === d) {
                            h = !0;
                            break
                        }
                    }
                    h || (d = b[0].id),
                    this.isInPresentationMode || this._setCurrentPageNumber(d),
                    this._updateLocation(e),
                    this.eventBus.dispatch("updateviewarea", {
                        source: this,
                        location: this._location
                    })
                }
            },
            containsElement: function(a) {
                return this.container.contains(a)
            },
            focus: function() {
                this.container.focus()
            },
            get isInPresentationMode() {
                return this.presentationModeState === C.FULLSCREEN
            },
            get isChangingPresentationMode() {
                return this.presentationModeState === C.CHANGING
            },
            get isHorizontalScrollbarEnabled() {
                return ! this.isInPresentationMode && this.container.scrollWidth > this.container.clientWidth
            },
            _getVisiblePages: function() {
                if (!this.isInPresentationMode) return v(this.container, this._pages, !0);
                var a = [],
                b = this._pages[this._currentPageNumber - 1];
                return a.push({
                    id: b.id,
                    view: b
                }),
                {
                    first: b,
                    last: b,
                    views: a
                }
            },
            cleanup: function() {
                for (var a = 0,
                b = this._pages.length; a < b; a++) this._pages[a] && this._pages[a].renderingState !== x.FINISHED && this._pages[a].reset()
            },
            _cancelRendering: function() {
                for (var a = 0,
                b = this._pages.length; a < b; a++) this._pages[a] && this._pages[a].cancelRendering()
            },
            _ensurePdfPageLoaded: function(a) {
                if (a.pdfPage) return Promise.resolve(a.pdfPage);
                var b = a.id;
                if (this._pagesRequests[b]) return this._pagesRequests[b];
                var c = this.pdfDocument.getPage(b).then(function(c) {
                    return a.setPdfPage(c),
                    this._pagesRequests[b] = null,
                    c
                }.bind(this));
                return this._pagesRequests[b] = c,
                c
            },
            forceRendering: function(a) {
                var b = a || this._getVisiblePages(),
                c = this.renderingQueue.getHighestPriority(b, this._pages, this.scroll.down);
                return !! c && (this._ensurePdfPageLoaded(c).then(function() {
                    this.renderingQueue.renderView(c)
                }.bind(this)), !0)
            },
            getPageTextContent: function(a) {
                return this.pdfDocument.getPage(a + 1).then(function(a) {
                    return a.getTextContent({
                        normalizeWhitespace: !0
                    })
                })
            },
            createTextLayerBuilder: function(a, b, c, d) {
                return new z({
                    textLayerDiv: a,
                    eventBus: this.eventBus,
                    pageIndex: b,
                    viewport: c,
                    findController: this.isInPresentationMode ? null: this.findController,
                    enhanceTextSelection: !this.isInPresentationMode && d
                })
            },
            createAnnotationLayerBuilder: function(a, b, c) {
                return new A({
                    pageDiv: a,
                    pdfPage: b,
                    renderInteractiveForms: c,
                    linkService: this.linkService,
                    downloadManager: this.downloadManager
                })
            },
            setFindController: function(a) {
                this.findController = a
            },
            getPagesOverview: function() {
                var a = this._pages.map(function(a) {
                    var b = a.pdfPage.getViewport(1);
                    return {
                        width: b.width,
                        height: b.height,
                        rotation: b.rotation
                    }
                });
                if (!this.enablePrintAutoRotate) return a;
                var b = c(a[0]);
                return a.map(function(a) {
                    return b === c(a) ? a: {
                        width: a.height,
                        height: a.width,
                        rotation: (a.rotation + 90) % 360
                    }
                })
            }
        },
        d
    } ();
    b.PresentationModeState = C,
    b.PDFViewer = E
},
function(a, b, c) {
    var d = c(0),
    e = d.SCROLLBAR_PADDING,
    f = d.mozL10n,
    g = function() {
        function a(a, b, c) {
            this.toolbar = a.toolbar,
            this.toggleButton = a.toggleButton,
            this.toolbarButtonContainer = a.toolbarButtonContainer,
            this.buttons = [{
                element: a.presentationModeButton,
                eventName: "presentationmode",
                close: !0
            },
//            {
//                element: a.openFileButton,
//                eventName: "openfile",
//                close: !0
//            },
//            {
//                element: a.printButton,
//                eventName: "print",
//                close: !0
//            },
//            {
//                element: a.downloadButton,
//                eventName: "download",
//                close: !0
//            },
            {
                element: a.viewBookmarkButton,
                eventName: null,
                close: !0
            },
            {
                element: a.firstPageButton,
                eventName: "firstpage",
                close: !0
            },
            {
                element: a.lastPageButton,
                eventName: "lastpage",
                close: !0
            },
            {
                element: a.pageRotateCwButton,
                eventName: "rotatecw",
                close: !1
            },
            {
                element: a.pageRotateCcwButton,
                eventName: "rotateccw",
                close: !1
            },
            {
                element: a.toggleHandToolButton,
                eventName: "togglehandtool",
                close: !0
            },
            {
                element: a.documentPropertiesButton,
                eventName: "documentproperties",
                close: !0
            }],
            this.items = {
                firstPage: a.firstPageButton,
                lastPage: a.lastPageButton,
                pageRotateCw: a.pageRotateCwButton,
                pageRotateCcw: a.pageRotateCcwButton
            },
            this.mainContainer = b,
            this.eventBus = c,
            this.opened = !1,
            this.containerHeight = null,
            this.previousContainerHeight = null,
            this.reset(),
            this._bindClickListeners(),
            this._bindHandToolListener(a.toggleHandToolButton),
            this.eventBus.on("resize", this._setMaxHeight.bind(this))
        }
        return a.prototype = {
            get isOpen() {
                return this.opened
            },
            setPageNumber: function(a) {
                this.pageNumber = a,
                this._updateUIState()
            },
            setPagesCount: function(a) {
                this.pagesCount = a,
                this._updateUIState()
            },
            reset: function() {
                this.pageNumber = 0,
                this.pagesCount = 0,
                this._updateUIState()
            },
            _updateUIState: function() {
                var a = this.items;
                a.firstPage.disabled = this.pageNumber <= 1,
                a.lastPage.disabled = this.pageNumber >= this.pagesCount,
                a.pageRotateCw.disabled = 0 === this.pagesCount,
                a.pageRotateCcw.disabled = 0 === this.pagesCount
            },
            _bindClickListeners: function() {
                this.toggleButton.addEventListener("click", this.toggle.bind(this));
                for (var a in this.buttons) {
                    var b = this.buttons[a].element,
                    c = this.buttons[a].eventName,
                    d = this.buttons[a].close;
                    b.addEventListener("click",
                    function(a, b) {
                        null !== a && this.eventBus.dispatch(a, {
                            source: this
                        }),
                        b && this.close()
                    }.bind(this, c, d))
                }
            },
            _bindHandToolListener: function(a) {
                var b = !1;
                this.eventBus.on("handtoolchanged",
                function(c) {
                    b !== c.isActive && (b = c.isActive, b ? (a.title = f.get("hand_tool_disable.title", null, "Disable hand tool"), a.firstElementChild.textContent = f.get("hand_tool_disable_label", null, "Disable hand tool")) : (a.title = f.get("hand_tool_enable.title", null, "Enable hand tool"), a.firstElementChild.textContent = f.get("hand_tool_enable_label", null, "Enable hand tool")))
                })
            },
            open: function() {
                this.opened || (this.opened = !0, this._setMaxHeight(), this.toggleButton.classList.add("toggled"), this.toolbar.classList.remove("hidden"))
            },
            close: function() {
                this.opened && (this.opened = !1, this.toolbar.classList.add("hidden"), this.toggleButton.classList.remove("toggled"))
            },
            toggle: function() {
                this.opened ? this.close() : this.open()
            },
            _setMaxHeight: function() {
                this.opened && (this.containerHeight = this.mainContainer.clientHeight, this.containerHeight !== this.previousContainerHeight && (this.toolbarButtonContainer.setAttribute("style", "max-height: " + (this.containerHeight - e) + "px;"), this.previousContainerHeight = this.containerHeight))
            }
        },
        a
    } ();
    b.SecondaryToolbar = g
},
function(a, b, c) {
    function d() {}
    var e = c(2),
    f = c(1),
    g = 300,
    h = function() {
        function a(a) {
            this.textLayerDiv = a.textLayerDiv,
            this.eventBus = a.eventBus || e.getGlobalEventBus(),
            this.textContent = null,
            this.renderingDone = !1,
            this.pageIdx = a.pageIndex,
            this.pageNumber = this.pageIdx + 1,
            this.matches = [],
            this.viewport = a.viewport,
            this.textDivs = [],
            this.findController = a.findController || null,
            this.textLayerRenderTask = null,
            this.enhanceTextSelection = a.enhanceTextSelection,
            this._bindMouse()
        }
        return a.prototype = {
            _finishRendering: function() {
                if (this.renderingDone = !0, !this.enhanceTextSelection) {
                    var a = document.createElement("div");
                    a.className = "endOfContent",
                    this.textLayerDiv.appendChild(a)
                }
                this.eventBus.dispatch("textlayerrendered", {
                    source: this,
                    pageNumber: this.pageNumber,
                    numTextDivs: this.textDivs.length
                })
            },
            render: function(a) {
                if (this.textContent && !this.renderingDone) {
                    this.cancel(),
                    this.textDivs = [];
                    var b = document.createDocumentFragment();
                    this.textLayerRenderTask = f.renderTextLayer({
                        textContent: this.textContent,
                        container: b,
                        viewport: this.viewport,
                        textDivs: this.textDivs,
                        timeout: a,
                        enhanceTextSelection: this.enhanceTextSelection
                    }),
                    this.textLayerRenderTask.promise.then(function() {
                        this.textLayerDiv.appendChild(b),
                        this._finishRendering(),
                        this.updateMatches()
                    }.bind(this),
                    function(a) {})
                }
            },
            cancel: function() {
                this.textLayerRenderTask && (this.textLayerRenderTask.cancel(), this.textLayerRenderTask = null)
            },
            setTextContent: function(a) {
                this.cancel(),
                this.textContent = a
            },
            convertMatches: function(a, b) {
                var c = 0,
                d = 0,
                e = this.textContent.items,
                f = e.length - 1,
                g = null === this.findController ? 0 : this.findController.state.query.length,
                h = [];
                if (!a) return h;
                for (var i = 0,
                j = a.length; i < j; i++) {
                    for (var k = a[i]; c !== f && k >= d + e[c].str.length;) d += e[c].str.length,
                    c++;
                    c === e.length && console.error("Could not find a matching mapping");
                    var l = {
                        begin: {
                            divIdx: c,
                            offset: k - d
                        }
                    };
                    for (k += b ? b[i] : g; c !== f && k > d + e[c].str.length;) d += e[c].str.length,
                    c++;
                    l.end = {
                        divIdx: c,
                        offset: k - d
                    },
                    h.push(l)
                }
                return h
            },
            renderMatches: function(a) {
                function b(a, b) {
                    var d = a.divIdx;
                    e[d].textContent = "",
                    c(d, 0, a.offset, b)
                }
                function c(a, b, c, f) {
                    var g = e[a],
                    h = d[a].str.substring(b, c),
                    i = document.createTextNode(h);
                    if (f) {
                        var j = document.createElement("span");
                        return j.className = f,
                        j.appendChild(i),
                        void g.appendChild(j)
                    }
                    g.appendChild(i)
                }
                if (0 !== a.length) {
                    var d = this.textContent.items,
                    e = this.textDivs,
                    f = null,
                    g = this.pageIdx,
                    h = null !== this.findController && g === this.findController.selected.pageIdx,
                    i = null === this.findController ? -1 : this.findController.selected.matchIdx,
                    j = null !== this.findController && this.findController.state.highlightAll,
                    k = {
                        divIdx: -1,
                        offset: void 0
                    },
                    l = i,
                    m = l + 1;
                    if (j) l = 0,
                    m = a.length;
                    else if (!h) return;
                    for (var n = l; n < m; n++) {
                        var o = a[n],
                        p = o.begin,
                        q = o.end,
                        r = h && n === i,
                        s = r ? " selected": "";
                        if (this.findController && this.findController.updateMatchPosition(g, n, e, p.divIdx), f && p.divIdx === f.divIdx ? c(f.divIdx, f.offset, p.offset) : (null !== f && c(f.divIdx, f.offset, k.offset), b(p)), p.divIdx === q.divIdx) c(p.divIdx, p.offset, q.offset, "highlight" + s);
                        else {
                            c(p.divIdx, p.offset, k.offset, "highlight begin" + s);
                            for (var t = p.divIdx + 1,
                            u = q.divIdx; t < u; t++) e[t].className = "highlight middle" + s;
                            b(q, "highlight end" + s)
                        }
                        f = q
                    }
                    f && c(f.divIdx, f.offset, k.offset)
                }
            },
            updateMatches: function() {
                if (this.renderingDone) {
                    for (var a = this.matches,
                    b = this.textDivs,
                    c = this.textContent.items,
                    d = -1,
                    e = 0,
                    f = a.length; e < f; e++) {
                        for (var g = a[e], h = Math.max(d, g.begin.divIdx), i = h, j = g.end.divIdx; i <= j; i++) {
                            var k = b[i];
                            k.textContent = c[i].str,
                            k.className = ""
                        }
                        d = g.end.divIdx + 1
                    }
                    if (null !== this.findController && this.findController.active) {
                        var l, m;
                        null !== this.findController && (l = this.findController.pageMatches[this.pageIdx] || null, m = this.findController.pageMatchesLength ? this.findController.pageMatchesLength[this.pageIdx] || null: null),
                        this.matches = this.convertMatches(l, m),
                        this.renderMatches(this.matches)
                    }
                }
            },
            _bindMouse: function() {
                var a = this.textLayerDiv,
                b = this,
                c = null;
                a.addEventListener("mousedown",
                function(d) {
                    if (b.enhanceTextSelection && b.textLayerRenderTask) return b.textLayerRenderTask.expandTextDivs(!0),
                    void(c && (clearTimeout(c), c = null));
                    var e = a.querySelector(".endOfContent");
                    if (e) {
                        var f = d.target !== a;
                        if (f = f && "none" !== window.getComputedStyle(e).getPropertyValue("-moz-user-select")) {
                            var g = a.getBoundingClientRect(),
                            h = Math.max(0, (d.pageY - g.top) / g.height);
                            e.style.top = (100 * h).toFixed(2) + "%"
                        }
                        e.classList.add("active")
                    }
                }),
                a.addEventListener("mouseup",
                function(d) {
                    if (b.enhanceTextSelection && b.textLayerRenderTask) return void(c = setTimeout(function() {
                        b.textLayerRenderTask && b.textLayerRenderTask.expandTextDivs(!1),
                        c = null
                    },
                    g));
                    var e = a.querySelector(".endOfContent");
                    e && (e.style.top = "", e.classList.remove("active"))
                })
            }
        },
        a
    } ();
    d.prototype = {
        createTextLayerBuilder: function(a, b, c, d) {
            return new h({
                textLayerDiv: a,
                pageIndex: b,
                viewport: c,
                enhanceTextSelection: d
            })
        }
    },
    b.TextLayerBuilder = h,
    b.DefaultTextLayerFactory = d
},
function(a, b, c) {
    var d = c(0),
    e = d.mozL10n,
    f = d.noContextMenuHandler,
    g = d.animationStarted,
    h = d.localized,
    i = d.DEFAULT_SCALE_VALUE,
    j = d.DEFAULT_SCALE,
    k = d.MIN_SCALE,
    l = d.MAX_SCALE,
    m = "visiblePageIsLoading",
    n = 8,
    o = 22,
    p = function() {
        function a(a, b, c) {
            this.toolbar = a.container,
            this.mainContainer = b,
            this.eventBus = c,
            this.items = a,
            this._wasLocalized = !1,
            this.reset(),
            this._bindListeners()
        }
        return a.prototype = {
            setPageNumber: function(a, b) {
                this.pageNumber = a,
                this.pageLabel = b,
                this._updateUIState(!1)
            },
            setPagesCount: function(a, b) {
                this.pagesCount = a,
                this.hasPageLabels = b,
                this._updateUIState(!0)
            },
            setPageScale: function(a, b) {
                this.pageScaleValue = a,
                this.pageScale = b,
                this._updateUIState(!1)
            },
            reset: function() {
                this.pageNumber = 0,
                this.pageLabel = null,
                this.hasPageLabels = !1,
                this.pagesCount = 0,
                this.pageScaleValue = i,
                this.pageScale = j,
                this._updateUIState(!0)
            },
            _bindListeners: function() {
                var a = this.eventBus,
                b = this,
                c = this.items;
                c.previous.addEventListener("click",
                function() {
                    a.dispatch("previouspage")
                }),
                c.next.addEventListener("click",
                function() {
                    a.dispatch("nextpage")
                }),
                c.zoomIn.addEventListener("click",
                function() {
                    a.dispatch("zoomin")
                }),
                c.zoomOut.addEventListener("click",
                function() {
                    a.dispatch("zoomout")
                }),
                c.pageNumber.addEventListener("click",
                function() {
                    this.select()
                }),
                c.pageNumber.addEventListener("change",
                function() {
                    a.dispatch("pagenumberchanged", {
                        source: b,
                        value: this.value
                    })
                }),
                c.scaleSelect.addEventListener("change",
                function() {
                    "custom" !== this.value && a.dispatch("scalechanged", {
                        source: b,
                        value: this.value
                    })
                }),
                c.presentationModeButton.addEventListener("click",
                function(b) {
                    a.dispatch("presentationmode")
                }),
                c.openFile.addEventListener("click",
                function(b) {
                    a.dispatch("openfile")
                }),
                c.print.addEventListener("click",
                function(b) {
                    a.dispatch("print")
                }),
                c.download.addEventListener("click",
                function(b) {
                    a.dispatch("download")
                }),
                c.scaleSelect.oncontextmenu = f,
                h.then(this._localized.bind(this))
            },
            _localized: function() {
                this._wasLocalized = !0,
                this._adjustScaleWidth(),
                this._updateUIState(!0)
            },
            _updateUIState: function(a) {
                function b(a, b) {
                    for (var c = g.scaleSelect.options,
                    d = !1,
                    f = 0,
                    h = c.length; f < h; f++) {
                        var i = c[f];
                        i.value === a ? (i.selected = !0, d = !0) : i.selected = !1
                    }
                    if (!d) {
                        var j = Math.round(1e4 * b) / 100;
                        g.customScaleOption.textContent = e.get("page_scale_percent", {
                            scale: j
                        },
                        "{{scale}}%"),
                        g.customScaleOption.selected = !0
                    }
                }
                if (this._wasLocalized) {
                    var c = this.pageNumber,
                    d = (this.pageScaleValue || this.pageScale).toString(),
                    f = this.pageScale,
                    g = this.items,
                    h = this.pagesCount;
                    a && (this.hasPageLabels ? g.pageNumber.type = "text": (g.pageNumber.type = "number", g.numPages.textContent = e.get("of_pages", {
                        pagesCount: h
                    },
                    "of {{pagesCount}}")), g.pageNumber.max = h),
                    this.hasPageLabels ? (g.pageNumber.value = this.pageLabel, g.numPages.textContent = e.get("page_of_pages", {
                        pageNumber: c,
                        pagesCount: h
                    },
                    "({{pageNumber}} of {{pagesCount}})")) : g.pageNumber.value = c,
                    g.previous.disabled = c <= 1,
                    g.next.disabled = c >= h,
                    g.zoomOut.disabled = f <= k,
                    g.zoomIn.disabled = f >= l,
                    b(d, f)
                }
            },
            updateLoadingIndicatorState: function(a) {
                var b = this.items.pageNumber;
                a ? b.classList.add(m) : b.classList.remove(m)
            },
            _adjustScaleWidth: function() {
                var a = this.items.scaleSelectContainer,
                b = this.items.scaleSelect;
                g.then(function() {
                    if (0 === a.clientWidth && a.setAttribute("style", "display: inherit;"), a.clientWidth > 0) {
                        b.setAttribute("style", "min-width: inherit;");
                        var c = b.clientWidth + n;
                        b.setAttribute("style", "min-width: " + (c + o) + "px;"),
                        a.setAttribute("style", "min-width: " + c + "px; max-width: " + c + "px;")
                    }
                })
            }
        },
        a
    } ();
    b.Toolbar = p
},
function(a, b, c) {
    var d = 20,
    e = function() {
        function a(a, b) {
            this.fingerprint = a,
            this.cacheSize = b || d,
            this.isInitializedPromiseResolved = !1,
            this.initializedPromise = this._readFromStorage().then(function(a) {
                this.isInitializedPromiseResolved = !0;
                var b = JSON.parse(a || "{}");
                "files" in b || (b.files = []),
                b.files.length >= this.cacheSize && b.files.shift();
                for (var c, d = 0,
                e = b.files.length; d < e; d++) {
                    var f = b.files[d];
                    if (f.fingerprint === this.fingerprint) {
                        c = d;
                        break
                    }
                }
                "number" != typeof c && (c = b.files.push({
                    fingerprint: this.fingerprint
                }) - 1),
                this.file = b.files[c],
                this.database = b
            }.bind(this))
        }
        return a.prototype = {
            _writeToStorage: function() {
                return new Promise(function(a) {
                    var b = JSON.stringify(this.database);
                    localStorage.setItem("pdfjs.history", b),
                    a()
                }.bind(this))
            },
            _readFromStorage: function() {
                return new Promise(function(a) {
                    var b = localStorage.getItem("pdfjs.history");
                    if (!b) {
                        var c = localStorage.getItem("database");
                        if (c) try {
                            var d = JSON.parse(c);
                            "string" == typeof d.files[0].fingerprint && (localStorage.setItem("pdfjs.history", c), localStorage.removeItem("database"), b = c)
                        } catch(e) {}
                    }
                    a(b)
                })
            },
            set: function(a, b) {
                if (this.isInitializedPromiseResolved) return this.file[a] = b,
                this._writeToStorage()
            },
            setMultiple: function(a) {
                if (this.isInitializedPromiseResolved) {
                    for (var b in a) this.file[b] = a[b];
                    return this._writeToStorage()
                }
            },
            get: function(a, b) {
                return this.isInitializedPromiseResolved ? this.file[a] || b: b
            }
        },
        a
    } ();
    b.ViewHistory = e
},
function(a, b, c) {
    function d(a) {
        var b = location.search.match(new RegExp("[?&]" + a + "=([^&]+)", "i"));
        return null == b || b.length < 1 ? "": b[1]
    }
    function e() {
        return {
            appContainer: document.body,
            mainContainer: document.getElementById("viewerContainer"),
            viewerContainer: document.getElementById("viewer"),
            eventBus: null,
            toolbar: {
                container: document.getElementById("toolbarViewer"),
                numPages: document.getElementById("numPages"),
                pageNumber: document.getElementById("pageNumber"),
                scaleSelectContainer: document.getElementById("scaleSelectContainer"),
                scaleSelect: document.getElementById("scaleSelect"),
                customScaleOption: document.getElementById("customScaleOption"),
                previous: document.getElementById("previous"),
                next: document.getElementById("next"),
                zoomIn: document.getElementById("zoomIn"),
                zoomOut: document.getElementById("zoomOut"),
                viewFind: document.getElementById("viewFind"),
                openFile: document.getElementById("openFile"),
                print: document.getElementById("print"),
                presentationModeButton: document.getElementById("presentationMode"),
                download: document.getElementById("download"),
                viewBookmark: document.getElementById("viewBookmark")
            },
            secondaryToolbar: {
                toolbar: document.getElementById("secondaryToolbar"),
                toggleButton: document.getElementById("secondaryToolbarToggle"),
                toolbarButtonContainer: document.getElementById("secondaryToolbarButtonContainer"),
                presentationModeButton: document.getElementById("secondaryPresentationMode"),
//                openFileButton: document.getElementById("secondaryOpenFile"),
//                printButton: document.getElementById("secondaryPrint"),
//                downloadButton: document.getElementById("secondaryDownload"),
                viewBookmarkButton: document.getElementById("secondaryViewBookmark"),
                firstPageButton: document.getElementById("firstPage"),
                lastPageButton: document.getElementById("lastPage"),
                pageRotateCwButton: document.getElementById("pageRotateCw"),
                pageRotateCcwButton: document.getElementById("pageRotateCcw"),
                toggleHandToolButton: document.getElementById("toggleHandTool"),
                documentPropertiesButton: document.getElementById("documentProperties")
            },
            fullscreen: {
                contextFirstPage: document.getElementById("contextFirstPage"),
                contextLastPage: document.getElementById("contextLastPage"),
                contextPageRotateCw: document.getElementById("contextPageRotateCw"),
                contextPageRotateCcw: document.getElementById("contextPageRotateCcw")
            },
            sidebar: {
                mainContainer: document.getElementById("mainContainer"),
                outerContainer: document.getElementById("outerContainer"),
                toggleButton: document.getElementById("sidebarToggle"),
                thumbnailButton: document.getElementById("viewThumbnail"),
                outlineButton: document.getElementById("viewOutline"),
                attachmentsButton: document.getElementById("viewAttachments"),
                thumbnailView: document.getElementById("thumbnailView"),
                outlineView: document.getElementById("outlineView"),
                attachmentsView: document.getElementById("attachmentsView")
            },
            findBar: {
                bar: document.getElementById("findbar"),
                toggleButton: document.getElementById("viewFind"),
                findField: document.getElementById("findInput"),
                highlightAllCheckbox: document.getElementById("findHighlightAll"),
                caseSensitiveCheckbox: document.getElementById("findMatchCase"),
                findMsg: document.getElementById("findMsg"),
                findResultsCount: document.getElementById("findResultsCount"),
                findStatusIcon: document.getElementById("findStatusIcon"),
                findPreviousButton: document.getElementById("findPrevious"),
                findNextButton: document.getElementById("findNext")
            },
            passwordOverlay: {
                overlayName: "passwordOverlay",
                container: document.getElementById("passwordOverlay"),
                label: document.getElementById("passwordText"),
                input: document.getElementById("password"),
                submitButton: document.getElementById("passwordSubmit"),
                cancelButton: document.getElementById("passwordCancel")
            },
            documentProperties: {
                overlayName: "documentPropertiesOverlay",
                container: document.getElementById("documentPropertiesOverlay"),
                closeButton: document.getElementById("documentPropertiesClose"),
                fields: {
                    fileName: document.getElementById("fileNameField"),
                    fileSize: document.getElementById("fileSizeField"),
                    title: document.getElementById("titleField"),
                    author: document.getElementById("authorField"),
                    subject: document.getElementById("subjectField"),
                    keywords: document.getElementById("keywordsField"),
                    creationDate: document.getElementById("creationDateField"),
                    modificationDate: document.getElementById("modificationDateField"),
                    creator: document.getElementById("creatorField"),
                    producer: document.getElementById("producerField"),
                    version: document.getElementById("versionField"),
                    pageCount: document.getElementById("pageCountField")
                }
            },
            errorWrapper: {
                container: document.getElementById("errorWrapper"),
                errorMessage: document.getElementById("errorMessage"),
                closeButton: document.getElementById("errorClose"),
                errorMoreInfo: document.getElementById("errorMoreInfo"),
                moreInfoButton: document.getElementById("errorShowMore"),
                lessInfoButton: document.getElementById("errorShowLess")
            },
            printContainer: document.getElementById("printContainer"),
            openFileInputName: "fileInput",
            debuggerScriptPath: "./debugger.js",
            defaultUrl: h
        }
    }
    function f() {
        var a = e();
        window.PDFViewerApplication = g.PDFViewerApplication,
        g.PDFViewerApplication.run(a)
    }
    var g, h = d("pdf");
    g = c(6),
    c(9),
    "interactive" === document.readyState || "complete" === document.readyState ? f() : document.addEventListener("DOMContentLoaded", f, !0)
}]);
//# sourceMappingURL=all.min.js.map
